
Lab 4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000078  00800100  00002644  000026d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002644  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000353  00800178  00800178  00002750  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002750  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002780  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000260  00000000  00000000  000027c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002d68  00000000  00000000  00002a20  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001077  00000000  00000000  00005788  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000016b2  00000000  00000000  000067ff  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000c9c  00000000  00000000  00007eb4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000958  00000000  00000000  00008b50  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000266e  00000000  00000000  000094a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000200  00000000  00000000  0000bb16  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
       4:	0c 94 39 06 	jmp	0xc72	; 0xc72 <__vector_1>
       8:	0c 94 a8 06 	jmp	0xd50	; 0xd50 <__vector_2>
       c:	0c 94 17 07 	jmp	0xe2e	; 0xe2e <__vector_3>
      10:	0c 94 86 07 	jmp	0xf0c	; 0xf0c <__vector_4>
      14:	0c 94 f5 07 	jmp	0xfea	; 0xfea <__vector_5>
      18:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      1c:	0c 94 60 0e 	jmp	0x1cc0	; 0x1cc0 <__vector_7>
      20:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      24:	0c 94 0e 0e 	jmp	0x1c1c	; 0x1c1c <__vector_9>
      28:	0c 94 64 08 	jmp	0x10c8	; 0x10c8 <__vector_10>
      2c:	0c 94 d3 08 	jmp	0x11a6	; 0x11a6 <__vector_11>
      30:	0c 94 42 09 	jmp	0x1284	; 0x1284 <__vector_12>
      34:	0c 94 b1 09 	jmp	0x1362	; 0x1362 <__vector_13>
      38:	0c 94 20 0a 	jmp	0x1440	; 0x1440 <__vector_14>
      3c:	0c 94 8f 0a 	jmp	0x151e	; 0x151e <__vector_15>
      40:	0c 94 fe 0a 	jmp	0x15fc	; 0x15fc <__vector_16>
      44:	0c 94 6d 0b 	jmp	0x16da	; 0x16da <__vector_17>
      48:	0c 94 dc 0b 	jmp	0x17b8	; 0x17b8 <__vector_18>
      4c:	0c 94 4b 0c 	jmp	0x1896	; 0x1896 <__vector_19>
      50:	0c 94 ba 0c 	jmp	0x1974	; 0x1974 <__vector_20>
      54:	0c 94 29 0d 	jmp	0x1a52	; 0x1a52 <__vector_21>
      58:	0c 94 98 0d 	jmp	0x1b30	; 0x1b30 <__vector_22>

0000005c <__ctors_end>:
      5c:	11 24       	eor	r1, r1
      5e:	1f be       	out	0x3f, r1	; 63
      60:	cf ef       	ldi	r28, 0xFF	; 255
      62:	d4 e0       	ldi	r29, 0x04	; 4
      64:	de bf       	out	0x3e, r29	; 62
      66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
      68:	11 e0       	ldi	r17, 0x01	; 1
      6a:	a0 e0       	ldi	r26, 0x00	; 0
      6c:	b1 e0       	ldi	r27, 0x01	; 1
      6e:	e4 e4       	ldi	r30, 0x44	; 68
      70:	f6 e2       	ldi	r31, 0x26	; 38
      72:	02 c0       	rjmp	.+4      	; 0x78 <__do_copy_data+0x10>
      74:	05 90       	lpm	r0, Z+
      76:	0d 92       	st	X+, r0
      78:	a8 37       	cpi	r26, 0x78	; 120
      7a:	b1 07       	cpc	r27, r17
      7c:	d9 f7       	brne	.-10     	; 0x74 <__do_copy_data+0xc>

0000007e <__do_clear_bss>:
      7e:	24 e0       	ldi	r18, 0x04	; 4
      80:	a8 e7       	ldi	r26, 0x78	; 120
      82:	b1 e0       	ldi	r27, 0x01	; 1
      84:	01 c0       	rjmp	.+2      	; 0x88 <.do_clear_bss_start>

00000086 <.do_clear_bss_loop>:
      86:	1d 92       	st	X+, r1

00000088 <.do_clear_bss_start>:
      88:	ab 3c       	cpi	r26, 0xCB	; 203
      8a:	b2 07       	cpc	r27, r18
      8c:	e1 f7       	brne	.-8      	; 0x86 <.do_clear_bss_loop>
      8e:	0e 94 54 03 	call	0x6a8	; 0x6a8 <main>
      92:	0c 94 20 13 	jmp	0x2640	; 0x2640 <_exit>

00000096 <__bad_interrupt>:
      96:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009a <UpDownPushBuffer>:
#include "GUI.h"


// Add continuous loop
void UpDownPushBuffer(General *self)
{
      9a:	cf 92       	push	r12
      9c:	df 92       	push	r13
      9e:	ef 92       	push	r14
      a0:	ff 92       	push	r15
      a2:	0f 93       	push	r16
      a4:	1f 93       	push	r17
      a6:	cf 93       	push	r28
      a8:	df 93       	push	r29
      aa:	ec 01       	movw	r28, r24
	
	if (!(PINB & (1 << 6)))							//Plus
      ac:	1e 99       	sbic	0x03, 6	; 3
      ae:	4f c0       	rjmp	.+158    	; 0x14e <UpDownPushBuffer+0xb4>
	{
		
		ASYNC(self->Active, plusPulse, 0);
      b0:	0a 85       	ldd	r16, Y+10	; 0x0a
      b2:	1b 85       	ldd	r17, Y+11	; 0x0b
      b4:	c1 2c       	mov	r12, r1
      b6:	d1 2c       	mov	r13, r1
      b8:	0f 2e       	mov	r0, r31
      ba:	fe e4       	ldi	r31, 0x4E	; 78
      bc:	ef 2e       	mov	r14, r31
      be:	f4 e0       	ldi	r31, 0x04	; 4
      c0:	ff 2e       	mov	r15, r31
      c2:	f0 2d       	mov	r31, r0
      c4:	20 e0       	ldi	r18, 0x00	; 0
      c6:	30 e0       	ldi	r19, 0x00	; 0
      c8:	a9 01       	movw	r20, r18
      ca:	60 e0       	ldi	r22, 0x00	; 0
      cc:	70 e0       	ldi	r23, 0x00	; 0
      ce:	cb 01       	movw	r24, r22
      d0:	0e 94 00 0f 	call	0x1e00	; 0x1e00 <async>
		self->graphics->frequency = self->Active->frequency;
      d4:	e8 85       	ldd	r30, Y+8	; 0x08
      d6:	f9 85       	ldd	r31, Y+9	; 0x09
      d8:	aa 85       	ldd	r26, Y+10	; 0x0a
      da:	bb 85       	ldd	r27, Y+11	; 0x0b
      dc:	16 96       	adiw	r26, 0x06	; 6
      de:	8d 91       	ld	r24, X+
      e0:	9c 91       	ld	r25, X
      e2:	17 97       	sbiw	r26, 0x07	; 7
      e4:	09 2e       	mov	r0, r25
      e6:	00 0c       	add	r0, r0
      e8:	aa 0b       	sbc	r26, r26
      ea:	bb 0b       	sbc	r27, r27
      ec:	84 83       	std	Z+4, r24	; 0x04
      ee:	95 83       	std	Z+5, r25	; 0x05
      f0:	a6 83       	std	Z+6, r26	; 0x06
      f2:	b7 83       	std	Z+7, r27	; 0x07
		ASYNC(self->graphics, updateGUI, 0);
      f4:	08 85       	ldd	r16, Y+8	; 0x08
      f6:	19 85       	ldd	r17, Y+9	; 0x09
      f8:	0f 2e       	mov	r0, r31
      fa:	f1 ef       	ldi	r31, 0xF1	; 241
      fc:	ef 2e       	mov	r14, r31
      fe:	f2 e0       	ldi	r31, 0x02	; 2
     100:	ff 2e       	mov	r15, r31
     102:	f0 2d       	mov	r31, r0
     104:	20 e0       	ldi	r18, 0x00	; 0
     106:	30 e0       	ldi	r19, 0x00	; 0
     108:	a9 01       	movw	r20, r18
     10a:	60 e0       	ldi	r22, 0x00	; 0
     10c:	70 e0       	ldi	r23, 0x00	; 0
     10e:	cb 01       	movw	r24, r22
     110:	0e 94 00 0f 	call	0x1e00	; 0x1e00 <async>
		if(self->Active->upDownPushFlag != 1){							//prevents several inputs entering if pressed rapidly
     114:	ea 85       	ldd	r30, Y+10	; 0x0a
     116:	fb 85       	ldd	r31, Y+11	; 0x0b
     118:	84 85       	ldd	r24, Z+12	; 0x0c
     11a:	95 85       	ldd	r25, Z+13	; 0x0d
     11c:	01 97       	sbiw	r24, 0x01	; 1
     11e:	09 f4       	brne	.+2      	; 0x122 <UpDownPushBuffer+0x88>
     120:	93 c0       	rjmp	.+294    	; 0x248 <__EEPROM_REGION_LENGTH__+0x48>
			self->Active->upDownPushFlag = 1;
     122:	81 e0       	ldi	r24, 0x01	; 1
     124:	90 e0       	ldi	r25, 0x00	; 0
     126:	95 87       	std	Z+13, r25	; 0x0d
     128:	84 87       	std	Z+12, r24	; 0x0c
			AFTER((SEC(5)/3), self->Active,  delayContPush, 0);
     12a:	0a 85       	ldd	r16, Y+10	; 0x0a
     12c:	1b 85       	ldd	r17, Y+11	; 0x0b
     12e:	0f 2e       	mov	r0, r31
     130:	f4 e6       	ldi	r31, 0x64	; 100
     132:	ef 2e       	mov	r14, r31
     134:	f4 e0       	ldi	r31, 0x04	; 4
     136:	ff 2e       	mov	r15, r31
     138:	f0 2d       	mov	r31, r0
     13a:	20 e0       	ldi	r18, 0x00	; 0
     13c:	30 e0       	ldi	r19, 0x00	; 0
     13e:	a9 01       	movw	r20, r18
     140:	63 e7       	ldi	r22, 0x73	; 115
     142:	7b ec       	ldi	r23, 0xCB	; 203
     144:	80 e0       	ldi	r24, 0x00	; 0
     146:	90 e0       	ldi	r25, 0x00	; 0
     148:	0e 94 00 0f 	call	0x1e00	; 0x1e00 <async>
     14c:	7d c0       	rjmp	.+250    	; 0x248 <__EEPROM_REGION_LENGTH__+0x48>
		}
	}
	
	else if (!(PINB & (1 << 7)))
     14e:	1f 99       	sbic	0x03, 7	; 3
     150:	4f c0       	rjmp	.+158    	; 0x1f0 <UpDownPushBuffer+0x156>
	{
		ASYNC(self->Active, minusPulse, 0);			//Minus		
     152:	0a 85       	ldd	r16, Y+10	; 0x0a
     154:	1b 85       	ldd	r17, Y+11	; 0x0b
     156:	c1 2c       	mov	r12, r1
     158:	d1 2c       	mov	r13, r1
     15a:	0f 2e       	mov	r0, r31
     15c:	f9 e5       	ldi	r31, 0x59	; 89
     15e:	ef 2e       	mov	r14, r31
     160:	f4 e0       	ldi	r31, 0x04	; 4
     162:	ff 2e       	mov	r15, r31
     164:	f0 2d       	mov	r31, r0
     166:	20 e0       	ldi	r18, 0x00	; 0
     168:	30 e0       	ldi	r19, 0x00	; 0
     16a:	a9 01       	movw	r20, r18
     16c:	60 e0       	ldi	r22, 0x00	; 0
     16e:	70 e0       	ldi	r23, 0x00	; 0
     170:	cb 01       	movw	r24, r22
     172:	0e 94 00 0f 	call	0x1e00	; 0x1e00 <async>
		self->graphics->frequency = self->Active->frequency;
     176:	e8 85       	ldd	r30, Y+8	; 0x08
     178:	f9 85       	ldd	r31, Y+9	; 0x09
     17a:	aa 85       	ldd	r26, Y+10	; 0x0a
     17c:	bb 85       	ldd	r27, Y+11	; 0x0b
     17e:	16 96       	adiw	r26, 0x06	; 6
     180:	8d 91       	ld	r24, X+
     182:	9c 91       	ld	r25, X
     184:	17 97       	sbiw	r26, 0x07	; 7
     186:	09 2e       	mov	r0, r25
     188:	00 0c       	add	r0, r0
     18a:	aa 0b       	sbc	r26, r26
     18c:	bb 0b       	sbc	r27, r27
     18e:	84 83       	std	Z+4, r24	; 0x04
     190:	95 83       	std	Z+5, r25	; 0x05
     192:	a6 83       	std	Z+6, r26	; 0x06
     194:	b7 83       	std	Z+7, r27	; 0x07
		ASYNC(self->graphics, updateGUI, 0);
     196:	08 85       	ldd	r16, Y+8	; 0x08
     198:	19 85       	ldd	r17, Y+9	; 0x09
     19a:	0f 2e       	mov	r0, r31
     19c:	f1 ef       	ldi	r31, 0xF1	; 241
     19e:	ef 2e       	mov	r14, r31
     1a0:	f2 e0       	ldi	r31, 0x02	; 2
     1a2:	ff 2e       	mov	r15, r31
     1a4:	f0 2d       	mov	r31, r0
     1a6:	20 e0       	ldi	r18, 0x00	; 0
     1a8:	30 e0       	ldi	r19, 0x00	; 0
     1aa:	a9 01       	movw	r20, r18
     1ac:	60 e0       	ldi	r22, 0x00	; 0
     1ae:	70 e0       	ldi	r23, 0x00	; 0
     1b0:	cb 01       	movw	r24, r22
     1b2:	0e 94 00 0f 	call	0x1e00	; 0x1e00 <async>
		if(self->Active->upDownPushFlag != 1){
     1b6:	ea 85       	ldd	r30, Y+10	; 0x0a
     1b8:	fb 85       	ldd	r31, Y+11	; 0x0b
     1ba:	84 85       	ldd	r24, Z+12	; 0x0c
     1bc:	95 85       	ldd	r25, Z+13	; 0x0d
     1be:	01 97       	sbiw	r24, 0x01	; 1
     1c0:	09 f4       	brne	.+2      	; 0x1c4 <UpDownPushBuffer+0x12a>
     1c2:	42 c0       	rjmp	.+132    	; 0x248 <__EEPROM_REGION_LENGTH__+0x48>
			self->Active->upDownPushFlag = 1;
     1c4:	81 e0       	ldi	r24, 0x01	; 1
     1c6:	90 e0       	ldi	r25, 0x00	; 0
     1c8:	95 87       	std	Z+13, r25	; 0x0d
     1ca:	84 87       	std	Z+12, r24	; 0x0c
			AFTER((SEC(5)/3), self->Active,  delayContPush, 0);
     1cc:	0a 85       	ldd	r16, Y+10	; 0x0a
     1ce:	1b 85       	ldd	r17, Y+11	; 0x0b
     1d0:	0f 2e       	mov	r0, r31
     1d2:	f4 e6       	ldi	r31, 0x64	; 100
     1d4:	ef 2e       	mov	r14, r31
     1d6:	f4 e0       	ldi	r31, 0x04	; 4
     1d8:	ff 2e       	mov	r15, r31
     1da:	f0 2d       	mov	r31, r0
     1dc:	20 e0       	ldi	r18, 0x00	; 0
     1de:	30 e0       	ldi	r19, 0x00	; 0
     1e0:	a9 01       	movw	r20, r18
     1e2:	63 e7       	ldi	r22, 0x73	; 115
     1e4:	7b ec       	ldi	r23, 0xCB	; 203
     1e6:	80 e0       	ldi	r24, 0x00	; 0
     1e8:	90 e0       	ldi	r25, 0x00	; 0
     1ea:	0e 94 00 0f 	call	0x1e00	; 0x1e00 <async>
     1ee:	2c c0       	rjmp	.+88     	; 0x248 <__EEPROM_REGION_LENGTH__+0x48>
		}
	}
	
	else if (!(PINB & (1 << 4)))					//Push
     1f0:	1c 99       	sbic	0x03, 4	; 3
     1f2:	2a c0       	rjmp	.+84     	; 0x248 <__EEPROM_REGION_LENGTH__+0x48>
	{
		if (self->Active->frequency != 0)
     1f4:	0a 85       	ldd	r16, Y+10	; 0x0a
     1f6:	1b 85       	ldd	r17, Y+11	; 0x0b
     1f8:	f8 01       	movw	r30, r16
     1fa:	86 81       	ldd	r24, Z+6	; 0x06
     1fc:	97 81       	ldd	r25, Z+7	; 0x07
     1fe:	00 97       	sbiw	r24, 0x00	; 0
     200:	89 f0       	breq	.+34     	; 0x224 <__EEPROM_REGION_LENGTH__+0x24>
		{
			ASYNC(self->Active, savePulse, 0);
     202:	c1 2c       	mov	r12, r1
     204:	d1 2c       	mov	r13, r1
     206:	0f 2e       	mov	r0, r31
     208:	f1 ea       	ldi	r31, 0xA1	; 161
     20a:	ef 2e       	mov	r14, r31
     20c:	f4 e0       	ldi	r31, 0x04	; 4
     20e:	ff 2e       	mov	r15, r31
     210:	f0 2d       	mov	r31, r0
     212:	20 e0       	ldi	r18, 0x00	; 0
     214:	30 e0       	ldi	r19, 0x00	; 0
     216:	a9 01       	movw	r20, r18
     218:	60 e0       	ldi	r22, 0x00	; 0
     21a:	70 e0       	ldi	r23, 0x00	; 0
     21c:	cb 01       	movw	r24, r22
     21e:	0e 94 00 0f 	call	0x1e00	; 0x1e00 <async>
     222:	12 c0       	rjmp	.+36     	; 0x248 <__EEPROM_REGION_LENGTH__+0x48>
		}
		else if (self->Active->frequency == 0)
     224:	89 2b       	or	r24, r25
     226:	81 f4       	brne	.+32     	; 0x248 <__EEPROM_REGION_LENGTH__+0x48>
		{
			ASYNC(self->Active, restorePulse, 0);
     228:	c1 2c       	mov	r12, r1
     22a:	d1 2c       	mov	r13, r1
     22c:	0f 2e       	mov	r0, r31
     22e:	f9 ea       	ldi	r31, 0xA9	; 169
     230:	ef 2e       	mov	r14, r31
     232:	f4 e0       	ldi	r31, 0x04	; 4
     234:	ff 2e       	mov	r15, r31
     236:	f0 2d       	mov	r31, r0
     238:	20 e0       	ldi	r18, 0x00	; 0
     23a:	30 e0       	ldi	r19, 0x00	; 0
     23c:	a9 01       	movw	r20, r18
     23e:	60 e0       	ldi	r22, 0x00	; 0
     240:	70 e0       	ldi	r23, 0x00	; 0
     242:	cb 01       	movw	r24, r22
     244:	0e 94 00 0f 	call	0x1e00	; 0x1e00 <async>
		}
		 
	}
	ASYNC(self->graphics, updateGUI, 0);
     248:	08 85       	ldd	r16, Y+8	; 0x08
     24a:	19 85       	ldd	r17, Y+9	; 0x09
     24c:	c1 2c       	mov	r12, r1
     24e:	d1 2c       	mov	r13, r1
     250:	0f 2e       	mov	r0, r31
     252:	f1 ef       	ldi	r31, 0xF1	; 241
     254:	ef 2e       	mov	r14, r31
     256:	f2 e0       	ldi	r31, 0x02	; 2
     258:	ff 2e       	mov	r15, r31
     25a:	f0 2d       	mov	r31, r0
     25c:	20 e0       	ldi	r18, 0x00	; 0
     25e:	30 e0       	ldi	r19, 0x00	; 0
     260:	a9 01       	movw	r20, r18
     262:	60 e0       	ldi	r22, 0x00	; 0
     264:	70 e0       	ldi	r23, 0x00	; 0
     266:	cb 01       	movw	r24, r22
     268:	0e 94 00 0f 	call	0x1e00	; 0x1e00 <async>
	
}
     26c:	df 91       	pop	r29
     26e:	cf 91       	pop	r28
     270:	1f 91       	pop	r17
     272:	0f 91       	pop	r16
     274:	ff 90       	pop	r15
     276:	ef 90       	pop	r14
     278:	df 90       	pop	r13
     27a:	cf 90       	pop	r12
     27c:	08 95       	ret

0000027e <LRBuffer>:


//LRBuffer complete
void LRBuffer(General *self){
     27e:	cf 92       	push	r12
     280:	df 92       	push	r13
     282:	ef 92       	push	r14
     284:	ff 92       	push	r15
     286:	0f 93       	push	r16
     288:	1f 93       	push	r17
     28a:	cf 93       	push	r28
     28c:	df 93       	push	r29
     28e:	fc 01       	movw	r30, r24

		if (!(PINE & (1 << 2)))
     290:	62 99       	sbic	0x0c, 2	; 12
     292:	32 c0       	rjmp	.+100    	; 0x2f8 <LRBuffer+0x7a>
		{	
			self->Active = self->pg1;						
     294:	84 81       	ldd	r24, Z+4	; 0x04
     296:	95 81       	ldd	r25, Z+5	; 0x05
     298:	93 87       	std	Z+11, r25	; 0x0b
     29a:	82 87       	std	Z+10, r24	; 0x0a
			
			self->graphics->side = 0;
     29c:	a0 85       	ldd	r26, Z+8	; 0x08
     29e:	b1 85       	ldd	r27, Z+9	; 0x09
     2a0:	19 96       	adiw	r26, 0x09	; 9
     2a2:	1c 92       	st	X, r1
     2a4:	1e 92       	st	-X, r1
     2a6:	18 97       	sbiw	r26, 0x08	; 8
			self->graphics->frequency = self->Active->frequency;			//put gui in line with pGen
     2a8:	c0 85       	ldd	r28, Z+8	; 0x08
     2aa:	d1 85       	ldd	r29, Z+9	; 0x09
     2ac:	a2 85       	ldd	r26, Z+10	; 0x0a
     2ae:	b3 85       	ldd	r27, Z+11	; 0x0b
     2b0:	16 96       	adiw	r26, 0x06	; 6
     2b2:	8d 91       	ld	r24, X+
     2b4:	9c 91       	ld	r25, X
     2b6:	17 97       	sbiw	r26, 0x07	; 7
     2b8:	09 2e       	mov	r0, r25
     2ba:	00 0c       	add	r0, r0
     2bc:	aa 0b       	sbc	r26, r26
     2be:	bb 0b       	sbc	r27, r27
     2c0:	8c 83       	std	Y+4, r24	; 0x04
     2c2:	9d 83       	std	Y+5, r25	; 0x05
     2c4:	ae 83       	std	Y+6, r26	; 0x06
     2c6:	bf 83       	std	Y+7, r27	; 0x07
			LCDDR13 = 0x0;				//side indicators indicate left
     2c8:	10 92 f9 00 	sts	0x00F9, r1	; 0x8000f9 <__TEXT_REGION_LENGTH__+0x7fc0f9>
			LCDDR18 = 0x1;
     2cc:	81 e0       	ldi	r24, 0x01	; 1
     2ce:	80 93 fe 00 	sts	0x00FE, r24	; 0x8000fe <__TEXT_REGION_LENGTH__+0x7fc0fe>
			ASYNC(self->graphics, updateGUI, 0);
     2d2:	00 85       	ldd	r16, Z+8	; 0x08
     2d4:	11 85       	ldd	r17, Z+9	; 0x09
     2d6:	c1 2c       	mov	r12, r1
     2d8:	d1 2c       	mov	r13, r1
     2da:	0f 2e       	mov	r0, r31
     2dc:	f1 ef       	ldi	r31, 0xF1	; 241
     2de:	ef 2e       	mov	r14, r31
     2e0:	f2 e0       	ldi	r31, 0x02	; 2
     2e2:	ff 2e       	mov	r15, r31
     2e4:	f0 2d       	mov	r31, r0
     2e6:	20 e0       	ldi	r18, 0x00	; 0
     2e8:	30 e0       	ldi	r19, 0x00	; 0
     2ea:	a9 01       	movw	r20, r18
     2ec:	60 e0       	ldi	r22, 0x00	; 0
     2ee:	70 e0       	ldi	r23, 0x00	; 0
     2f0:	cb 01       	movw	r24, r22
     2f2:	0e 94 00 0f 	call	0x1e00	; 0x1e00 <async>
     2f6:	35 c0       	rjmp	.+106    	; 0x362 <LRBuffer+0xe4>

		}
		else if (!(PINE & (1 << 3)))
     2f8:	63 99       	sbic	0x0c, 3	; 12
     2fa:	33 c0       	rjmp	.+102    	; 0x362 <LRBuffer+0xe4>
		{	
			self->Active = self->pg2;					
     2fc:	86 81       	ldd	r24, Z+6	; 0x06
     2fe:	97 81       	ldd	r25, Z+7	; 0x07
     300:	93 87       	std	Z+11, r25	; 0x0b
     302:	82 87       	std	Z+10, r24	; 0x0a
			
			self->graphics->side = 4;
     304:	a0 85       	ldd	r26, Z+8	; 0x08
     306:	b1 85       	ldd	r27, Z+9	; 0x09
     308:	84 e0       	ldi	r24, 0x04	; 4
     30a:	90 e0       	ldi	r25, 0x00	; 0
     30c:	19 96       	adiw	r26, 0x09	; 9
     30e:	9c 93       	st	X, r25
     310:	8e 93       	st	-X, r24
     312:	18 97       	sbiw	r26, 0x08	; 8
			self->graphics->frequency = self->Active->frequency;			//put gui in line with pGen
     314:	c0 85       	ldd	r28, Z+8	; 0x08
     316:	d1 85       	ldd	r29, Z+9	; 0x09
     318:	a2 85       	ldd	r26, Z+10	; 0x0a
     31a:	b3 85       	ldd	r27, Z+11	; 0x0b
     31c:	16 96       	adiw	r26, 0x06	; 6
     31e:	8d 91       	ld	r24, X+
     320:	9c 91       	ld	r25, X
     322:	17 97       	sbiw	r26, 0x07	; 7
     324:	09 2e       	mov	r0, r25
     326:	00 0c       	add	r0, r0
     328:	aa 0b       	sbc	r26, r26
     32a:	bb 0b       	sbc	r27, r27
     32c:	8c 83       	std	Y+4, r24	; 0x04
     32e:	9d 83       	std	Y+5, r25	; 0x05
     330:	ae 83       	std	Y+6, r26	; 0x06
     332:	bf 83       	std	Y+7, r27	; 0x07
			LCDDR13 = 0x1;				//side indicators indicate right
     334:	81 e0       	ldi	r24, 0x01	; 1
     336:	80 93 f9 00 	sts	0x00F9, r24	; 0x8000f9 <__TEXT_REGION_LENGTH__+0x7fc0f9>
			LCDDR18 = 0x0;
     33a:	10 92 fe 00 	sts	0x00FE, r1	; 0x8000fe <__TEXT_REGION_LENGTH__+0x7fc0fe>
			ASYNC(self->graphics, updateGUI, 0);
     33e:	00 85       	ldd	r16, Z+8	; 0x08
     340:	11 85       	ldd	r17, Z+9	; 0x09
     342:	c1 2c       	mov	r12, r1
     344:	d1 2c       	mov	r13, r1
     346:	0f 2e       	mov	r0, r31
     348:	f1 ef       	ldi	r31, 0xF1	; 241
     34a:	ef 2e       	mov	r14, r31
     34c:	f2 e0       	ldi	r31, 0x02	; 2
     34e:	ff 2e       	mov	r15, r31
     350:	f0 2d       	mov	r31, r0
     352:	20 e0       	ldi	r18, 0x00	; 0
     354:	30 e0       	ldi	r19, 0x00	; 0
     356:	a9 01       	movw	r20, r18
     358:	60 e0       	ldi	r22, 0x00	; 0
     35a:	70 e0       	ldi	r23, 0x00	; 0
     35c:	cb 01       	movw	r24, r22
     35e:	0e 94 00 0f 	call	0x1e00	; 0x1e00 <async>

		}	
     362:	df 91       	pop	r29
     364:	cf 91       	pop	r28
     366:	1f 91       	pop	r17
     368:	0f 91       	pop	r16
     36a:	ff 90       	pop	r15
     36c:	ef 90       	pop	r14
     36e:	df 90       	pop	r13
     370:	cf 90       	pop	r12
     372:	08 95       	ret

00000374 <LCD_Init>:
	pp++;
	writeChar( num % 10 + '0', pp);				// writes the ones place
	
}
void writeLong(GUI *self){
	printAt(self->frequency, self->side);
     374:	e1 e6       	ldi	r30, 0x61	; 97
     376:	f0 e0       	ldi	r31, 0x00	; 0
     378:	80 e8       	ldi	r24, 0x80	; 128
     37a:	80 83       	st	Z, r24
     37c:	10 82       	st	Z, r1
     37e:	87 eb       	ldi	r24, 0xB7	; 183
     380:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>
     384:	87 e0       	ldi	r24, 0x07	; 7
     386:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
     38a:	8f e0       	ldi	r24, 0x0F	; 15
     38c:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
     390:	80 ec       	ldi	r24, 0xC0	; 192
     392:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>
     396:	08 95       	ret

00000398 <writeChar>:
     398:	cf 92       	push	r12
     39a:	df 92       	push	r13
     39c:	ef 92       	push	r14
     39e:	ff 92       	push	r15
     3a0:	1f 93       	push	r17
     3a2:	cf 93       	push	r28
     3a4:	df 93       	push	r29
     3a6:	10 ed       	ldi	r17, 0xD0	; 208
     3a8:	18 0f       	add	r17, r24
     3aa:	66 30       	cpi	r22, 0x06	; 6
     3ac:	71 05       	cpc	r23, r1
     3ae:	08 f0       	brcs	.+2      	; 0x3b2 <writeChar+0x1a>
     3b0:	b1 c0       	rjmp	.+354    	; 0x514 <__stack+0x15>
     3b2:	1a 30       	cpi	r17, 0x0A	; 10
     3b4:	08 f0       	brcs	.+2      	; 0x3b8 <writeChar+0x20>
     3b6:	ae c0       	rjmp	.+348    	; 0x514 <__stack+0x15>
     3b8:	9b 01       	movw	r18, r22
     3ba:	2e 5f       	subi	r18, 0xFE	; 254
     3bc:	3f 4f       	sbci	r19, 0xFF	; 255
     3be:	c9 01       	movw	r24, r18
     3c0:	99 23       	and	r25, r25
     3c2:	0c f4       	brge	.+2      	; 0x3c6 <writeChar+0x2e>
     3c4:	01 96       	adiw	r24, 0x01	; 1
     3c6:	6b 01       	movw	r12, r22
     3c8:	bc 01       	movw	r22, r24
     3ca:	75 95       	asr	r23
     3cc:	67 95       	ror	r22
     3ce:	07 2e       	mov	r0, r23
     3d0:	00 0c       	add	r0, r0
     3d2:	88 0b       	sbc	r24, r24
     3d4:	99 0b       	sbc	r25, r25
     3d6:	0e 94 ba 11 	call	0x2374	; 0x2374 <__floatsisf>
     3da:	0e 94 f5 11 	call	0x23ea	; 0x23ea <floor>
     3de:	20 e0       	ldi	r18, 0x00	; 0
     3e0:	30 e0       	ldi	r19, 0x00	; 0
     3e2:	40 e8       	ldi	r20, 0x80	; 128
     3e4:	5f e3       	ldi	r21, 0x3F	; 63
     3e6:	0e 94 15 11 	call	0x222a	; 0x222a <__subsf3>
     3ea:	0e 94 82 11 	call	0x2304	; 0x2304 <__fixsfsi>
     3ee:	fb 01       	movw	r30, r22
     3f0:	ee 0f       	add	r30, r30
     3f2:	ff 1f       	adc	r31, r31
     3f4:	e0 5b       	subi	r30, 0xB0	; 176
     3f6:	fe 4f       	sbci	r31, 0xFE	; 254
     3f8:	a0 81       	ld	r26, Z
     3fa:	b1 81       	ldd	r27, Z+1	; 0x01
     3fc:	ed 90       	ld	r14, X+
     3fe:	fc 90       	ld	r15, X
     400:	11 97       	sbiw	r26, 0x01	; 1
     402:	e1 2f       	mov	r30, r17
     404:	f0 e0       	ldi	r31, 0x00	; 0
     406:	9f 01       	movw	r18, r30
     408:	22 0f       	add	r18, r18
     40a:	33 1f       	adc	r19, r19
     40c:	22 0f       	add	r18, r18
     40e:	33 1f       	adc	r19, r19
     410:	22 0f       	add	r18, r18
     412:	33 1f       	adc	r19, r19
     414:	20 50       	subi	r18, 0x00	; 0
     416:	3f 4f       	sbci	r19, 0xFF	; 255
     418:	e9 01       	movw	r28, r18
     41a:	48 81       	ld	r20, Y
     41c:	59 81       	ldd	r21, Y+1	; 0x01
     41e:	96 01       	movw	r18, r12
     420:	21 70       	andi	r18, 0x01	; 1
     422:	30 78       	andi	r19, 0x80	; 128
     424:	33 23       	and	r19, r19
     426:	34 f4       	brge	.+12     	; 0x434 <__DATA_REGION_LENGTH__+0x34>
     428:	21 50       	subi	r18, 0x01	; 1
     42a:	31 09       	sbc	r19, r1
     42c:	2e 6f       	ori	r18, 0xFE	; 254
     42e:	3f 6f       	ori	r19, 0xFF	; 255
     430:	2f 5f       	subi	r18, 0xFF	; 255
     432:	3f 4f       	sbci	r19, 0xFF	; 255
     434:	22 0f       	add	r18, r18
     436:	33 1f       	adc	r19, r19
     438:	22 0f       	add	r18, r18
     43a:	33 1f       	adc	r19, r19
     43c:	02 2e       	mov	r0, r18
     43e:	02 c0       	rjmp	.+4      	; 0x444 <__DATA_REGION_LENGTH__+0x44>
     440:	44 0f       	add	r20, r20
     442:	55 1f       	adc	r21, r21
     444:	0a 94       	dec	r0
     446:	e2 f7       	brpl	.-8      	; 0x440 <__DATA_REGION_LENGTH__+0x40>
     448:	4e 0d       	add	r20, r14
     44a:	5f 1d       	adc	r21, r15
     44c:	4d 93       	st	X+, r20
     44e:	5c 93       	st	X, r21
     450:	6b 01       	movw	r12, r22
     452:	7c 01       	movw	r14, r24
     454:	d4 e0       	ldi	r29, 0x04	; 4
     456:	cd 0e       	add	r12, r29
     458:	d1 1c       	adc	r13, r1
     45a:	e1 1c       	adc	r14, r1
     45c:	f1 1c       	adc	r15, r1
     45e:	a6 01       	movw	r20, r12
     460:	44 0f       	add	r20, r20
     462:	55 1f       	adc	r21, r21
     464:	da 01       	movw	r26, r20
     466:	a0 5b       	subi	r26, 0xB0	; 176
     468:	be 4f       	sbci	r27, 0xFE	; 254
     46a:	0d 90       	ld	r0, X+
     46c:	bc 91       	ld	r27, X
     46e:	a0 2d       	mov	r26, r0
     470:	cd 91       	ld	r28, X+
     472:	dc 91       	ld	r29, X
     474:	11 97       	sbiw	r26, 0x01	; 1
     476:	ee 0f       	add	r30, r30
     478:	ff 1f       	adc	r31, r31
     47a:	ee 0f       	add	r30, r30
     47c:	ff 1f       	adc	r31, r31
     47e:	ee 0f       	add	r30, r30
     480:	ff 1f       	adc	r31, r31
     482:	e0 50       	subi	r30, 0x00	; 0
     484:	ff 4f       	sbci	r31, 0xFF	; 255
     486:	42 81       	ldd	r20, Z+2	; 0x02
     488:	53 81       	ldd	r21, Z+3	; 0x03
     48a:	02 2e       	mov	r0, r18
     48c:	02 c0       	rjmp	.+4      	; 0x492 <__DATA_REGION_LENGTH__+0x92>
     48e:	44 0f       	add	r20, r20
     490:	55 1f       	adc	r21, r21
     492:	0a 94       	dec	r0
     494:	e2 f7       	brpl	.-8      	; 0x48e <__DATA_REGION_LENGTH__+0x8e>
     496:	4c 0f       	add	r20, r28
     498:	5d 1f       	adc	r21, r29
     49a:	4d 93       	st	X+, r20
     49c:	5c 93       	st	X, r21
     49e:	6b 01       	movw	r12, r22
     4a0:	7c 01       	movw	r14, r24
     4a2:	48 e0       	ldi	r20, 0x08	; 8
     4a4:	c4 0e       	add	r12, r20
     4a6:	d1 1c       	adc	r13, r1
     4a8:	e1 1c       	adc	r14, r1
     4aa:	f1 1c       	adc	r15, r1
     4ac:	a6 01       	movw	r20, r12
     4ae:	44 0f       	add	r20, r20
     4b0:	55 1f       	adc	r21, r21
     4b2:	da 01       	movw	r26, r20
     4b4:	a0 5b       	subi	r26, 0xB0	; 176
     4b6:	be 4f       	sbci	r27, 0xFE	; 254
     4b8:	0d 90       	ld	r0, X+
     4ba:	bc 91       	ld	r27, X
     4bc:	a0 2d       	mov	r26, r0
     4be:	cd 91       	ld	r28, X+
     4c0:	dc 91       	ld	r29, X
     4c2:	11 97       	sbiw	r26, 0x01	; 1
     4c4:	44 81       	ldd	r20, Z+4	; 0x04
     4c6:	55 81       	ldd	r21, Z+5	; 0x05
     4c8:	02 2e       	mov	r0, r18
     4ca:	02 c0       	rjmp	.+4      	; 0x4d0 <__DATA_REGION_LENGTH__+0xd0>
     4cc:	44 0f       	add	r20, r20
     4ce:	55 1f       	adc	r21, r21
     4d0:	0a 94       	dec	r0
     4d2:	e2 f7       	brpl	.-8      	; 0x4cc <__DATA_REGION_LENGTH__+0xcc>
     4d4:	4c 0f       	add	r20, r28
     4d6:	5d 1f       	adc	r21, r29
     4d8:	4d 93       	st	X+, r20
     4da:	5c 93       	st	X, r21
     4dc:	dc 01       	movw	r26, r24
     4de:	cb 01       	movw	r24, r22
     4e0:	0c 96       	adiw	r24, 0x0c	; 12
     4e2:	a1 1d       	adc	r26, r1
     4e4:	b1 1d       	adc	r27, r1
     4e6:	bc 01       	movw	r22, r24
     4e8:	66 0f       	add	r22, r22
     4ea:	77 1f       	adc	r23, r23
     4ec:	db 01       	movw	r26, r22
     4ee:	a0 5b       	subi	r26, 0xB0	; 176
     4f0:	be 4f       	sbci	r27, 0xFE	; 254
     4f2:	0d 90       	ld	r0, X+
     4f4:	bc 91       	ld	r27, X
     4f6:	a0 2d       	mov	r26, r0
     4f8:	4d 91       	ld	r20, X+
     4fa:	5c 91       	ld	r21, X
     4fc:	11 97       	sbiw	r26, 0x01	; 1
     4fe:	86 81       	ldd	r24, Z+6	; 0x06
     500:	97 81       	ldd	r25, Z+7	; 0x07
     502:	02 c0       	rjmp	.+4      	; 0x508 <__stack+0x9>
     504:	88 0f       	add	r24, r24
     506:	99 1f       	adc	r25, r25
     508:	2a 95       	dec	r18
     50a:	e2 f7       	brpl	.-8      	; 0x504 <__stack+0x5>
     50c:	84 0f       	add	r24, r20
     50e:	95 1f       	adc	r25, r21
     510:	8d 93       	st	X+, r24
     512:	9c 93       	st	X, r25
     514:	df 91       	pop	r29
     516:	cf 91       	pop	r28
     518:	1f 91       	pop	r17
     51a:	ff 90       	pop	r15
     51c:	ef 90       	pop	r14
     51e:	df 90       	pop	r13
     520:	cf 90       	pop	r12
     522:	08 95       	ret

00000524 <clearChar1>:
     524:	82 30       	cpi	r24, 0x02	; 2
     526:	91 05       	cpc	r25, r1
     528:	48 f4       	brcc	.+18     	; 0x53c <clearChar1+0x18>
     52a:	10 92 ec 00 	sts	0x00EC, r1	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
     52e:	10 92 f1 00 	sts	0x00F1, r1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7fc0f1>
     532:	10 92 f6 00 	sts	0x00F6, r1	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7fc0f6>
     536:	10 92 fb 00 	sts	0x00FB, r1	; 0x8000fb <__TEXT_REGION_LENGTH__+0x7fc0fb>
     53a:	08 95       	ret
     53c:	03 97       	sbiw	r24, 0x03	; 3
     53e:	02 97       	sbiw	r24, 0x02	; 2
     540:	80 f4       	brcc	.+32     	; 0x562 <clearChar1+0x3e>
     542:	10 92 ed 00 	sts	0x00ED, r1	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
     546:	10 92 ee 00 	sts	0x00EE, r1	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
     54a:	10 92 f2 00 	sts	0x00F2, r1	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7fc0f2>
     54e:	10 92 f3 00 	sts	0x00F3, r1	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7fc0f3>
     552:	10 92 f7 00 	sts	0x00F7, r1	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7fc0f7>
     556:	10 92 f8 00 	sts	0x00F8, r1	; 0x8000f8 <__TEXT_REGION_LENGTH__+0x7fc0f8>
     55a:	10 92 fc 00 	sts	0x00FC, r1	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7fc0fc>
     55e:	10 92 fd 00 	sts	0x00FD, r1	; 0x8000fd <__TEXT_REGION_LENGTH__+0x7fc0fd>
     562:	08 95       	ret

00000564 <printAt>:
     564:	8f 92       	push	r8
     566:	9f 92       	push	r9
     568:	af 92       	push	r10
     56a:	bf 92       	push	r11
     56c:	cf 92       	push	r12
     56e:	df 92       	push	r13
     570:	ef 92       	push	r14
     572:	ff 92       	push	r15
     574:	cf 93       	push	r28
     576:	df 93       	push	r29
     578:	4b 01       	movw	r8, r22
     57a:	5c 01       	movw	r10, r24
     57c:	ea 01       	movw	r28, r20
     57e:	ca 01       	movw	r24, r20
     580:	0e 94 92 02 	call	0x524	; 0x524 <clearChar1>
     584:	c5 01       	movw	r24, r10
     586:	b4 01       	movw	r22, r8
     588:	24 e6       	ldi	r18, 0x64	; 100
     58a:	30 e0       	ldi	r19, 0x00	; 0
     58c:	40 e0       	ldi	r20, 0x00	; 0
     58e:	50 e0       	ldi	r21, 0x00	; 0
     590:	0e 94 9e 12 	call	0x253c	; 0x253c <__divmodsi4>
     594:	0f 2e       	mov	r0, r31
     596:	fa e0       	ldi	r31, 0x0A	; 10
     598:	cf 2e       	mov	r12, r31
     59a:	d1 2c       	mov	r13, r1
     59c:	e1 2c       	mov	r14, r1
     59e:	f1 2c       	mov	r15, r1
     5a0:	f0 2d       	mov	r31, r0
     5a2:	a7 01       	movw	r20, r14
     5a4:	96 01       	movw	r18, r12
     5a6:	0e 94 9e 12 	call	0x253c	; 0x253c <__divmodsi4>
     5aa:	be 01       	movw	r22, r28
     5ac:	80 e3       	ldi	r24, 0x30	; 48
     5ae:	82 0f       	add	r24, r18
     5b0:	0e 94 cc 01 	call	0x398	; 0x398 <writeChar>
     5b4:	21 96       	adiw	r28, 0x01	; 1
     5b6:	c5 01       	movw	r24, r10
     5b8:	b4 01       	movw	r22, r8
     5ba:	a7 01       	movw	r20, r14
     5bc:	96 01       	movw	r18, r12
     5be:	0e 94 9e 12 	call	0x253c	; 0x253c <__divmodsi4>
     5c2:	86 2f       	mov	r24, r22
     5c4:	be 01       	movw	r22, r28
     5c6:	80 5d       	subi	r24, 0xD0	; 208
     5c8:	0e 94 cc 01 	call	0x398	; 0x398 <writeChar>
     5cc:	df 91       	pop	r29
     5ce:	cf 91       	pop	r28
     5d0:	ff 90       	pop	r15
     5d2:	ef 90       	pop	r14
     5d4:	df 90       	pop	r13
     5d6:	cf 90       	pop	r12
     5d8:	bf 90       	pop	r11
     5da:	af 90       	pop	r10
     5dc:	9f 90       	pop	r9
     5de:	8f 90       	pop	r8
     5e0:	08 95       	ret

000005e2 <updateGUI>:
}


void updateGUI(GUI *self){
     5e2:	cf 93       	push	r28
     5e4:	df 93       	push	r29
     5e6:	ec 01       	movw	r28, r24
	if (self->frequency < 0){
     5e8:	8c 81       	ldd	r24, Y+4	; 0x04
     5ea:	9d 81       	ldd	r25, Y+5	; 0x05
     5ec:	ae 81       	ldd	r26, Y+6	; 0x06
     5ee:	bf 81       	ldd	r27, Y+7	; 0x07
     5f0:	bb 23       	and	r27, r27
     5f2:	24 f4       	brge	.+8      	; 0x5fc <updateGUI+0x1a>
		self->frequency = 0;
     5f4:	1c 82       	std	Y+4, r1	; 0x04
     5f6:	1d 82       	std	Y+5, r1	; 0x05
     5f8:	1e 82       	std	Y+6, r1	; 0x06
     5fa:	1f 82       	std	Y+7, r1	; 0x07
	}
	if (self->frequency > 99){
     5fc:	8c 81       	ldd	r24, Y+4	; 0x04
     5fe:	9d 81       	ldd	r25, Y+5	; 0x05
     600:	ae 81       	ldd	r26, Y+6	; 0x06
     602:	bf 81       	ldd	r27, Y+7	; 0x07
     604:	84 36       	cpi	r24, 0x64	; 100
     606:	91 05       	cpc	r25, r1
     608:	a1 05       	cpc	r26, r1
     60a:	b1 05       	cpc	r27, r1
     60c:	44 f0       	brlt	.+16     	; 0x61e <updateGUI+0x3c>
		self->frequency = 99;
     60e:	83 e6       	ldi	r24, 0x63	; 99
     610:	90 e0       	ldi	r25, 0x00	; 0
     612:	a0 e0       	ldi	r26, 0x00	; 0
     614:	b0 e0       	ldi	r27, 0x00	; 0
     616:	8c 83       	std	Y+4, r24	; 0x04
     618:	9d 83       	std	Y+5, r25	; 0x05
     61a:	ae 83       	std	Y+6, r26	; 0x06
     61c:	bf 83       	std	Y+7, r27	; 0x07
	}
		
	clearChar1(self->side);
     61e:	88 85       	ldd	r24, Y+8	; 0x08
     620:	99 85       	ldd	r25, Y+9	; 0x09
     622:	0e 94 92 02 	call	0x524	; 0x524 <clearChar1>
	printAt(self->frequency, self->side);
     626:	48 85       	ldd	r20, Y+8	; 0x08
     628:	59 85       	ldd	r21, Y+9	; 0x09
     62a:	6c 81       	ldd	r22, Y+4	; 0x04
     62c:	7d 81       	ldd	r23, Y+5	; 0x05
     62e:	8e 81       	ldd	r24, Y+6	; 0x06
     630:	9f 81       	ldd	r25, Y+7	; 0x07
     632:	0e 94 b2 02 	call	0x564	; 0x564 <printAt>
}
     636:	df 91       	pop	r29
     638:	cf 91       	pop	r28
     63a:	08 95       	ret

0000063c <start>:

void start(GUI *self)
{
     63c:	cf 92       	push	r12
     63e:	df 92       	push	r13
     640:	ef 92       	push	r14
     642:	ff 92       	push	r15
     644:	0f 93       	push	r16
     646:	1f 93       	push	r17
     648:	cf 93       	push	r28
     64a:	df 93       	push	r29
     64c:	ec 01       	movw	r28, r24
	printAt(self->frequency, self->side);
     64e:	48 85       	ldd	r20, Y+8	; 0x08
     650:	59 85       	ldd	r21, Y+9	; 0x09
     652:	6c 81       	ldd	r22, Y+4	; 0x04
     654:	7d 81       	ldd	r23, Y+5	; 0x05
     656:	8e 81       	ldd	r24, Y+6	; 0x06
     658:	9f 81       	ldd	r25, Y+7	; 0x07
     65a:	0e 94 b2 02 	call	0x564	; 0x564 <printAt>
	ASYNC(self->pg1, outputPulse, 0);
     65e:	0e 85       	ldd	r16, Y+14	; 0x0e
     660:	1f 85       	ldd	r17, Y+15	; 0x0f
     662:	c1 2c       	mov	r12, r1
     664:	d1 2c       	mov	r13, r1
     666:	0f 2e       	mov	r0, r31
     668:	fd e0       	ldi	r31, 0x0D	; 13
     66a:	ef 2e       	mov	r14, r31
     66c:	f4 e0       	ldi	r31, 0x04	; 4
     66e:	ff 2e       	mov	r15, r31
     670:	f0 2d       	mov	r31, r0
     672:	20 e0       	ldi	r18, 0x00	; 0
     674:	30 e0       	ldi	r19, 0x00	; 0
     676:	a9 01       	movw	r20, r18
     678:	60 e0       	ldi	r22, 0x00	; 0
     67a:	70 e0       	ldi	r23, 0x00	; 0
     67c:	cb 01       	movw	r24, r22
     67e:	0e 94 00 0f 	call	0x1e00	; 0x1e00 <async>
	ASYNC(self->pg2, outputPulse, 0);
     682:	08 89       	ldd	r16, Y+16	; 0x10
     684:	19 89       	ldd	r17, Y+17	; 0x11
     686:	20 e0       	ldi	r18, 0x00	; 0
     688:	30 e0       	ldi	r19, 0x00	; 0
     68a:	a9 01       	movw	r20, r18
     68c:	60 e0       	ldi	r22, 0x00	; 0
     68e:	70 e0       	ldi	r23, 0x00	; 0
     690:	cb 01       	movw	r24, r22
     692:	0e 94 00 0f 	call	0x1e00	; 0x1e00 <async>
	
	
}
     696:	df 91       	pop	r29
     698:	cf 91       	pop	r28
     69a:	1f 91       	pop	r17
     69c:	0f 91       	pop	r16
     69e:	ff 90       	pop	r15
     6a0:	ef 90       	pop	r14
     6a2:	df 90       	pop	r13
     6a4:	cf 90       	pop	r12
     6a6:	08 95       	ret

000006a8 <main>:
#include "output.h"
#include "pulseGen.h"
#include "General.h"


int main(void){
     6a8:	ef 92       	push	r14
     6aa:	ff 92       	push	r15
     6ac:	0f 93       	push	r16
     6ae:	1f 93       	push	r17
     6b0:	cf 93       	push	r28
     6b2:	df 93       	push	r29
     6b4:	cd b7       	in	r28, 0x3d	; 61
     6b6:	de b7       	in	r29, 0x3e	; 62
     6b8:	ca 54       	subi	r28, 0x4A	; 74
     6ba:	d1 09       	sbc	r29, r1
     6bc:	0f b6       	in	r0, 0x3f	; 63
     6be:	f8 94       	cli
     6c0:	de bf       	out	0x3e, r29	; 62
     6c2:	0f be       	out	0x3f, r0	; 63
     6c4:	cd bf       	out	0x3d, r28	; 61
	
PORTB = (1<<PB7 | 1<<PB6 | 1<<PB4 );																			//7down, 6up, 4push, 3
     6c6:	80 ed       	ldi	r24, 0xD0	; 208
     6c8:	85 b9       	out	0x05, r24	; 5
PORTE = (1<<PE3 | 1<<PE2);																						//2left 3right
     6ca:	8c e0       	ldi	r24, 0x0C	; 12
     6cc:	8e b9       	out	0x0e, r24	; 14
PCMSK1 = (1<<PCINT15)|(1<<PCINT14)|(1<<PCINT13)|(1<<PCINT12)|(1<<PCINT11)|(1<<PCINT10)|(1<<PCINT9)|(1<<PCINT8); //carpet bombing with interrupts
     6ce:	8f ef       	ldi	r24, 0xFF	; 255
     6d0:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <__TEXT_REGION_LENGTH__+0x7fc06c>
PCMSK0 =(1<<PCINT7)|(1<<PCINT6)|(1<<PCINT5)|(1<<PCINT4)|(1<<PCINT3)|(1<<PCINT2)|(1<<PCINT1)|(1<<PCINT0);
     6d4:	80 93 6b 00 	sts	0x006B, r24	; 0x80006b <__TEXT_REGION_LENGTH__+0x7fc06b>
EIMSK |= (1 << PCIE1) | (1 << PCIE0);
     6d8:	8d b3       	in	r24, 0x1d	; 29
     6da:	80 6c       	ori	r24, 0xC0	; 192
     6dc:	8d bb       	out	0x1d, r24	; 29
PORTE |= (0 << PE4) | (0 << PE6);
     6de:	8e b1       	in	r24, 0x0e	; 14
     6e0:	8e b9       	out	0x0e, r24	; 14
DDRE |= (1 << DDE4) | (1 << DDE6);
     6e2:	8d b1       	in	r24, 0x0d	; 13
     6e4:	80 65       	ori	r24, 0x50	; 80
     6e6:	8d b9       	out	0x0d, r24	; 13


output op = initOutput(0);				//initialize output with state 0
     6e8:	1a 82       	std	Y+2, r1	; 0x02
     6ea:	19 82       	std	Y+1, r1	; 0x01
     6ec:	1c 82       	std	Y+4, r1	; 0x04
     6ee:	1b 82       	std	Y+3, r1	; 0x03
     6f0:	1e 82       	std	Y+6, r1	; 0x06
     6f2:	1d 82       	std	Y+5, r1	; 0x05
pulseGen pg1 = initpulseGen(0, 0, &op);
     6f4:	fe 01       	movw	r30, r28
     6f6:	37 96       	adiw	r30, 0x07	; 7
     6f8:	82 e1       	ldi	r24, 0x12	; 18
     6fa:	df 01       	movw	r26, r30
     6fc:	1d 92       	st	X+, r1
     6fe:	8a 95       	dec	r24
     700:	e9 f7       	brne	.-6      	; 0x6fc <main+0x54>
     702:	ce 01       	movw	r24, r28
     704:	01 96       	adiw	r24, 0x01	; 1
     706:	98 8f       	std	Y+24, r25	; 0x18
     708:	8f 8b       	std	Y+23, r24	; 0x17
pulseGen pg2 = initpulseGen(1, 4, &op);
     70a:	1a 8e       	std	Y+26, r1	; 0x1a
     70c:	19 8e       	std	Y+25, r1	; 0x19
     70e:	1c 8e       	std	Y+28, r1	; 0x1c
     710:	1b 8e       	std	Y+27, r1	; 0x1b
     712:	21 e0       	ldi	r18, 0x01	; 1
     714:	30 e0       	ldi	r19, 0x00	; 0
     716:	3e 8f       	std	Y+30, r19	; 0x1e
     718:	2d 8f       	std	Y+29, r18	; 0x1d
     71a:	24 e0       	ldi	r18, 0x04	; 4
     71c:	30 e0       	ldi	r19, 0x00	; 0
     71e:	38 a3       	std	Y+32, r19	; 0x20
     720:	2f 8f       	std	Y+31, r18	; 0x1f
     722:	1a a2       	std	Y+34, r1	; 0x22
     724:	19 a2       	std	Y+33, r1	; 0x21
     726:	1c a2       	std	Y+36, r1	; 0x24
     728:	1b a2       	std	Y+35, r1	; 0x23
     72a:	1e a2       	std	Y+38, r1	; 0x26
     72c:	1d a2       	std	Y+37, r1	; 0x25
     72e:	18 a6       	std	Y+40, r1	; 0x28
     730:	1f a2       	std	Y+39, r1	; 0x27
     732:	9a a7       	std	Y+42, r25	; 0x2a
     734:	89 a7       	std	Y+41, r24	; 0x29
GUI	graphics = initGUI(&pg1, &pg2);
     736:	1c a6       	std	Y+44, r1	; 0x2c
     738:	1b a6       	std	Y+43, r1	; 0x2b
     73a:	1e a6       	std	Y+46, r1	; 0x2e
     73c:	1d a6       	std	Y+45, r1	; 0x2d
     73e:	81 e0       	ldi	r24, 0x01	; 1
     740:	90 e0       	ldi	r25, 0x00	; 0
     742:	a0 e0       	ldi	r26, 0x00	; 0
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	8f a7       	std	Y+47, r24	; 0x2f
     748:	98 ab       	std	Y+48, r25	; 0x30
     74a:	a9 ab       	std	Y+49, r26	; 0x31
     74c:	ba ab       	std	Y+50, r27	; 0x32
     74e:	1c aa       	std	Y+52, r1	; 0x34
     750:	1b aa       	std	Y+51, r1	; 0x33
     752:	1e aa       	std	Y+54, r1	; 0x36
     754:	1d aa       	std	Y+53, r1	; 0x35
     756:	18 ae       	std	Y+56, r1	; 0x38
     758:	1f aa       	std	Y+55, r1	; 0x37
     75a:	fa af       	std	Y+58, r31	; 0x3a
     75c:	e9 af       	std	Y+57, r30	; 0x39
     75e:	ce 01       	movw	r24, r28
     760:	49 96       	adiw	r24, 0x19	; 25
     762:	9c af       	std	Y+60, r25	; 0x3c
     764:	8b af       	std	Y+59, r24	; 0x3b
General Gnrl = initGeneral(&pg1, &pg2, &graphics);
     766:	8e 01       	movw	r16, r28
     768:	03 5c       	subi	r16, 0xC3	; 195
     76a:	1f 4f       	sbci	r17, 0xFF	; 255
     76c:	2e e0       	ldi	r18, 0x0E	; 14
     76e:	d8 01       	movw	r26, r16
     770:	1d 92       	st	X+, r1
     772:	2a 95       	dec	r18
     774:	e9 f7       	brne	.-6      	; 0x770 <main+0xc8>
     776:	23 96       	adiw	r28, 0x03	; 3
     778:	ff af       	std	Y+63, r31	; 0x3f
     77a:	ee af       	std	Y+62, r30	; 0x3e
     77c:	23 97       	sbiw	r28, 0x03	; 3
     77e:	25 96       	adiw	r28, 0x05	; 5
     780:	9f af       	std	Y+63, r25	; 0x3f
     782:	8e af       	std	Y+62, r24	; 0x3e
     784:	25 97       	sbiw	r28, 0x05	; 5
     786:	7e 01       	movw	r14, r28
     788:	bb e2       	ldi	r27, 0x2B	; 43
     78a:	eb 0e       	add	r14, r27
     78c:	f1 1c       	adc	r15, r1
     78e:	27 96       	adiw	r28, 0x07	; 7
     790:	ff ae       	std	Y+63, r15	; 0x3f
     792:	ee ae       	std	Y+62, r14	; 0x3e
     794:	27 97       	sbiw	r28, 0x07	; 7
     796:	29 96       	adiw	r28, 0x09	; 9
     798:	ff af       	std	Y+63, r31	; 0x3f
     79a:	ee af       	std	Y+62, r30	; 0x3e
     79c:	29 97       	sbiw	r28, 0x09	; 9

LCD_Init();
     79e:	0e 94 ba 01 	call	0x374	; 0x374 <LCD_Init>

INSTALL(&Gnrl, LRBuffer, IRQ_PCINT0);
     7a2:	41 e0       	ldi	r20, 0x01	; 1
     7a4:	6f e3       	ldi	r22, 0x3F	; 63
     7a6:	71 e0       	ldi	r23, 0x01	; 1
     7a8:	c8 01       	movw	r24, r16
     7aa:	0e 94 e3 10 	call	0x21c6	; 0x21c6 <install>
INSTALL(&Gnrl, UpDownPushBuffer, IRQ_PCINT1);
     7ae:	42 e0       	ldi	r20, 0x02	; 2
     7b0:	6d e4       	ldi	r22, 0x4D	; 77
     7b2:	70 e0       	ldi	r23, 0x00	; 0
     7b4:	c8 01       	movw	r24, r16
     7b6:	0e 94 e3 10 	call	0x21c6	; 0x21c6 <install>
return TINYTIMBER(&graphics, start, 0);
     7ba:	40 e0       	ldi	r20, 0x00	; 0
     7bc:	50 e0       	ldi	r21, 0x00	; 0
     7be:	6e e1       	ldi	r22, 0x1E	; 30
     7c0:	73 e0       	ldi	r23, 0x03	; 3
     7c2:	c7 01       	movw	r24, r14
     7c4:	0e 94 fe 10 	call	0x21fc	; 0x21fc <tinytimber>
     7c8:	c6 5b       	subi	r28, 0xB6	; 182
     7ca:	df 4f       	sbci	r29, 0xFF	; 255
     7cc:	0f b6       	in	r0, 0x3f	; 63
     7ce:	f8 94       	cli
     7d0:	de bf       	out	0x3e, r29	; 62
     7d2:	0f be       	out	0x3f, r0	; 63
     7d4:	cd bf       	out	0x3d, r28	; 61
     7d6:	df 91       	pop	r29
     7d8:	cf 91       	pop	r28
     7da:	1f 91       	pop	r17
     7dc:	0f 91       	pop	r16
     7de:	ff 90       	pop	r15
     7e0:	ef 90       	pop	r14
     7e2:	08 95       	ret

000007e4 <pinPulse>:

void pinPulse(output *self, int x)
{
	// Look over
	
	if (x == 0)
     7e4:	61 15       	cp	r22, r1
     7e6:	71 05       	cpc	r23, r1
     7e8:	21 f4       	brne	.+8      	; 0x7f2 <pinPulse+0xe>
	{
		PORTE ^= (1 << 4);
     7ea:	9e b1       	in	r25, 0x0e	; 14
     7ec:	80 e1       	ldi	r24, 0x10	; 16
     7ee:	89 27       	eor	r24, r25
     7f0:	8e b9       	out	0x0e, r24	; 14
	}
	if (x == 1)
     7f2:	61 30       	cpi	r22, 0x01	; 1
     7f4:	71 05       	cpc	r23, r1
     7f6:	21 f4       	brne	.+8      	; 0x800 <pinPulse+0x1c>
	{
		PORTE ^= (1 << 6);
     7f8:	9e b1       	in	r25, 0x0e	; 14
     7fa:	80 e4       	ldi	r24, 0x40	; 64
     7fc:	89 27       	eor	r24, r25
     7fe:	8e b9       	out	0x0e, r24	; 14
     800:	08 95       	ret

00000802 <cutPulse>:

}


void cutPulse(output *self, int x){
	if (x == 0){
     802:	61 15       	cp	r22, r1
     804:	71 05       	cpc	r23, r1
     806:	19 f4       	brne	.+6      	; 0x80e <cutPulse+0xc>
		PORTE |= ( 0<< 4);
     808:	8e b1       	in	r24, 0x0e	; 14
     80a:	8e b9       	out	0x0e, r24	; 14
     80c:	08 95       	ret

		
	}
	else if (x == 1){
     80e:	61 30       	cpi	r22, 0x01	; 1
     810:	71 05       	cpc	r23, r1
     812:	11 f4       	brne	.+4      	; 0x818 <cutPulse+0x16>
		PORTE |= (0 << 6);
     814:	8e b1       	in	r24, 0x0e	; 14
     816:	8e b9       	out	0x0e, r24	; 14
     818:	08 95       	ret

0000081a <outputPulse>:
		self->upDownPushFlag = 0;		//prevents several inputs entering if pressed rapidly
	}
	
}

void  outputPulse(pulseGen *self){
     81a:	cf 92       	push	r12
     81c:	df 92       	push	r13
     81e:	ef 92       	push	r14
     820:	ff 92       	push	r15
     822:	0f 93       	push	r16
     824:	1f 93       	push	r17
     826:	cf 93       	push	r28
     828:	df 93       	push	r29
     82a:	ec 01       	movw	r28, r24
	
	if (self->frequency != 0){
     82c:	8e 81       	ldd	r24, Y+6	; 0x06
     82e:	9f 81       	ldd	r25, Y+7	; 0x07
     830:	00 97       	sbiw	r24, 0x00	; 0
     832:	39 f0       	breq	.+14     	; 0x842 <outputPulse+0x28>
		pinPulse(self->op, self->target);				 //output frequency to oscilloscope
     834:	6c 81       	ldd	r22, Y+4	; 0x04
     836:	7d 81       	ldd	r23, Y+5	; 0x05
     838:	88 89       	ldd	r24, Y+16	; 0x10
     83a:	99 89       	ldd	r25, Y+17	; 0x11
     83c:	0e 94 f2 03 	call	0x7e4	; 0x7e4 <pinPulse>
     840:	08 c0       	rjmp	.+16     	; 0x852 <outputPulse+0x38>
	}
	else if (self->frequency == 0){
     842:	89 2b       	or	r24, r25
     844:	31 f4       	brne	.+12     	; 0x852 <outputPulse+0x38>
		cutPulse(self->op, self->target);
     846:	6c 81       	ldd	r22, Y+4	; 0x04
     848:	7d 81       	ldd	r23, Y+5	; 0x05
     84a:	88 89       	ldd	r24, Y+16	; 0x10
     84c:	99 89       	ldd	r25, Y+17	; 0x11
     84e:	0e 94 01 04 	call	0x802	; 0x802 <cutPulse>
	}
	AFTER(((SEC(1)) /(self->frequency) /2), self, outputPulse, 0); //periodically checks if given pg should re-emit signals by checking the pulseCut variable.
     852:	2e 81       	ldd	r18, Y+6	; 0x06
     854:	3f 81       	ldd	r19, Y+7	; 0x07
     856:	03 2e       	mov	r0, r19
     858:	00 0c       	add	r0, r0
     85a:	44 0b       	sbc	r20, r20
     85c:	55 0b       	sbc	r21, r21
     85e:	69 e0       	ldi	r22, 0x09	; 9
     860:	7d e3       	ldi	r23, 0x3D	; 61
     862:	80 e0       	ldi	r24, 0x00	; 0
     864:	90 e0       	ldi	r25, 0x00	; 0
     866:	0e 94 9e 12 	call	0x253c	; 0x253c <__divmodsi4>
     86a:	ca 01       	movw	r24, r20
     86c:	b9 01       	movw	r22, r18
     86e:	c1 2c       	mov	r12, r1
     870:	d1 2c       	mov	r13, r1
     872:	0f 2e       	mov	r0, r31
     874:	fd e0       	ldi	r31, 0x0D	; 13
     876:	ef 2e       	mov	r14, r31
     878:	f4 e0       	ldi	r31, 0x04	; 4
     87a:	ff 2e       	mov	r15, r31
     87c:	f0 2d       	mov	r31, r0
     87e:	8e 01       	movw	r16, r28
     880:	20 e0       	ldi	r18, 0x00	; 0
     882:	30 e0       	ldi	r19, 0x00	; 0
     884:	a9 01       	movw	r20, r18
     886:	0e 94 00 0f 	call	0x1e00	; 0x1e00 <async>
	
}
     88a:	df 91       	pop	r29
     88c:	cf 91       	pop	r28
     88e:	1f 91       	pop	r17
     890:	0f 91       	pop	r16
     892:	ff 90       	pop	r15
     894:	ef 90       	pop	r14
     896:	df 90       	pop	r13
     898:	cf 90       	pop	r12
     89a:	08 95       	ret

0000089c <plusPulse>:
#include "pulseGen.h"
#include "output.h"


void  plusPulse(pulseGen *self){
if (self->frequency < 99){
     89c:	fc 01       	movw	r30, r24
     89e:	26 81       	ldd	r18, Z+6	; 0x06
     8a0:	37 81       	ldd	r19, Z+7	; 0x07
     8a2:	23 36       	cpi	r18, 0x63	; 99
     8a4:	31 05       	cpc	r19, r1
     8a6:	24 f4       	brge	.+8      	; 0x8b0 <plusPulse+0x14>
	self->frequency = self->frequency +1; 
     8a8:	2f 5f       	subi	r18, 0xFF	; 255
     8aa:	3f 4f       	sbci	r19, 0xFF	; 255
     8ac:	37 83       	std	Z+7, r19	; 0x07
     8ae:	26 83       	std	Z+6, r18	; 0x06
     8b0:	08 95       	ret

000008b2 <minusPulse>:
	}
}

void  minusPulse(pulseGen *self){
	if (self->frequency > 0){
     8b2:	fc 01       	movw	r30, r24
     8b4:	26 81       	ldd	r18, Z+6	; 0x06
     8b6:	37 81       	ldd	r19, Z+7	; 0x07
     8b8:	12 16       	cp	r1, r18
     8ba:	13 06       	cpc	r1, r19
     8bc:	24 f4       	brge	.+8      	; 0x8c6 <minusPulse+0x14>
		self->frequency = self->frequency -1;
     8be:	21 50       	subi	r18, 0x01	; 1
     8c0:	31 09       	sbc	r19, r1
     8c2:	37 83       	std	Z+7, r19	; 0x07
     8c4:	26 83       	std	Z+6, r18	; 0x06
     8c6:	08 95       	ret

000008c8 <delayContPush>:
	}
}

void delayContPush(pulseGen *self){
     8c8:	cf 92       	push	r12
     8ca:	df 92       	push	r13
     8cc:	ef 92       	push	r14
     8ce:	ff 92       	push	r15
     8d0:	0f 93       	push	r16
     8d2:	1f 93       	push	r17
     8d4:	8c 01       	movw	r16, r24
		if (!(PINB & (1 << 6)))							//Plus
     8d6:	1e 99       	sbic	0x03, 6	; 3
     8d8:	14 c0       	rjmp	.+40     	; 0x902 <delayContPush+0x3a>
	{
		plusPulse(self);
     8da:	0e 94 4e 04 	call	0x89c	; 0x89c <plusPulse>
		AFTER((SEC(1)/2), self,  delayContPush, 0);
     8de:	c1 2c       	mov	r12, r1
     8e0:	d1 2c       	mov	r13, r1
     8e2:	0f 2e       	mov	r0, r31
     8e4:	f4 e6       	ldi	r31, 0x64	; 100
     8e6:	ef 2e       	mov	r14, r31
     8e8:	f4 e0       	ldi	r31, 0x04	; 4
     8ea:	ff 2e       	mov	r15, r31
     8ec:	f0 2d       	mov	r31, r0
     8ee:	20 e0       	ldi	r18, 0x00	; 0
     8f0:	30 e0       	ldi	r19, 0x00	; 0
     8f2:	a9 01       	movw	r20, r18
     8f4:	69 e0       	ldi	r22, 0x09	; 9
     8f6:	7d e3       	ldi	r23, 0x3D	; 61
     8f8:	80 e0       	ldi	r24, 0x00	; 0
     8fa:	90 e0       	ldi	r25, 0x00	; 0
     8fc:	0e 94 00 0f 	call	0x1e00	; 0x1e00 <async>
     900:	19 c0       	rjmp	.+50     	; 0x934 <delayContPush+0x6c>
	}
	
	else if (!(PINB & (1 << 7)))
     902:	1f 99       	sbic	0x03, 7	; 3
     904:	14 c0       	rjmp	.+40     	; 0x92e <delayContPush+0x66>
	{
		minusPulse(self);			//Minus		
     906:	0e 94 59 04 	call	0x8b2	; 0x8b2 <minusPulse>
		AFTER(((SEC(1))/2), self,  delayContPush, 0);
     90a:	c1 2c       	mov	r12, r1
     90c:	d1 2c       	mov	r13, r1
     90e:	0f 2e       	mov	r0, r31
     910:	f4 e6       	ldi	r31, 0x64	; 100
     912:	ef 2e       	mov	r14, r31
     914:	f4 e0       	ldi	r31, 0x04	; 4
     916:	ff 2e       	mov	r15, r31
     918:	f0 2d       	mov	r31, r0
     91a:	20 e0       	ldi	r18, 0x00	; 0
     91c:	30 e0       	ldi	r19, 0x00	; 0
     91e:	a9 01       	movw	r20, r18
     920:	69 e0       	ldi	r22, 0x09	; 9
     922:	7d e3       	ldi	r23, 0x3D	; 61
     924:	80 e0       	ldi	r24, 0x00	; 0
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	0e 94 00 0f 	call	0x1e00	; 0x1e00 <async>
     92c:	03 c0       	rjmp	.+6      	; 0x934 <delayContPush+0x6c>
	}
	else{
		self->upDownPushFlag = 0;		//prevents several inputs entering if pressed rapidly
     92e:	fc 01       	movw	r30, r24
     930:	15 86       	std	Z+13, r1	; 0x0d
     932:	14 86       	std	Z+12, r1	; 0x0c
	}
	
}
     934:	1f 91       	pop	r17
     936:	0f 91       	pop	r16
     938:	ff 90       	pop	r15
     93a:	ef 90       	pop	r14
     93c:	df 90       	pop	r13
     93e:	cf 90       	pop	r12
     940:	08 95       	ret

00000942 <savePulse>:
	}
	AFTER(((SEC(1)) /(self->frequency) /2), self, outputPulse, 0); //periodically checks if given pg should re-emit signals by checking the pulseCut variable.
	
}

void savePulse(pulseGen *self){
     942:	fc 01       	movw	r30, r24
	self->saved = self->frequency;
     944:	86 81       	ldd	r24, Z+6	; 0x06
     946:	97 81       	ldd	r25, Z+7	; 0x07
     948:	91 87       	std	Z+9, r25	; 0x09
     94a:	80 87       	std	Z+8, r24	; 0x08
	self->frequency = 0;
     94c:	17 82       	std	Z+7, r1	; 0x07
     94e:	16 82       	std	Z+6, r1	; 0x06
     950:	08 95       	ret

00000952 <restorePulse>:
	
}
void restorePulse(pulseGen *self){
	self->frequency = self->saved;
     952:	fc 01       	movw	r30, r24
     954:	20 85       	ldd	r18, Z+8	; 0x08
     956:	31 85       	ldd	r19, Z+9	; 0x09
     958:	37 83       	std	Z+7, r19	; 0x07
     95a:	26 83       	std	Z+6, r18	; 0x06
     95c:	08 95       	ret

0000095e <initialize>:
    Time now;
    DISABLE(status);
    TIMERGET(now);
    ENABLE(status);
    return now - (status ? current->msg->baseline : timestamp);
}
     95e:	cf 93       	push	r28
     960:	df 93       	push	r29
     962:	00 d0       	rcall	.+0      	; 0x964 <initialize+0x6>
     964:	00 d0       	rcall	.+0      	; 0x966 <initialize+0x8>
     966:	cd b7       	in	r28, 0x3d	; 61
     968:	de b7       	in	r29, 0x3e	; 62
     96a:	80 e0       	ldi	r24, 0x00	; 0
     96c:	90 e0       	ldi	r25, 0x00	; 0
     96e:	18 c0       	rjmp	.+48     	; 0x9a0 <initialize+0x42>
     970:	ac 01       	movw	r20, r24
     972:	4f 5f       	subi	r20, 0xFF	; 255
     974:	5f 4f       	sbci	r21, 0xFF	; 255
     976:	9a 01       	movw	r18, r20
     978:	22 95       	swap	r18
     97a:	32 95       	swap	r19
     97c:	30 7f       	andi	r19, 0xF0	; 240
     97e:	32 27       	eor	r19, r18
     980:	20 7f       	andi	r18, 0xF0	; 240
     982:	32 27       	eor	r19, r18
     984:	25 5a       	subi	r18, 0xA5	; 165
     986:	3d 4f       	sbci	r19, 0xFD	; 253
     988:	82 95       	swap	r24
     98a:	92 95       	swap	r25
     98c:	90 7f       	andi	r25, 0xF0	; 240
     98e:	98 27       	eor	r25, r24
     990:	80 7f       	andi	r24, 0xF0	; 240
     992:	98 27       	eor	r25, r24
     994:	fc 01       	movw	r30, r24
     996:	e5 5a       	subi	r30, 0xA5	; 165
     998:	fd 4f       	sbci	r31, 0xFD	; 253
     99a:	31 83       	std	Z+1, r19	; 0x01
     99c:	20 83       	st	Z, r18
     99e:	ca 01       	movw	r24, r20
     9a0:	8e 30       	cpi	r24, 0x0E	; 14
     9a2:	91 05       	cpc	r25, r1
     9a4:	2c f3       	brlt	.-54     	; 0x970 <initialize+0x12>
     9a6:	10 92 3c 03 	sts	0x033C, r1	; 0x80033c <messages+0xe1>
     9aa:	10 92 3b 03 	sts	0x033B, r1	; 0x80033b <messages+0xe0>
     9ae:	80 e0       	ldi	r24, 0x00	; 0
     9b0:	90 e0       	ldi	r25, 0x00	; 0
     9b2:	15 c0       	rjmp	.+42     	; 0x9de <initialize+0x80>
     9b4:	ac 01       	movw	r20, r24
     9b6:	4f 5f       	subi	r20, 0xFF	; 255
     9b8:	5f 4f       	sbci	r21, 0xFF	; 255
     9ba:	6d e1       	ldi	r22, 0x1D	; 29
     9bc:	64 9f       	mul	r22, r20
     9be:	90 01       	movw	r18, r0
     9c0:	65 9f       	mul	r22, r21
     9c2:	30 0d       	add	r19, r0
     9c4:	11 24       	eor	r1, r1
     9c6:	2a 55       	subi	r18, 0x5A	; 90
     9c8:	3e 4f       	sbci	r19, 0xFE	; 254
     9ca:	68 9f       	mul	r22, r24
     9cc:	f0 01       	movw	r30, r0
     9ce:	69 9f       	mul	r22, r25
     9d0:	f0 0d       	add	r31, r0
     9d2:	11 24       	eor	r1, r1
     9d4:	ea 55       	subi	r30, 0x5A	; 90
     9d6:	fe 4f       	sbci	r31, 0xFE	; 254
     9d8:	31 83       	std	Z+1, r19	; 0x01
     9da:	20 83       	st	Z, r18
     9dc:	ca 01       	movw	r24, r20
     9de:	83 30       	cpi	r24, 0x03	; 3
     9e0:	91 05       	cpc	r25, r1
     9e2:	44 f3       	brlt	.-48     	; 0x9b4 <initialize+0x56>
     9e4:	10 92 fe 01 	sts	0x01FE, r1	; 0x8001fe <threads+0x58>
     9e8:	10 92 fd 01 	sts	0x01FD, r1	; 0x8001fd <threads+0x57>
     9ec:	1a 82       	std	Y+2, r1	; 0x02
     9ee:	19 82       	std	Y+1, r1	; 0x01
     9f0:	32 c0       	rjmp	.+100    	; 0xa56 <initialize+0xf8>
     9f2:	2d e1       	ldi	r18, 0x1D	; 29
     9f4:	49 81       	ldd	r20, Y+1	; 0x01
     9f6:	5a 81       	ldd	r21, Y+2	; 0x02
     9f8:	24 9f       	mul	r18, r20
     9fa:	c0 01       	movw	r24, r0
     9fc:	25 9f       	mul	r18, r21
     9fe:	90 0d       	add	r25, r0
     a00:	11 24       	eor	r1, r1
     a02:	fc 01       	movw	r30, r24
     a04:	e4 55       	subi	r30, 0x54	; 84
     a06:	fe 4f       	sbci	r31, 0xFE	; 254
     a08:	fc 83       	std	Y+4, r31	; 0x04
     a0a:	eb 83       	std	Y+3, r30	; 0x03
     a0c:	cf 01       	movw	r24, r30
     a0e:	0e 94 df 12 	call	0x25be	; 0x25be <setjmp>
     a12:	20 e6       	ldi	r18, 0x60	; 96
     a14:	49 81       	ldd	r20, Y+1	; 0x01
     a16:	5a 81       	ldd	r21, Y+2	; 0x02
     a18:	24 9f       	mul	r18, r20
     a1a:	c0 01       	movw	r24, r0
     a1c:	25 9f       	mul	r18, r21
     a1e:	90 0d       	add	r25, r0
     a20:	11 24       	eor	r1, r1
     a22:	89 55       	subi	r24, 0x59	; 89
     a24:	9c 4f       	sbci	r25, 0xFC	; 252
     a26:	eb 81       	ldd	r30, Y+3	; 0x03
     a28:	fc 81       	ldd	r31, Y+4	; 0x04
     a2a:	91 8b       	std	Z+17, r25	; 0x11
     a2c:	80 8b       	std	Z+16, r24	; 0x10
     a2e:	93 8b       	std	Z+19, r25	; 0x13
     a30:	82 8b       	std	Z+18, r24	; 0x12
     a32:	8b e8       	ldi	r24, 0x8B	; 139
     a34:	90 e1       	ldi	r25, 0x10	; 16
     a36:	96 8b       	std	Z+22, r25	; 0x16
     a38:	85 8b       	std	Z+21, r24	; 0x15
     a3a:	8d e1       	ldi	r24, 0x1D	; 29
     a3c:	84 9f       	mul	r24, r20
     a3e:	f0 01       	movw	r30, r0
     a40:	85 9f       	mul	r24, r21
     a42:	f0 0d       	add	r31, r0
     a44:	11 24       	eor	r1, r1
     a46:	ea 55       	subi	r30, 0x5A	; 90
     a48:	fe 4f       	sbci	r31, 0xFE	; 254
     a4a:	15 82       	std	Z+5, r1	; 0x05
     a4c:	14 82       	std	Z+4, r1	; 0x04
     a4e:	4f 5f       	subi	r20, 0xFF	; 255
     a50:	5f 4f       	sbci	r21, 0xFF	; 255
     a52:	5a 83       	std	Y+2, r21	; 0x02
     a54:	49 83       	std	Y+1, r20	; 0x01
     a56:	29 81       	ldd	r18, Y+1	; 0x01
     a58:	3a 81       	ldd	r19, Y+2	; 0x02
     a5a:	24 30       	cpi	r18, 0x04	; 4
     a5c:	31 05       	cpc	r19, r1
     a5e:	4c f2       	brlt	.-110    	; 0x9f2 <initialize+0x94>
     a60:	ee e3       	ldi	r30, 0x3E	; 62
     a62:	f2 e0       	ldi	r31, 0x02	; 2
     a64:	11 82       	std	Z+1, r1	; 0x01
     a66:	10 82       	st	Z, r1
     a68:	15 82       	std	Z+5, r1	; 0x05
     a6a:	14 82       	std	Z+4, r1	; 0x04
     a6c:	13 82       	std	Z+3, r1	; 0x03
     a6e:	12 82       	std	Z+2, r1	; 0x02
     a70:	e1 e6       	ldi	r30, 0x61	; 97
     a72:	f0 e0       	ldi	r31, 0x00	; 0
     a74:	80 e8       	ldi	r24, 0x80	; 128
     a76:	80 83       	st	Z, r24
     a78:	10 82       	st	Z, r1
     a7a:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     a7e:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     a82:	84 e0       	ldi	r24, 0x04	; 4
     a84:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7fc081>
     a88:	81 e0       	ldi	r24, 0x01	; 1
     a8a:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
     a8e:	0f 90       	pop	r0
     a90:	0f 90       	pop	r0
     a92:	0f 90       	pop	r0
     a94:	0f 90       	pop	r0
     a96:	df 91       	pop	r29
     a98:	cf 91       	pop	r28
     a9a:	08 95       	ret

00000a9c <dispatch>:
     a9c:	cf 93       	push	r28
     a9e:	df 93       	push	r29
     aa0:	00 d0       	rcall	.+0      	; 0xaa2 <dispatch+0x6>
     aa2:	cd b7       	in	r28, 0x3d	; 61
     aa4:	de b7       	in	r29, 0x3e	; 62
     aa6:	9a 83       	std	Y+2, r25	; 0x02
     aa8:	89 83       	std	Y+1, r24	; 0x01
     aaa:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <current>
     aae:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <current+0x1>
     ab2:	06 96       	adiw	r24, 0x06	; 6
     ab4:	0e 94 df 12 	call	0x25be	; 0x25be <setjmp>
     ab8:	89 2b       	or	r24, r25
     aba:	59 f4       	brne	.+22     	; 0xad2 <dispatch+0x36>
     abc:	89 81       	ldd	r24, Y+1	; 0x01
     abe:	9a 81       	ldd	r25, Y+2	; 0x02
     ac0:	90 93 71 01 	sts	0x0171, r25	; 0x800171 <current+0x1>
     ac4:	80 93 70 01 	sts	0x0170, r24	; 0x800170 <current>
     ac8:	61 e0       	ldi	r22, 0x01	; 1
     aca:	70 e0       	ldi	r23, 0x00	; 0
     acc:	06 96       	adiw	r24, 0x06	; 6
     ace:	0e 94 ff 12 	call	0x25fe	; 0x25fe <longjmp>
     ad2:	0f 90       	pop	r0
     ad4:	0f 90       	pop	r0
     ad6:	df 91       	pop	r29
     ad8:	cf 91       	pop	r28
     ada:	08 95       	ret

00000adc <enqueueByDeadline>:
     adc:	0f 93       	push	r16
     ade:	1f 93       	push	r17
     ae0:	cf 93       	push	r28
     ae2:	df 93       	push	r29
     ae4:	dc 01       	movw	r26, r24
     ae6:	cb 01       	movw	r24, r22
     ae8:	eb 01       	movw	r28, r22
     aea:	e8 81       	ld	r30, Y
     aec:	f9 81       	ldd	r31, Y+1	; 0x01
     aee:	c0 e0       	ldi	r28, 0x00	; 0
     af0:	d0 e0       	ldi	r29, 0x00	; 0
     af2:	04 c0       	rjmp	.+8      	; 0xafc <enqueueByDeadline+0x20>
     af4:	ef 01       	movw	r28, r30
     af6:	01 90       	ld	r0, Z+
     af8:	f0 81       	ld	r31, Z
     afa:	e0 2d       	mov	r30, r0
     afc:	30 97       	sbiw	r30, 0x00	; 0
     afe:	79 f0       	breq	.+30     	; 0xb1e <enqueueByDeadline+0x42>
     b00:	06 81       	ldd	r16, Z+6	; 0x06
     b02:	17 81       	ldd	r17, Z+7	; 0x07
     b04:	20 85       	ldd	r18, Z+8	; 0x08
     b06:	31 85       	ldd	r19, Z+9	; 0x09
     b08:	16 96       	adiw	r26, 0x06	; 6
     b0a:	4d 91       	ld	r20, X+
     b0c:	5d 91       	ld	r21, X+
     b0e:	6d 91       	ld	r22, X+
     b10:	7c 91       	ld	r23, X
     b12:	19 97       	sbiw	r26, 0x09	; 9
     b14:	40 17       	cp	r20, r16
     b16:	51 07       	cpc	r21, r17
     b18:	62 07       	cpc	r22, r18
     b1a:	73 07       	cpc	r23, r19
     b1c:	5c f7       	brge	.-42     	; 0xaf4 <enqueueByDeadline+0x18>
     b1e:	11 96       	adiw	r26, 0x01	; 1
     b20:	fc 93       	st	X, r31
     b22:	ee 93       	st	-X, r30
     b24:	20 97       	sbiw	r28, 0x00	; 0
     b26:	21 f4       	brne	.+8      	; 0xb30 <enqueueByDeadline+0x54>
     b28:	fc 01       	movw	r30, r24
     b2a:	b1 83       	std	Z+1, r27	; 0x01
     b2c:	a0 83       	st	Z, r26
     b2e:	02 c0       	rjmp	.+4      	; 0xb34 <enqueueByDeadline+0x58>
     b30:	b9 83       	std	Y+1, r27	; 0x01
     b32:	a8 83       	st	Y, r26
     b34:	df 91       	pop	r29
     b36:	cf 91       	pop	r28
     b38:	1f 91       	pop	r17
     b3a:	0f 91       	pop	r16
     b3c:	08 95       	ret

00000b3e <enqueueByBaseline>:
     b3e:	0f 93       	push	r16
     b40:	1f 93       	push	r17
     b42:	cf 93       	push	r28
     b44:	df 93       	push	r29
     b46:	dc 01       	movw	r26, r24
     b48:	cb 01       	movw	r24, r22
     b4a:	eb 01       	movw	r28, r22
     b4c:	e8 81       	ld	r30, Y
     b4e:	f9 81       	ldd	r31, Y+1	; 0x01
     b50:	c0 e0       	ldi	r28, 0x00	; 0
     b52:	d0 e0       	ldi	r29, 0x00	; 0
     b54:	04 c0       	rjmp	.+8      	; 0xb5e <enqueueByBaseline+0x20>
     b56:	ef 01       	movw	r28, r30
     b58:	01 90       	ld	r0, Z+
     b5a:	f0 81       	ld	r31, Z
     b5c:	e0 2d       	mov	r30, r0
     b5e:	30 97       	sbiw	r30, 0x00	; 0
     b60:	79 f0       	breq	.+30     	; 0xb80 <enqueueByBaseline+0x42>
     b62:	02 81       	ldd	r16, Z+2	; 0x02
     b64:	13 81       	ldd	r17, Z+3	; 0x03
     b66:	24 81       	ldd	r18, Z+4	; 0x04
     b68:	35 81       	ldd	r19, Z+5	; 0x05
     b6a:	12 96       	adiw	r26, 0x02	; 2
     b6c:	4d 91       	ld	r20, X+
     b6e:	5d 91       	ld	r21, X+
     b70:	6d 91       	ld	r22, X+
     b72:	7c 91       	ld	r23, X
     b74:	15 97       	sbiw	r26, 0x05	; 5
     b76:	40 17       	cp	r20, r16
     b78:	51 07       	cpc	r21, r17
     b7a:	62 07       	cpc	r22, r18
     b7c:	73 07       	cpc	r23, r19
     b7e:	5c f7       	brge	.-42     	; 0xb56 <enqueueByBaseline+0x18>
     b80:	11 96       	adiw	r26, 0x01	; 1
     b82:	fc 93       	st	X, r31
     b84:	ee 93       	st	-X, r30
     b86:	20 97       	sbiw	r28, 0x00	; 0
     b88:	21 f4       	brne	.+8      	; 0xb92 <enqueueByBaseline+0x54>
     b8a:	fc 01       	movw	r30, r24
     b8c:	b1 83       	std	Z+1, r27	; 0x01
     b8e:	a0 83       	st	Z, r26
     b90:	02 c0       	rjmp	.+4      	; 0xb96 <enqueueByBaseline+0x58>
     b92:	b9 83       	std	Y+1, r27	; 0x01
     b94:	a8 83       	st	Y, r26
     b96:	df 91       	pop	r29
     b98:	cf 91       	pop	r28
     b9a:	1f 91       	pop	r17
     b9c:	0f 91       	pop	r16
     b9e:	08 95       	ret

00000ba0 <dequeue>:
     ba0:	dc 01       	movw	r26, r24
     ba2:	ed 91       	ld	r30, X+
     ba4:	fc 91       	ld	r31, X
     ba6:	11 97       	sbiw	r26, 0x01	; 1
     ba8:	30 97       	sbiw	r30, 0x00	; 0
     baa:	59 f4       	brne	.+22     	; 0xbc2 <dequeue+0x22>
     bac:	8f ef       	ldi	r24, 0xFF	; 255
     bae:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
     bb2:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
     bb6:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
     bba:	81 e0       	ldi	r24, 0x01	; 1
     bbc:	83 bf       	out	0x33, r24	; 51
     bbe:	88 95       	sleep
     bc0:	fc cf       	rjmp	.-8      	; 0xbba <dequeue+0x1a>
     bc2:	20 81       	ld	r18, Z
     bc4:	31 81       	ldd	r19, Z+1	; 0x01
     bc6:	2d 93       	st	X+, r18
     bc8:	3c 93       	st	X, r19
     bca:	cf 01       	movw	r24, r30
     bcc:	08 95       	ret

00000bce <insert>:
     bce:	fb 01       	movw	r30, r22
     bd0:	20 81       	ld	r18, Z
     bd2:	31 81       	ldd	r19, Z+1	; 0x01
     bd4:	fc 01       	movw	r30, r24
     bd6:	31 83       	std	Z+1, r19	; 0x01
     bd8:	20 83       	st	Z, r18
     bda:	fb 01       	movw	r30, r22
     bdc:	91 83       	std	Z+1, r25	; 0x01
     bde:	80 83       	st	Z, r24
     be0:	08 95       	ret

00000be2 <push>:
     be2:	fb 01       	movw	r30, r22
     be4:	20 81       	ld	r18, Z
     be6:	31 81       	ldd	r19, Z+1	; 0x01
     be8:	fc 01       	movw	r30, r24
     bea:	31 83       	std	Z+1, r19	; 0x01
     bec:	20 83       	st	Z, r18
     bee:	fb 01       	movw	r30, r22
     bf0:	91 83       	std	Z+1, r25	; 0x01
     bf2:	80 83       	st	Z, r24
     bf4:	08 95       	ret

00000bf6 <pop>:
     bf6:	dc 01       	movw	r26, r24
     bf8:	ed 91       	ld	r30, X+
     bfa:	fc 91       	ld	r31, X
     bfc:	11 97       	sbiw	r26, 0x01	; 1
     bfe:	20 81       	ld	r18, Z
     c00:	31 81       	ldd	r19, Z+1	; 0x01
     c02:	2d 93       	st	X+, r18
     c04:	3c 93       	st	X, r19
     c06:	cf 01       	movw	r24, r30
     c08:	08 95       	ret

00000c0a <schedule>:
     c0a:	cf 93       	push	r28
     c0c:	df 93       	push	r29
     c0e:	e0 91 72 01 	lds	r30, 0x0172	; 0x800172 <activeStack>
     c12:	f0 91 73 01 	lds	r31, 0x0173	; 0x800173 <activeStack+0x1>
     c16:	c2 81       	ldd	r28, Z+2	; 0x02
     c18:	d3 81       	ldd	r29, Z+3	; 0x03
     c1a:	e0 91 80 01 	lds	r30, 0x0180	; 0x800180 <msgQ>
     c1e:	f0 91 81 01 	lds	r31, 0x0181	; 0x800181 <msgQ+0x1>
     c22:	30 97       	sbiw	r30, 0x00	; 0
     c24:	19 f1       	breq	.+70     	; 0xc6c <schedule+0x62>
     c26:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <threadPool>
     c2a:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <threadPool+0x1>
     c2e:	89 2b       	or	r24, r25
     c30:	e9 f0       	breq	.+58     	; 0xc6c <schedule+0x62>
     c32:	20 97       	sbiw	r28, 0x00	; 0
     c34:	69 f0       	breq	.+26     	; 0xc50 <schedule+0x46>
     c36:	86 81       	ldd	r24, Z+6	; 0x06
     c38:	97 81       	ldd	r25, Z+7	; 0x07
     c3a:	a0 85       	ldd	r26, Z+8	; 0x08
     c3c:	b1 85       	ldd	r27, Z+9	; 0x09
     c3e:	4e 81       	ldd	r20, Y+6	; 0x06
     c40:	5f 81       	ldd	r21, Y+7	; 0x07
     c42:	68 85       	ldd	r22, Y+8	; 0x08
     c44:	79 85       	ldd	r23, Y+9	; 0x09
     c46:	84 1b       	sub	r24, r20
     c48:	95 0b       	sbc	r25, r21
     c4a:	a6 0b       	sbc	r26, r22
     c4c:	b7 0b       	sbc	r27, r23
     c4e:	72 f4       	brpl	.+28     	; 0xc6c <schedule+0x62>
     c50:	84 e7       	ldi	r24, 0x74	; 116
     c52:	91 e0       	ldi	r25, 0x01	; 1
     c54:	0e 94 fb 05 	call	0xbf6	; 0xbf6 <pop>
     c58:	62 e7       	ldi	r22, 0x72	; 114
     c5a:	71 e0       	ldi	r23, 0x01	; 1
     c5c:	0e 94 f1 05 	call	0xbe2	; 0xbe2 <push>
     c60:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <activeStack>
     c64:	90 91 73 01 	lds	r25, 0x0173	; 0x800173 <activeStack+0x1>
     c68:	0e 94 4e 05 	call	0xa9c	; 0xa9c <dispatch>
     c6c:	df 91       	pop	r29
     c6e:	cf 91       	pop	r28
     c70:	08 95       	ret

00000c72 <__vector_1>:
     c72:	1f 92       	push	r1
     c74:	0f 92       	push	r0
     c76:	0f b6       	in	r0, 0x3f	; 63
     c78:	0f 92       	push	r0
     c7a:	11 24       	eor	r1, r1
     c7c:	0f 93       	push	r16
     c7e:	1f 93       	push	r17
     c80:	2f 93       	push	r18
     c82:	3f 93       	push	r19
     c84:	4f 93       	push	r20
     c86:	5f 93       	push	r21
     c88:	6f 93       	push	r22
     c8a:	7f 93       	push	r23
     c8c:	8f 93       	push	r24
     c8e:	9f 93       	push	r25
     c90:	af 93       	push	r26
     c92:	bf 93       	push	r27
     c94:	ef 93       	push	r30
     c96:	ff 93       	push	r31
     c98:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
     c9c:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <__data_end+0x1>
     ca0:	ac 01       	movw	r20, r24
     ca2:	09 2e       	mov	r0, r25
     ca4:	00 0c       	add	r0, r0
     ca6:	66 0b       	sbc	r22, r22
     ca8:	77 0b       	sbc	r23, r23
     caa:	9a 01       	movw	r18, r20
     cac:	11 27       	eor	r17, r17
     cae:	00 27       	eor	r16, r16
     cb0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     cb4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     cb8:	60 e0       	ldi	r22, 0x00	; 0
     cba:	70 e0       	ldi	r23, 0x00	; 0
     cbc:	40 2b       	or	r20, r16
     cbe:	51 2b       	or	r21, r17
     cc0:	62 2b       	or	r22, r18
     cc2:	73 2b       	or	r23, r19
     cc4:	40 93 7a 01 	sts	0x017A, r20	; 0x80017a <timestamp>
     cc8:	50 93 7b 01 	sts	0x017B, r21	; 0x80017b <timestamp+0x1>
     ccc:	60 93 7c 01 	sts	0x017C, r22	; 0x80017c <timestamp+0x2>
     cd0:	70 93 7d 01 	sts	0x017D, r23	; 0x80017d <timestamp+0x3>
     cd4:	b0 9b       	sbis	0x16, 0	; 22
     cd6:	1a c0       	rjmp	.+52     	; 0xd0c <__vector_1+0x9a>
     cd8:	01 96       	adiw	r24, 0x01	; 1
     cda:	09 2e       	mov	r0, r25
     cdc:	00 0c       	add	r0, r0
     cde:	aa 0b       	sbc	r26, r26
     ce0:	bb 0b       	sbc	r27, r27
     ce2:	bc 01       	movw	r22, r24
     ce4:	55 27       	eor	r21, r21
     ce6:	44 27       	eor	r20, r20
     ce8:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     cec:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     cf0:	a0 e0       	ldi	r26, 0x00	; 0
     cf2:	b0 e0       	ldi	r27, 0x00	; 0
     cf4:	84 2b       	or	r24, r20
     cf6:	95 2b       	or	r25, r21
     cf8:	a6 2b       	or	r26, r22
     cfa:	b7 2b       	or	r27, r23
     cfc:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
     d00:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
     d04:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
     d08:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
     d0c:	e0 91 1a 02 	lds	r30, 0x021A	; 0x80021a <mtable>
     d10:	f0 91 1b 02 	lds	r31, 0x021B	; 0x80021b <mtable+0x1>
     d14:	30 97       	sbiw	r30, 0x00	; 0
     d16:	39 f0       	breq	.+14     	; 0xd26 <__vector_1+0xb4>
     d18:	60 e0       	ldi	r22, 0x00	; 0
     d1a:	70 e0       	ldi	r23, 0x00	; 0
     d1c:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <otable>
     d20:	90 91 83 01 	lds	r25, 0x0183	; 0x800183 <otable+0x1>
     d24:	09 95       	icall
     d26:	0e 94 05 06 	call	0xc0a	; 0xc0a <schedule>
     d2a:	ff 91       	pop	r31
     d2c:	ef 91       	pop	r30
     d2e:	bf 91       	pop	r27
     d30:	af 91       	pop	r26
     d32:	9f 91       	pop	r25
     d34:	8f 91       	pop	r24
     d36:	7f 91       	pop	r23
     d38:	6f 91       	pop	r22
     d3a:	5f 91       	pop	r21
     d3c:	4f 91       	pop	r20
     d3e:	3f 91       	pop	r19
     d40:	2f 91       	pop	r18
     d42:	1f 91       	pop	r17
     d44:	0f 91       	pop	r16
     d46:	0f 90       	pop	r0
     d48:	0f be       	out	0x3f, r0	; 63
     d4a:	0f 90       	pop	r0
     d4c:	1f 90       	pop	r1
     d4e:	18 95       	reti

00000d50 <__vector_2>:
     d50:	1f 92       	push	r1
     d52:	0f 92       	push	r0
     d54:	0f b6       	in	r0, 0x3f	; 63
     d56:	0f 92       	push	r0
     d58:	11 24       	eor	r1, r1
     d5a:	0f 93       	push	r16
     d5c:	1f 93       	push	r17
     d5e:	2f 93       	push	r18
     d60:	3f 93       	push	r19
     d62:	4f 93       	push	r20
     d64:	5f 93       	push	r21
     d66:	6f 93       	push	r22
     d68:	7f 93       	push	r23
     d6a:	8f 93       	push	r24
     d6c:	9f 93       	push	r25
     d6e:	af 93       	push	r26
     d70:	bf 93       	push	r27
     d72:	ef 93       	push	r30
     d74:	ff 93       	push	r31
     d76:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
     d7a:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <__data_end+0x1>
     d7e:	ac 01       	movw	r20, r24
     d80:	09 2e       	mov	r0, r25
     d82:	00 0c       	add	r0, r0
     d84:	66 0b       	sbc	r22, r22
     d86:	77 0b       	sbc	r23, r23
     d88:	9a 01       	movw	r18, r20
     d8a:	11 27       	eor	r17, r17
     d8c:	00 27       	eor	r16, r16
     d8e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d92:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d96:	60 e0       	ldi	r22, 0x00	; 0
     d98:	70 e0       	ldi	r23, 0x00	; 0
     d9a:	40 2b       	or	r20, r16
     d9c:	51 2b       	or	r21, r17
     d9e:	62 2b       	or	r22, r18
     da0:	73 2b       	or	r23, r19
     da2:	40 93 7a 01 	sts	0x017A, r20	; 0x80017a <timestamp>
     da6:	50 93 7b 01 	sts	0x017B, r21	; 0x80017b <timestamp+0x1>
     daa:	60 93 7c 01 	sts	0x017C, r22	; 0x80017c <timestamp+0x2>
     dae:	70 93 7d 01 	sts	0x017D, r23	; 0x80017d <timestamp+0x3>
     db2:	b0 9b       	sbis	0x16, 0	; 22
     db4:	1a c0       	rjmp	.+52     	; 0xdea <__vector_2+0x9a>
     db6:	01 96       	adiw	r24, 0x01	; 1
     db8:	09 2e       	mov	r0, r25
     dba:	00 0c       	add	r0, r0
     dbc:	aa 0b       	sbc	r26, r26
     dbe:	bb 0b       	sbc	r27, r27
     dc0:	bc 01       	movw	r22, r24
     dc2:	55 27       	eor	r21, r21
     dc4:	44 27       	eor	r20, r20
     dc6:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     dca:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     dce:	a0 e0       	ldi	r26, 0x00	; 0
     dd0:	b0 e0       	ldi	r27, 0x00	; 0
     dd2:	84 2b       	or	r24, r20
     dd4:	95 2b       	or	r25, r21
     dd6:	a6 2b       	or	r26, r22
     dd8:	b7 2b       	or	r27, r23
     dda:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
     dde:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
     de2:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
     de6:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
     dea:	e0 91 1c 02 	lds	r30, 0x021C	; 0x80021c <mtable+0x2>
     dee:	f0 91 1d 02 	lds	r31, 0x021D	; 0x80021d <mtable+0x3>
     df2:	30 97       	sbiw	r30, 0x00	; 0
     df4:	39 f0       	breq	.+14     	; 0xe04 <__vector_2+0xb4>
     df6:	61 e0       	ldi	r22, 0x01	; 1
     df8:	70 e0       	ldi	r23, 0x00	; 0
     dfa:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <otable+0x2>
     dfe:	90 91 85 01 	lds	r25, 0x0185	; 0x800185 <otable+0x3>
     e02:	09 95       	icall
     e04:	0e 94 05 06 	call	0xc0a	; 0xc0a <schedule>
     e08:	ff 91       	pop	r31
     e0a:	ef 91       	pop	r30
     e0c:	bf 91       	pop	r27
     e0e:	af 91       	pop	r26
     e10:	9f 91       	pop	r25
     e12:	8f 91       	pop	r24
     e14:	7f 91       	pop	r23
     e16:	6f 91       	pop	r22
     e18:	5f 91       	pop	r21
     e1a:	4f 91       	pop	r20
     e1c:	3f 91       	pop	r19
     e1e:	2f 91       	pop	r18
     e20:	1f 91       	pop	r17
     e22:	0f 91       	pop	r16
     e24:	0f 90       	pop	r0
     e26:	0f be       	out	0x3f, r0	; 63
     e28:	0f 90       	pop	r0
     e2a:	1f 90       	pop	r1
     e2c:	18 95       	reti

00000e2e <__vector_3>:
     e2e:	1f 92       	push	r1
     e30:	0f 92       	push	r0
     e32:	0f b6       	in	r0, 0x3f	; 63
     e34:	0f 92       	push	r0
     e36:	11 24       	eor	r1, r1
     e38:	0f 93       	push	r16
     e3a:	1f 93       	push	r17
     e3c:	2f 93       	push	r18
     e3e:	3f 93       	push	r19
     e40:	4f 93       	push	r20
     e42:	5f 93       	push	r21
     e44:	6f 93       	push	r22
     e46:	7f 93       	push	r23
     e48:	8f 93       	push	r24
     e4a:	9f 93       	push	r25
     e4c:	af 93       	push	r26
     e4e:	bf 93       	push	r27
     e50:	ef 93       	push	r30
     e52:	ff 93       	push	r31
     e54:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
     e58:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <__data_end+0x1>
     e5c:	ac 01       	movw	r20, r24
     e5e:	09 2e       	mov	r0, r25
     e60:	00 0c       	add	r0, r0
     e62:	66 0b       	sbc	r22, r22
     e64:	77 0b       	sbc	r23, r23
     e66:	9a 01       	movw	r18, r20
     e68:	11 27       	eor	r17, r17
     e6a:	00 27       	eor	r16, r16
     e6c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e70:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e74:	60 e0       	ldi	r22, 0x00	; 0
     e76:	70 e0       	ldi	r23, 0x00	; 0
     e78:	40 2b       	or	r20, r16
     e7a:	51 2b       	or	r21, r17
     e7c:	62 2b       	or	r22, r18
     e7e:	73 2b       	or	r23, r19
     e80:	40 93 7a 01 	sts	0x017A, r20	; 0x80017a <timestamp>
     e84:	50 93 7b 01 	sts	0x017B, r21	; 0x80017b <timestamp+0x1>
     e88:	60 93 7c 01 	sts	0x017C, r22	; 0x80017c <timestamp+0x2>
     e8c:	70 93 7d 01 	sts	0x017D, r23	; 0x80017d <timestamp+0x3>
     e90:	b0 9b       	sbis	0x16, 0	; 22
     e92:	1a c0       	rjmp	.+52     	; 0xec8 <__vector_3+0x9a>
     e94:	01 96       	adiw	r24, 0x01	; 1
     e96:	09 2e       	mov	r0, r25
     e98:	00 0c       	add	r0, r0
     e9a:	aa 0b       	sbc	r26, r26
     e9c:	bb 0b       	sbc	r27, r27
     e9e:	bc 01       	movw	r22, r24
     ea0:	55 27       	eor	r21, r21
     ea2:	44 27       	eor	r20, r20
     ea4:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ea8:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     eac:	a0 e0       	ldi	r26, 0x00	; 0
     eae:	b0 e0       	ldi	r27, 0x00	; 0
     eb0:	84 2b       	or	r24, r20
     eb2:	95 2b       	or	r25, r21
     eb4:	a6 2b       	or	r26, r22
     eb6:	b7 2b       	or	r27, r23
     eb8:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
     ebc:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
     ec0:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
     ec4:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
     ec8:	e0 91 1e 02 	lds	r30, 0x021E	; 0x80021e <mtable+0x4>
     ecc:	f0 91 1f 02 	lds	r31, 0x021F	; 0x80021f <mtable+0x5>
     ed0:	30 97       	sbiw	r30, 0x00	; 0
     ed2:	39 f0       	breq	.+14     	; 0xee2 <__vector_3+0xb4>
     ed4:	62 e0       	ldi	r22, 0x02	; 2
     ed6:	70 e0       	ldi	r23, 0x00	; 0
     ed8:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <otable+0x4>
     edc:	90 91 87 01 	lds	r25, 0x0187	; 0x800187 <otable+0x5>
     ee0:	09 95       	icall
     ee2:	0e 94 05 06 	call	0xc0a	; 0xc0a <schedule>
     ee6:	ff 91       	pop	r31
     ee8:	ef 91       	pop	r30
     eea:	bf 91       	pop	r27
     eec:	af 91       	pop	r26
     eee:	9f 91       	pop	r25
     ef0:	8f 91       	pop	r24
     ef2:	7f 91       	pop	r23
     ef4:	6f 91       	pop	r22
     ef6:	5f 91       	pop	r21
     ef8:	4f 91       	pop	r20
     efa:	3f 91       	pop	r19
     efc:	2f 91       	pop	r18
     efe:	1f 91       	pop	r17
     f00:	0f 91       	pop	r16
     f02:	0f 90       	pop	r0
     f04:	0f be       	out	0x3f, r0	; 63
     f06:	0f 90       	pop	r0
     f08:	1f 90       	pop	r1
     f0a:	18 95       	reti

00000f0c <__vector_4>:
     f0c:	1f 92       	push	r1
     f0e:	0f 92       	push	r0
     f10:	0f b6       	in	r0, 0x3f	; 63
     f12:	0f 92       	push	r0
     f14:	11 24       	eor	r1, r1
     f16:	0f 93       	push	r16
     f18:	1f 93       	push	r17
     f1a:	2f 93       	push	r18
     f1c:	3f 93       	push	r19
     f1e:	4f 93       	push	r20
     f20:	5f 93       	push	r21
     f22:	6f 93       	push	r22
     f24:	7f 93       	push	r23
     f26:	8f 93       	push	r24
     f28:	9f 93       	push	r25
     f2a:	af 93       	push	r26
     f2c:	bf 93       	push	r27
     f2e:	ef 93       	push	r30
     f30:	ff 93       	push	r31
     f32:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
     f36:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <__data_end+0x1>
     f3a:	ac 01       	movw	r20, r24
     f3c:	09 2e       	mov	r0, r25
     f3e:	00 0c       	add	r0, r0
     f40:	66 0b       	sbc	r22, r22
     f42:	77 0b       	sbc	r23, r23
     f44:	9a 01       	movw	r18, r20
     f46:	11 27       	eor	r17, r17
     f48:	00 27       	eor	r16, r16
     f4a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f4e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f52:	60 e0       	ldi	r22, 0x00	; 0
     f54:	70 e0       	ldi	r23, 0x00	; 0
     f56:	40 2b       	or	r20, r16
     f58:	51 2b       	or	r21, r17
     f5a:	62 2b       	or	r22, r18
     f5c:	73 2b       	or	r23, r19
     f5e:	40 93 7a 01 	sts	0x017A, r20	; 0x80017a <timestamp>
     f62:	50 93 7b 01 	sts	0x017B, r21	; 0x80017b <timestamp+0x1>
     f66:	60 93 7c 01 	sts	0x017C, r22	; 0x80017c <timestamp+0x2>
     f6a:	70 93 7d 01 	sts	0x017D, r23	; 0x80017d <timestamp+0x3>
     f6e:	b0 9b       	sbis	0x16, 0	; 22
     f70:	1a c0       	rjmp	.+52     	; 0xfa6 <__vector_4+0x9a>
     f72:	01 96       	adiw	r24, 0x01	; 1
     f74:	09 2e       	mov	r0, r25
     f76:	00 0c       	add	r0, r0
     f78:	aa 0b       	sbc	r26, r26
     f7a:	bb 0b       	sbc	r27, r27
     f7c:	bc 01       	movw	r22, r24
     f7e:	55 27       	eor	r21, r21
     f80:	44 27       	eor	r20, r20
     f82:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f86:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f8a:	a0 e0       	ldi	r26, 0x00	; 0
     f8c:	b0 e0       	ldi	r27, 0x00	; 0
     f8e:	84 2b       	or	r24, r20
     f90:	95 2b       	or	r25, r21
     f92:	a6 2b       	or	r26, r22
     f94:	b7 2b       	or	r27, r23
     f96:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
     f9a:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
     f9e:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
     fa2:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
     fa6:	e0 91 20 02 	lds	r30, 0x0220	; 0x800220 <mtable+0x6>
     faa:	f0 91 21 02 	lds	r31, 0x0221	; 0x800221 <mtable+0x7>
     fae:	30 97       	sbiw	r30, 0x00	; 0
     fb0:	39 f0       	breq	.+14     	; 0xfc0 <__vector_4+0xb4>
     fb2:	63 e0       	ldi	r22, 0x03	; 3
     fb4:	70 e0       	ldi	r23, 0x00	; 0
     fb6:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <otable+0x6>
     fba:	90 91 89 01 	lds	r25, 0x0189	; 0x800189 <otable+0x7>
     fbe:	09 95       	icall
     fc0:	0e 94 05 06 	call	0xc0a	; 0xc0a <schedule>
     fc4:	ff 91       	pop	r31
     fc6:	ef 91       	pop	r30
     fc8:	bf 91       	pop	r27
     fca:	af 91       	pop	r26
     fcc:	9f 91       	pop	r25
     fce:	8f 91       	pop	r24
     fd0:	7f 91       	pop	r23
     fd2:	6f 91       	pop	r22
     fd4:	5f 91       	pop	r21
     fd6:	4f 91       	pop	r20
     fd8:	3f 91       	pop	r19
     fda:	2f 91       	pop	r18
     fdc:	1f 91       	pop	r17
     fde:	0f 91       	pop	r16
     fe0:	0f 90       	pop	r0
     fe2:	0f be       	out	0x3f, r0	; 63
     fe4:	0f 90       	pop	r0
     fe6:	1f 90       	pop	r1
     fe8:	18 95       	reti

00000fea <__vector_5>:
     fea:	1f 92       	push	r1
     fec:	0f 92       	push	r0
     fee:	0f b6       	in	r0, 0x3f	; 63
     ff0:	0f 92       	push	r0
     ff2:	11 24       	eor	r1, r1
     ff4:	0f 93       	push	r16
     ff6:	1f 93       	push	r17
     ff8:	2f 93       	push	r18
     ffa:	3f 93       	push	r19
     ffc:	4f 93       	push	r20
     ffe:	5f 93       	push	r21
    1000:	6f 93       	push	r22
    1002:	7f 93       	push	r23
    1004:	8f 93       	push	r24
    1006:	9f 93       	push	r25
    1008:	af 93       	push	r26
    100a:	bf 93       	push	r27
    100c:	ef 93       	push	r30
    100e:	ff 93       	push	r31
    1010:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
    1014:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <__data_end+0x1>
    1018:	ac 01       	movw	r20, r24
    101a:	09 2e       	mov	r0, r25
    101c:	00 0c       	add	r0, r0
    101e:	66 0b       	sbc	r22, r22
    1020:	77 0b       	sbc	r23, r23
    1022:	9a 01       	movw	r18, r20
    1024:	11 27       	eor	r17, r17
    1026:	00 27       	eor	r16, r16
    1028:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    102c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1030:	60 e0       	ldi	r22, 0x00	; 0
    1032:	70 e0       	ldi	r23, 0x00	; 0
    1034:	40 2b       	or	r20, r16
    1036:	51 2b       	or	r21, r17
    1038:	62 2b       	or	r22, r18
    103a:	73 2b       	or	r23, r19
    103c:	40 93 7a 01 	sts	0x017A, r20	; 0x80017a <timestamp>
    1040:	50 93 7b 01 	sts	0x017B, r21	; 0x80017b <timestamp+0x1>
    1044:	60 93 7c 01 	sts	0x017C, r22	; 0x80017c <timestamp+0x2>
    1048:	70 93 7d 01 	sts	0x017D, r23	; 0x80017d <timestamp+0x3>
    104c:	b0 9b       	sbis	0x16, 0	; 22
    104e:	1a c0       	rjmp	.+52     	; 0x1084 <__vector_5+0x9a>
    1050:	01 96       	adiw	r24, 0x01	; 1
    1052:	09 2e       	mov	r0, r25
    1054:	00 0c       	add	r0, r0
    1056:	aa 0b       	sbc	r26, r26
    1058:	bb 0b       	sbc	r27, r27
    105a:	bc 01       	movw	r22, r24
    105c:	55 27       	eor	r21, r21
    105e:	44 27       	eor	r20, r20
    1060:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1064:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1068:	a0 e0       	ldi	r26, 0x00	; 0
    106a:	b0 e0       	ldi	r27, 0x00	; 0
    106c:	84 2b       	or	r24, r20
    106e:	95 2b       	or	r25, r21
    1070:	a6 2b       	or	r26, r22
    1072:	b7 2b       	or	r27, r23
    1074:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    1078:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    107c:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    1080:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    1084:	e0 91 22 02 	lds	r30, 0x0222	; 0x800222 <mtable+0x8>
    1088:	f0 91 23 02 	lds	r31, 0x0223	; 0x800223 <mtable+0x9>
    108c:	30 97       	sbiw	r30, 0x00	; 0
    108e:	39 f0       	breq	.+14     	; 0x109e <__vector_5+0xb4>
    1090:	64 e0       	ldi	r22, 0x04	; 4
    1092:	70 e0       	ldi	r23, 0x00	; 0
    1094:	80 91 8a 01 	lds	r24, 0x018A	; 0x80018a <otable+0x8>
    1098:	90 91 8b 01 	lds	r25, 0x018B	; 0x80018b <otable+0x9>
    109c:	09 95       	icall
    109e:	0e 94 05 06 	call	0xc0a	; 0xc0a <schedule>
    10a2:	ff 91       	pop	r31
    10a4:	ef 91       	pop	r30
    10a6:	bf 91       	pop	r27
    10a8:	af 91       	pop	r26
    10aa:	9f 91       	pop	r25
    10ac:	8f 91       	pop	r24
    10ae:	7f 91       	pop	r23
    10b0:	6f 91       	pop	r22
    10b2:	5f 91       	pop	r21
    10b4:	4f 91       	pop	r20
    10b6:	3f 91       	pop	r19
    10b8:	2f 91       	pop	r18
    10ba:	1f 91       	pop	r17
    10bc:	0f 91       	pop	r16
    10be:	0f 90       	pop	r0
    10c0:	0f be       	out	0x3f, r0	; 63
    10c2:	0f 90       	pop	r0
    10c4:	1f 90       	pop	r1
    10c6:	18 95       	reti

000010c8 <__vector_10>:
    10c8:	1f 92       	push	r1
    10ca:	0f 92       	push	r0
    10cc:	0f b6       	in	r0, 0x3f	; 63
    10ce:	0f 92       	push	r0
    10d0:	11 24       	eor	r1, r1
    10d2:	0f 93       	push	r16
    10d4:	1f 93       	push	r17
    10d6:	2f 93       	push	r18
    10d8:	3f 93       	push	r19
    10da:	4f 93       	push	r20
    10dc:	5f 93       	push	r21
    10de:	6f 93       	push	r22
    10e0:	7f 93       	push	r23
    10e2:	8f 93       	push	r24
    10e4:	9f 93       	push	r25
    10e6:	af 93       	push	r26
    10e8:	bf 93       	push	r27
    10ea:	ef 93       	push	r30
    10ec:	ff 93       	push	r31
    10ee:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
    10f2:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <__data_end+0x1>
    10f6:	ac 01       	movw	r20, r24
    10f8:	09 2e       	mov	r0, r25
    10fa:	00 0c       	add	r0, r0
    10fc:	66 0b       	sbc	r22, r22
    10fe:	77 0b       	sbc	r23, r23
    1100:	9a 01       	movw	r18, r20
    1102:	11 27       	eor	r17, r17
    1104:	00 27       	eor	r16, r16
    1106:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    110a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    110e:	60 e0       	ldi	r22, 0x00	; 0
    1110:	70 e0       	ldi	r23, 0x00	; 0
    1112:	40 2b       	or	r20, r16
    1114:	51 2b       	or	r21, r17
    1116:	62 2b       	or	r22, r18
    1118:	73 2b       	or	r23, r19
    111a:	40 93 7a 01 	sts	0x017A, r20	; 0x80017a <timestamp>
    111e:	50 93 7b 01 	sts	0x017B, r21	; 0x80017b <timestamp+0x1>
    1122:	60 93 7c 01 	sts	0x017C, r22	; 0x80017c <timestamp+0x2>
    1126:	70 93 7d 01 	sts	0x017D, r23	; 0x80017d <timestamp+0x3>
    112a:	b0 9b       	sbis	0x16, 0	; 22
    112c:	1a c0       	rjmp	.+52     	; 0x1162 <__vector_10+0x9a>
    112e:	01 96       	adiw	r24, 0x01	; 1
    1130:	09 2e       	mov	r0, r25
    1132:	00 0c       	add	r0, r0
    1134:	aa 0b       	sbc	r26, r26
    1136:	bb 0b       	sbc	r27, r27
    1138:	bc 01       	movw	r22, r24
    113a:	55 27       	eor	r21, r21
    113c:	44 27       	eor	r20, r20
    113e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1142:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1146:	a0 e0       	ldi	r26, 0x00	; 0
    1148:	b0 e0       	ldi	r27, 0x00	; 0
    114a:	84 2b       	or	r24, r20
    114c:	95 2b       	or	r25, r21
    114e:	a6 2b       	or	r26, r22
    1150:	b7 2b       	or	r27, r23
    1152:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    1156:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    115a:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    115e:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    1162:	e0 91 24 02 	lds	r30, 0x0224	; 0x800224 <mtable+0xa>
    1166:	f0 91 25 02 	lds	r31, 0x0225	; 0x800225 <mtable+0xb>
    116a:	30 97       	sbiw	r30, 0x00	; 0
    116c:	39 f0       	breq	.+14     	; 0x117c <__vector_10+0xb4>
    116e:	65 e0       	ldi	r22, 0x05	; 5
    1170:	70 e0       	ldi	r23, 0x00	; 0
    1172:	80 91 8c 01 	lds	r24, 0x018C	; 0x80018c <otable+0xa>
    1176:	90 91 8d 01 	lds	r25, 0x018D	; 0x80018d <otable+0xb>
    117a:	09 95       	icall
    117c:	0e 94 05 06 	call	0xc0a	; 0xc0a <schedule>
    1180:	ff 91       	pop	r31
    1182:	ef 91       	pop	r30
    1184:	bf 91       	pop	r27
    1186:	af 91       	pop	r26
    1188:	9f 91       	pop	r25
    118a:	8f 91       	pop	r24
    118c:	7f 91       	pop	r23
    118e:	6f 91       	pop	r22
    1190:	5f 91       	pop	r21
    1192:	4f 91       	pop	r20
    1194:	3f 91       	pop	r19
    1196:	2f 91       	pop	r18
    1198:	1f 91       	pop	r17
    119a:	0f 91       	pop	r16
    119c:	0f 90       	pop	r0
    119e:	0f be       	out	0x3f, r0	; 63
    11a0:	0f 90       	pop	r0
    11a2:	1f 90       	pop	r1
    11a4:	18 95       	reti

000011a6 <__vector_11>:
    11a6:	1f 92       	push	r1
    11a8:	0f 92       	push	r0
    11aa:	0f b6       	in	r0, 0x3f	; 63
    11ac:	0f 92       	push	r0
    11ae:	11 24       	eor	r1, r1
    11b0:	0f 93       	push	r16
    11b2:	1f 93       	push	r17
    11b4:	2f 93       	push	r18
    11b6:	3f 93       	push	r19
    11b8:	4f 93       	push	r20
    11ba:	5f 93       	push	r21
    11bc:	6f 93       	push	r22
    11be:	7f 93       	push	r23
    11c0:	8f 93       	push	r24
    11c2:	9f 93       	push	r25
    11c4:	af 93       	push	r26
    11c6:	bf 93       	push	r27
    11c8:	ef 93       	push	r30
    11ca:	ff 93       	push	r31
    11cc:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
    11d0:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <__data_end+0x1>
    11d4:	ac 01       	movw	r20, r24
    11d6:	09 2e       	mov	r0, r25
    11d8:	00 0c       	add	r0, r0
    11da:	66 0b       	sbc	r22, r22
    11dc:	77 0b       	sbc	r23, r23
    11de:	9a 01       	movw	r18, r20
    11e0:	11 27       	eor	r17, r17
    11e2:	00 27       	eor	r16, r16
    11e4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    11e8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    11ec:	60 e0       	ldi	r22, 0x00	; 0
    11ee:	70 e0       	ldi	r23, 0x00	; 0
    11f0:	40 2b       	or	r20, r16
    11f2:	51 2b       	or	r21, r17
    11f4:	62 2b       	or	r22, r18
    11f6:	73 2b       	or	r23, r19
    11f8:	40 93 7a 01 	sts	0x017A, r20	; 0x80017a <timestamp>
    11fc:	50 93 7b 01 	sts	0x017B, r21	; 0x80017b <timestamp+0x1>
    1200:	60 93 7c 01 	sts	0x017C, r22	; 0x80017c <timestamp+0x2>
    1204:	70 93 7d 01 	sts	0x017D, r23	; 0x80017d <timestamp+0x3>
    1208:	b0 9b       	sbis	0x16, 0	; 22
    120a:	1a c0       	rjmp	.+52     	; 0x1240 <__vector_11+0x9a>
    120c:	01 96       	adiw	r24, 0x01	; 1
    120e:	09 2e       	mov	r0, r25
    1210:	00 0c       	add	r0, r0
    1212:	aa 0b       	sbc	r26, r26
    1214:	bb 0b       	sbc	r27, r27
    1216:	bc 01       	movw	r22, r24
    1218:	55 27       	eor	r21, r21
    121a:	44 27       	eor	r20, r20
    121c:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1220:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1224:	a0 e0       	ldi	r26, 0x00	; 0
    1226:	b0 e0       	ldi	r27, 0x00	; 0
    1228:	84 2b       	or	r24, r20
    122a:	95 2b       	or	r25, r21
    122c:	a6 2b       	or	r26, r22
    122e:	b7 2b       	or	r27, r23
    1230:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    1234:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    1238:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    123c:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    1240:	e0 91 26 02 	lds	r30, 0x0226	; 0x800226 <mtable+0xc>
    1244:	f0 91 27 02 	lds	r31, 0x0227	; 0x800227 <mtable+0xd>
    1248:	30 97       	sbiw	r30, 0x00	; 0
    124a:	39 f0       	breq	.+14     	; 0x125a <__vector_11+0xb4>
    124c:	66 e0       	ldi	r22, 0x06	; 6
    124e:	70 e0       	ldi	r23, 0x00	; 0
    1250:	80 91 8e 01 	lds	r24, 0x018E	; 0x80018e <otable+0xc>
    1254:	90 91 8f 01 	lds	r25, 0x018F	; 0x80018f <otable+0xd>
    1258:	09 95       	icall
    125a:	0e 94 05 06 	call	0xc0a	; 0xc0a <schedule>
    125e:	ff 91       	pop	r31
    1260:	ef 91       	pop	r30
    1262:	bf 91       	pop	r27
    1264:	af 91       	pop	r26
    1266:	9f 91       	pop	r25
    1268:	8f 91       	pop	r24
    126a:	7f 91       	pop	r23
    126c:	6f 91       	pop	r22
    126e:	5f 91       	pop	r21
    1270:	4f 91       	pop	r20
    1272:	3f 91       	pop	r19
    1274:	2f 91       	pop	r18
    1276:	1f 91       	pop	r17
    1278:	0f 91       	pop	r16
    127a:	0f 90       	pop	r0
    127c:	0f be       	out	0x3f, r0	; 63
    127e:	0f 90       	pop	r0
    1280:	1f 90       	pop	r1
    1282:	18 95       	reti

00001284 <__vector_12>:
    1284:	1f 92       	push	r1
    1286:	0f 92       	push	r0
    1288:	0f b6       	in	r0, 0x3f	; 63
    128a:	0f 92       	push	r0
    128c:	11 24       	eor	r1, r1
    128e:	0f 93       	push	r16
    1290:	1f 93       	push	r17
    1292:	2f 93       	push	r18
    1294:	3f 93       	push	r19
    1296:	4f 93       	push	r20
    1298:	5f 93       	push	r21
    129a:	6f 93       	push	r22
    129c:	7f 93       	push	r23
    129e:	8f 93       	push	r24
    12a0:	9f 93       	push	r25
    12a2:	af 93       	push	r26
    12a4:	bf 93       	push	r27
    12a6:	ef 93       	push	r30
    12a8:	ff 93       	push	r31
    12aa:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
    12ae:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <__data_end+0x1>
    12b2:	ac 01       	movw	r20, r24
    12b4:	09 2e       	mov	r0, r25
    12b6:	00 0c       	add	r0, r0
    12b8:	66 0b       	sbc	r22, r22
    12ba:	77 0b       	sbc	r23, r23
    12bc:	9a 01       	movw	r18, r20
    12be:	11 27       	eor	r17, r17
    12c0:	00 27       	eor	r16, r16
    12c2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    12c6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    12ca:	60 e0       	ldi	r22, 0x00	; 0
    12cc:	70 e0       	ldi	r23, 0x00	; 0
    12ce:	40 2b       	or	r20, r16
    12d0:	51 2b       	or	r21, r17
    12d2:	62 2b       	or	r22, r18
    12d4:	73 2b       	or	r23, r19
    12d6:	40 93 7a 01 	sts	0x017A, r20	; 0x80017a <timestamp>
    12da:	50 93 7b 01 	sts	0x017B, r21	; 0x80017b <timestamp+0x1>
    12de:	60 93 7c 01 	sts	0x017C, r22	; 0x80017c <timestamp+0x2>
    12e2:	70 93 7d 01 	sts	0x017D, r23	; 0x80017d <timestamp+0x3>
    12e6:	b0 9b       	sbis	0x16, 0	; 22
    12e8:	1a c0       	rjmp	.+52     	; 0x131e <__vector_12+0x9a>
    12ea:	01 96       	adiw	r24, 0x01	; 1
    12ec:	09 2e       	mov	r0, r25
    12ee:	00 0c       	add	r0, r0
    12f0:	aa 0b       	sbc	r26, r26
    12f2:	bb 0b       	sbc	r27, r27
    12f4:	bc 01       	movw	r22, r24
    12f6:	55 27       	eor	r21, r21
    12f8:	44 27       	eor	r20, r20
    12fa:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    12fe:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1302:	a0 e0       	ldi	r26, 0x00	; 0
    1304:	b0 e0       	ldi	r27, 0x00	; 0
    1306:	84 2b       	or	r24, r20
    1308:	95 2b       	or	r25, r21
    130a:	a6 2b       	or	r26, r22
    130c:	b7 2b       	or	r27, r23
    130e:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    1312:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    1316:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    131a:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    131e:	e0 91 28 02 	lds	r30, 0x0228	; 0x800228 <mtable+0xe>
    1322:	f0 91 29 02 	lds	r31, 0x0229	; 0x800229 <mtable+0xf>
    1326:	30 97       	sbiw	r30, 0x00	; 0
    1328:	39 f0       	breq	.+14     	; 0x1338 <__vector_12+0xb4>
    132a:	67 e0       	ldi	r22, 0x07	; 7
    132c:	70 e0       	ldi	r23, 0x00	; 0
    132e:	80 91 90 01 	lds	r24, 0x0190	; 0x800190 <otable+0xe>
    1332:	90 91 91 01 	lds	r25, 0x0191	; 0x800191 <otable+0xf>
    1336:	09 95       	icall
    1338:	0e 94 05 06 	call	0xc0a	; 0xc0a <schedule>
    133c:	ff 91       	pop	r31
    133e:	ef 91       	pop	r30
    1340:	bf 91       	pop	r27
    1342:	af 91       	pop	r26
    1344:	9f 91       	pop	r25
    1346:	8f 91       	pop	r24
    1348:	7f 91       	pop	r23
    134a:	6f 91       	pop	r22
    134c:	5f 91       	pop	r21
    134e:	4f 91       	pop	r20
    1350:	3f 91       	pop	r19
    1352:	2f 91       	pop	r18
    1354:	1f 91       	pop	r17
    1356:	0f 91       	pop	r16
    1358:	0f 90       	pop	r0
    135a:	0f be       	out	0x3f, r0	; 63
    135c:	0f 90       	pop	r0
    135e:	1f 90       	pop	r1
    1360:	18 95       	reti

00001362 <__vector_13>:
    1362:	1f 92       	push	r1
    1364:	0f 92       	push	r0
    1366:	0f b6       	in	r0, 0x3f	; 63
    1368:	0f 92       	push	r0
    136a:	11 24       	eor	r1, r1
    136c:	0f 93       	push	r16
    136e:	1f 93       	push	r17
    1370:	2f 93       	push	r18
    1372:	3f 93       	push	r19
    1374:	4f 93       	push	r20
    1376:	5f 93       	push	r21
    1378:	6f 93       	push	r22
    137a:	7f 93       	push	r23
    137c:	8f 93       	push	r24
    137e:	9f 93       	push	r25
    1380:	af 93       	push	r26
    1382:	bf 93       	push	r27
    1384:	ef 93       	push	r30
    1386:	ff 93       	push	r31
    1388:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
    138c:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <__data_end+0x1>
    1390:	ac 01       	movw	r20, r24
    1392:	09 2e       	mov	r0, r25
    1394:	00 0c       	add	r0, r0
    1396:	66 0b       	sbc	r22, r22
    1398:	77 0b       	sbc	r23, r23
    139a:	9a 01       	movw	r18, r20
    139c:	11 27       	eor	r17, r17
    139e:	00 27       	eor	r16, r16
    13a0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    13a4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    13a8:	60 e0       	ldi	r22, 0x00	; 0
    13aa:	70 e0       	ldi	r23, 0x00	; 0
    13ac:	40 2b       	or	r20, r16
    13ae:	51 2b       	or	r21, r17
    13b0:	62 2b       	or	r22, r18
    13b2:	73 2b       	or	r23, r19
    13b4:	40 93 7a 01 	sts	0x017A, r20	; 0x80017a <timestamp>
    13b8:	50 93 7b 01 	sts	0x017B, r21	; 0x80017b <timestamp+0x1>
    13bc:	60 93 7c 01 	sts	0x017C, r22	; 0x80017c <timestamp+0x2>
    13c0:	70 93 7d 01 	sts	0x017D, r23	; 0x80017d <timestamp+0x3>
    13c4:	b0 9b       	sbis	0x16, 0	; 22
    13c6:	1a c0       	rjmp	.+52     	; 0x13fc <__vector_13+0x9a>
    13c8:	01 96       	adiw	r24, 0x01	; 1
    13ca:	09 2e       	mov	r0, r25
    13cc:	00 0c       	add	r0, r0
    13ce:	aa 0b       	sbc	r26, r26
    13d0:	bb 0b       	sbc	r27, r27
    13d2:	bc 01       	movw	r22, r24
    13d4:	55 27       	eor	r21, r21
    13d6:	44 27       	eor	r20, r20
    13d8:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    13dc:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    13e0:	a0 e0       	ldi	r26, 0x00	; 0
    13e2:	b0 e0       	ldi	r27, 0x00	; 0
    13e4:	84 2b       	or	r24, r20
    13e6:	95 2b       	or	r25, r21
    13e8:	a6 2b       	or	r26, r22
    13ea:	b7 2b       	or	r27, r23
    13ec:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    13f0:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    13f4:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    13f8:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    13fc:	e0 91 2a 02 	lds	r30, 0x022A	; 0x80022a <mtable+0x10>
    1400:	f0 91 2b 02 	lds	r31, 0x022B	; 0x80022b <mtable+0x11>
    1404:	30 97       	sbiw	r30, 0x00	; 0
    1406:	39 f0       	breq	.+14     	; 0x1416 <__vector_13+0xb4>
    1408:	68 e0       	ldi	r22, 0x08	; 8
    140a:	70 e0       	ldi	r23, 0x00	; 0
    140c:	80 91 92 01 	lds	r24, 0x0192	; 0x800192 <otable+0x10>
    1410:	90 91 93 01 	lds	r25, 0x0193	; 0x800193 <otable+0x11>
    1414:	09 95       	icall
    1416:	0e 94 05 06 	call	0xc0a	; 0xc0a <schedule>
    141a:	ff 91       	pop	r31
    141c:	ef 91       	pop	r30
    141e:	bf 91       	pop	r27
    1420:	af 91       	pop	r26
    1422:	9f 91       	pop	r25
    1424:	8f 91       	pop	r24
    1426:	7f 91       	pop	r23
    1428:	6f 91       	pop	r22
    142a:	5f 91       	pop	r21
    142c:	4f 91       	pop	r20
    142e:	3f 91       	pop	r19
    1430:	2f 91       	pop	r18
    1432:	1f 91       	pop	r17
    1434:	0f 91       	pop	r16
    1436:	0f 90       	pop	r0
    1438:	0f be       	out	0x3f, r0	; 63
    143a:	0f 90       	pop	r0
    143c:	1f 90       	pop	r1
    143e:	18 95       	reti

00001440 <__vector_14>:
    1440:	1f 92       	push	r1
    1442:	0f 92       	push	r0
    1444:	0f b6       	in	r0, 0x3f	; 63
    1446:	0f 92       	push	r0
    1448:	11 24       	eor	r1, r1
    144a:	0f 93       	push	r16
    144c:	1f 93       	push	r17
    144e:	2f 93       	push	r18
    1450:	3f 93       	push	r19
    1452:	4f 93       	push	r20
    1454:	5f 93       	push	r21
    1456:	6f 93       	push	r22
    1458:	7f 93       	push	r23
    145a:	8f 93       	push	r24
    145c:	9f 93       	push	r25
    145e:	af 93       	push	r26
    1460:	bf 93       	push	r27
    1462:	ef 93       	push	r30
    1464:	ff 93       	push	r31
    1466:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
    146a:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <__data_end+0x1>
    146e:	ac 01       	movw	r20, r24
    1470:	09 2e       	mov	r0, r25
    1472:	00 0c       	add	r0, r0
    1474:	66 0b       	sbc	r22, r22
    1476:	77 0b       	sbc	r23, r23
    1478:	9a 01       	movw	r18, r20
    147a:	11 27       	eor	r17, r17
    147c:	00 27       	eor	r16, r16
    147e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1482:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1486:	60 e0       	ldi	r22, 0x00	; 0
    1488:	70 e0       	ldi	r23, 0x00	; 0
    148a:	40 2b       	or	r20, r16
    148c:	51 2b       	or	r21, r17
    148e:	62 2b       	or	r22, r18
    1490:	73 2b       	or	r23, r19
    1492:	40 93 7a 01 	sts	0x017A, r20	; 0x80017a <timestamp>
    1496:	50 93 7b 01 	sts	0x017B, r21	; 0x80017b <timestamp+0x1>
    149a:	60 93 7c 01 	sts	0x017C, r22	; 0x80017c <timestamp+0x2>
    149e:	70 93 7d 01 	sts	0x017D, r23	; 0x80017d <timestamp+0x3>
    14a2:	b0 9b       	sbis	0x16, 0	; 22
    14a4:	1a c0       	rjmp	.+52     	; 0x14da <__vector_14+0x9a>
    14a6:	01 96       	adiw	r24, 0x01	; 1
    14a8:	09 2e       	mov	r0, r25
    14aa:	00 0c       	add	r0, r0
    14ac:	aa 0b       	sbc	r26, r26
    14ae:	bb 0b       	sbc	r27, r27
    14b0:	bc 01       	movw	r22, r24
    14b2:	55 27       	eor	r21, r21
    14b4:	44 27       	eor	r20, r20
    14b6:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    14ba:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    14be:	a0 e0       	ldi	r26, 0x00	; 0
    14c0:	b0 e0       	ldi	r27, 0x00	; 0
    14c2:	84 2b       	or	r24, r20
    14c4:	95 2b       	or	r25, r21
    14c6:	a6 2b       	or	r26, r22
    14c8:	b7 2b       	or	r27, r23
    14ca:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    14ce:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    14d2:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    14d6:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    14da:	e0 91 2c 02 	lds	r30, 0x022C	; 0x80022c <mtable+0x12>
    14de:	f0 91 2d 02 	lds	r31, 0x022D	; 0x80022d <mtable+0x13>
    14e2:	30 97       	sbiw	r30, 0x00	; 0
    14e4:	39 f0       	breq	.+14     	; 0x14f4 <__vector_14+0xb4>
    14e6:	69 e0       	ldi	r22, 0x09	; 9
    14e8:	70 e0       	ldi	r23, 0x00	; 0
    14ea:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <otable+0x12>
    14ee:	90 91 95 01 	lds	r25, 0x0195	; 0x800195 <otable+0x13>
    14f2:	09 95       	icall
    14f4:	0e 94 05 06 	call	0xc0a	; 0xc0a <schedule>
    14f8:	ff 91       	pop	r31
    14fa:	ef 91       	pop	r30
    14fc:	bf 91       	pop	r27
    14fe:	af 91       	pop	r26
    1500:	9f 91       	pop	r25
    1502:	8f 91       	pop	r24
    1504:	7f 91       	pop	r23
    1506:	6f 91       	pop	r22
    1508:	5f 91       	pop	r21
    150a:	4f 91       	pop	r20
    150c:	3f 91       	pop	r19
    150e:	2f 91       	pop	r18
    1510:	1f 91       	pop	r17
    1512:	0f 91       	pop	r16
    1514:	0f 90       	pop	r0
    1516:	0f be       	out	0x3f, r0	; 63
    1518:	0f 90       	pop	r0
    151a:	1f 90       	pop	r1
    151c:	18 95       	reti

0000151e <__vector_15>:
    151e:	1f 92       	push	r1
    1520:	0f 92       	push	r0
    1522:	0f b6       	in	r0, 0x3f	; 63
    1524:	0f 92       	push	r0
    1526:	11 24       	eor	r1, r1
    1528:	0f 93       	push	r16
    152a:	1f 93       	push	r17
    152c:	2f 93       	push	r18
    152e:	3f 93       	push	r19
    1530:	4f 93       	push	r20
    1532:	5f 93       	push	r21
    1534:	6f 93       	push	r22
    1536:	7f 93       	push	r23
    1538:	8f 93       	push	r24
    153a:	9f 93       	push	r25
    153c:	af 93       	push	r26
    153e:	bf 93       	push	r27
    1540:	ef 93       	push	r30
    1542:	ff 93       	push	r31
    1544:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
    1548:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <__data_end+0x1>
    154c:	ac 01       	movw	r20, r24
    154e:	09 2e       	mov	r0, r25
    1550:	00 0c       	add	r0, r0
    1552:	66 0b       	sbc	r22, r22
    1554:	77 0b       	sbc	r23, r23
    1556:	9a 01       	movw	r18, r20
    1558:	11 27       	eor	r17, r17
    155a:	00 27       	eor	r16, r16
    155c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1560:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1564:	60 e0       	ldi	r22, 0x00	; 0
    1566:	70 e0       	ldi	r23, 0x00	; 0
    1568:	40 2b       	or	r20, r16
    156a:	51 2b       	or	r21, r17
    156c:	62 2b       	or	r22, r18
    156e:	73 2b       	or	r23, r19
    1570:	40 93 7a 01 	sts	0x017A, r20	; 0x80017a <timestamp>
    1574:	50 93 7b 01 	sts	0x017B, r21	; 0x80017b <timestamp+0x1>
    1578:	60 93 7c 01 	sts	0x017C, r22	; 0x80017c <timestamp+0x2>
    157c:	70 93 7d 01 	sts	0x017D, r23	; 0x80017d <timestamp+0x3>
    1580:	b0 9b       	sbis	0x16, 0	; 22
    1582:	1a c0       	rjmp	.+52     	; 0x15b8 <__vector_15+0x9a>
    1584:	01 96       	adiw	r24, 0x01	; 1
    1586:	09 2e       	mov	r0, r25
    1588:	00 0c       	add	r0, r0
    158a:	aa 0b       	sbc	r26, r26
    158c:	bb 0b       	sbc	r27, r27
    158e:	bc 01       	movw	r22, r24
    1590:	55 27       	eor	r21, r21
    1592:	44 27       	eor	r20, r20
    1594:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1598:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    159c:	a0 e0       	ldi	r26, 0x00	; 0
    159e:	b0 e0       	ldi	r27, 0x00	; 0
    15a0:	84 2b       	or	r24, r20
    15a2:	95 2b       	or	r25, r21
    15a4:	a6 2b       	or	r26, r22
    15a6:	b7 2b       	or	r27, r23
    15a8:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    15ac:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    15b0:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    15b4:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    15b8:	e0 91 2e 02 	lds	r30, 0x022E	; 0x80022e <mtable+0x14>
    15bc:	f0 91 2f 02 	lds	r31, 0x022F	; 0x80022f <mtable+0x15>
    15c0:	30 97       	sbiw	r30, 0x00	; 0
    15c2:	39 f0       	breq	.+14     	; 0x15d2 <__vector_15+0xb4>
    15c4:	6a e0       	ldi	r22, 0x0A	; 10
    15c6:	70 e0       	ldi	r23, 0x00	; 0
    15c8:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <otable+0x14>
    15cc:	90 91 97 01 	lds	r25, 0x0197	; 0x800197 <otable+0x15>
    15d0:	09 95       	icall
    15d2:	0e 94 05 06 	call	0xc0a	; 0xc0a <schedule>
    15d6:	ff 91       	pop	r31
    15d8:	ef 91       	pop	r30
    15da:	bf 91       	pop	r27
    15dc:	af 91       	pop	r26
    15de:	9f 91       	pop	r25
    15e0:	8f 91       	pop	r24
    15e2:	7f 91       	pop	r23
    15e4:	6f 91       	pop	r22
    15e6:	5f 91       	pop	r21
    15e8:	4f 91       	pop	r20
    15ea:	3f 91       	pop	r19
    15ec:	2f 91       	pop	r18
    15ee:	1f 91       	pop	r17
    15f0:	0f 91       	pop	r16
    15f2:	0f 90       	pop	r0
    15f4:	0f be       	out	0x3f, r0	; 63
    15f6:	0f 90       	pop	r0
    15f8:	1f 90       	pop	r1
    15fa:	18 95       	reti

000015fc <__vector_16>:
    15fc:	1f 92       	push	r1
    15fe:	0f 92       	push	r0
    1600:	0f b6       	in	r0, 0x3f	; 63
    1602:	0f 92       	push	r0
    1604:	11 24       	eor	r1, r1
    1606:	0f 93       	push	r16
    1608:	1f 93       	push	r17
    160a:	2f 93       	push	r18
    160c:	3f 93       	push	r19
    160e:	4f 93       	push	r20
    1610:	5f 93       	push	r21
    1612:	6f 93       	push	r22
    1614:	7f 93       	push	r23
    1616:	8f 93       	push	r24
    1618:	9f 93       	push	r25
    161a:	af 93       	push	r26
    161c:	bf 93       	push	r27
    161e:	ef 93       	push	r30
    1620:	ff 93       	push	r31
    1622:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
    1626:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <__data_end+0x1>
    162a:	ac 01       	movw	r20, r24
    162c:	09 2e       	mov	r0, r25
    162e:	00 0c       	add	r0, r0
    1630:	66 0b       	sbc	r22, r22
    1632:	77 0b       	sbc	r23, r23
    1634:	9a 01       	movw	r18, r20
    1636:	11 27       	eor	r17, r17
    1638:	00 27       	eor	r16, r16
    163a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    163e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1642:	60 e0       	ldi	r22, 0x00	; 0
    1644:	70 e0       	ldi	r23, 0x00	; 0
    1646:	40 2b       	or	r20, r16
    1648:	51 2b       	or	r21, r17
    164a:	62 2b       	or	r22, r18
    164c:	73 2b       	or	r23, r19
    164e:	40 93 7a 01 	sts	0x017A, r20	; 0x80017a <timestamp>
    1652:	50 93 7b 01 	sts	0x017B, r21	; 0x80017b <timestamp+0x1>
    1656:	60 93 7c 01 	sts	0x017C, r22	; 0x80017c <timestamp+0x2>
    165a:	70 93 7d 01 	sts	0x017D, r23	; 0x80017d <timestamp+0x3>
    165e:	b0 9b       	sbis	0x16, 0	; 22
    1660:	1a c0       	rjmp	.+52     	; 0x1696 <__vector_16+0x9a>
    1662:	01 96       	adiw	r24, 0x01	; 1
    1664:	09 2e       	mov	r0, r25
    1666:	00 0c       	add	r0, r0
    1668:	aa 0b       	sbc	r26, r26
    166a:	bb 0b       	sbc	r27, r27
    166c:	bc 01       	movw	r22, r24
    166e:	55 27       	eor	r21, r21
    1670:	44 27       	eor	r20, r20
    1672:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1676:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    167a:	a0 e0       	ldi	r26, 0x00	; 0
    167c:	b0 e0       	ldi	r27, 0x00	; 0
    167e:	84 2b       	or	r24, r20
    1680:	95 2b       	or	r25, r21
    1682:	a6 2b       	or	r26, r22
    1684:	b7 2b       	or	r27, r23
    1686:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    168a:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    168e:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    1692:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    1696:	e0 91 30 02 	lds	r30, 0x0230	; 0x800230 <mtable+0x16>
    169a:	f0 91 31 02 	lds	r31, 0x0231	; 0x800231 <mtable+0x17>
    169e:	30 97       	sbiw	r30, 0x00	; 0
    16a0:	39 f0       	breq	.+14     	; 0x16b0 <__vector_16+0xb4>
    16a2:	6b e0       	ldi	r22, 0x0B	; 11
    16a4:	70 e0       	ldi	r23, 0x00	; 0
    16a6:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <otable+0x16>
    16aa:	90 91 99 01 	lds	r25, 0x0199	; 0x800199 <otable+0x17>
    16ae:	09 95       	icall
    16b0:	0e 94 05 06 	call	0xc0a	; 0xc0a <schedule>
    16b4:	ff 91       	pop	r31
    16b6:	ef 91       	pop	r30
    16b8:	bf 91       	pop	r27
    16ba:	af 91       	pop	r26
    16bc:	9f 91       	pop	r25
    16be:	8f 91       	pop	r24
    16c0:	7f 91       	pop	r23
    16c2:	6f 91       	pop	r22
    16c4:	5f 91       	pop	r21
    16c6:	4f 91       	pop	r20
    16c8:	3f 91       	pop	r19
    16ca:	2f 91       	pop	r18
    16cc:	1f 91       	pop	r17
    16ce:	0f 91       	pop	r16
    16d0:	0f 90       	pop	r0
    16d2:	0f be       	out	0x3f, r0	; 63
    16d4:	0f 90       	pop	r0
    16d6:	1f 90       	pop	r1
    16d8:	18 95       	reti

000016da <__vector_17>:
    16da:	1f 92       	push	r1
    16dc:	0f 92       	push	r0
    16de:	0f b6       	in	r0, 0x3f	; 63
    16e0:	0f 92       	push	r0
    16e2:	11 24       	eor	r1, r1
    16e4:	0f 93       	push	r16
    16e6:	1f 93       	push	r17
    16e8:	2f 93       	push	r18
    16ea:	3f 93       	push	r19
    16ec:	4f 93       	push	r20
    16ee:	5f 93       	push	r21
    16f0:	6f 93       	push	r22
    16f2:	7f 93       	push	r23
    16f4:	8f 93       	push	r24
    16f6:	9f 93       	push	r25
    16f8:	af 93       	push	r26
    16fa:	bf 93       	push	r27
    16fc:	ef 93       	push	r30
    16fe:	ff 93       	push	r31
    1700:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
    1704:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <__data_end+0x1>
    1708:	ac 01       	movw	r20, r24
    170a:	09 2e       	mov	r0, r25
    170c:	00 0c       	add	r0, r0
    170e:	66 0b       	sbc	r22, r22
    1710:	77 0b       	sbc	r23, r23
    1712:	9a 01       	movw	r18, r20
    1714:	11 27       	eor	r17, r17
    1716:	00 27       	eor	r16, r16
    1718:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    171c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1720:	60 e0       	ldi	r22, 0x00	; 0
    1722:	70 e0       	ldi	r23, 0x00	; 0
    1724:	40 2b       	or	r20, r16
    1726:	51 2b       	or	r21, r17
    1728:	62 2b       	or	r22, r18
    172a:	73 2b       	or	r23, r19
    172c:	40 93 7a 01 	sts	0x017A, r20	; 0x80017a <timestamp>
    1730:	50 93 7b 01 	sts	0x017B, r21	; 0x80017b <timestamp+0x1>
    1734:	60 93 7c 01 	sts	0x017C, r22	; 0x80017c <timestamp+0x2>
    1738:	70 93 7d 01 	sts	0x017D, r23	; 0x80017d <timestamp+0x3>
    173c:	b0 9b       	sbis	0x16, 0	; 22
    173e:	1a c0       	rjmp	.+52     	; 0x1774 <__vector_17+0x9a>
    1740:	01 96       	adiw	r24, 0x01	; 1
    1742:	09 2e       	mov	r0, r25
    1744:	00 0c       	add	r0, r0
    1746:	aa 0b       	sbc	r26, r26
    1748:	bb 0b       	sbc	r27, r27
    174a:	bc 01       	movw	r22, r24
    174c:	55 27       	eor	r21, r21
    174e:	44 27       	eor	r20, r20
    1750:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1754:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1758:	a0 e0       	ldi	r26, 0x00	; 0
    175a:	b0 e0       	ldi	r27, 0x00	; 0
    175c:	84 2b       	or	r24, r20
    175e:	95 2b       	or	r25, r21
    1760:	a6 2b       	or	r26, r22
    1762:	b7 2b       	or	r27, r23
    1764:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    1768:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    176c:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    1770:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    1774:	e0 91 32 02 	lds	r30, 0x0232	; 0x800232 <mtable+0x18>
    1778:	f0 91 33 02 	lds	r31, 0x0233	; 0x800233 <mtable+0x19>
    177c:	30 97       	sbiw	r30, 0x00	; 0
    177e:	39 f0       	breq	.+14     	; 0x178e <__vector_17+0xb4>
    1780:	6c e0       	ldi	r22, 0x0C	; 12
    1782:	70 e0       	ldi	r23, 0x00	; 0
    1784:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <otable+0x18>
    1788:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <otable+0x19>
    178c:	09 95       	icall
    178e:	0e 94 05 06 	call	0xc0a	; 0xc0a <schedule>
    1792:	ff 91       	pop	r31
    1794:	ef 91       	pop	r30
    1796:	bf 91       	pop	r27
    1798:	af 91       	pop	r26
    179a:	9f 91       	pop	r25
    179c:	8f 91       	pop	r24
    179e:	7f 91       	pop	r23
    17a0:	6f 91       	pop	r22
    17a2:	5f 91       	pop	r21
    17a4:	4f 91       	pop	r20
    17a6:	3f 91       	pop	r19
    17a8:	2f 91       	pop	r18
    17aa:	1f 91       	pop	r17
    17ac:	0f 91       	pop	r16
    17ae:	0f 90       	pop	r0
    17b0:	0f be       	out	0x3f, r0	; 63
    17b2:	0f 90       	pop	r0
    17b4:	1f 90       	pop	r1
    17b6:	18 95       	reti

000017b8 <__vector_18>:
    17b8:	1f 92       	push	r1
    17ba:	0f 92       	push	r0
    17bc:	0f b6       	in	r0, 0x3f	; 63
    17be:	0f 92       	push	r0
    17c0:	11 24       	eor	r1, r1
    17c2:	0f 93       	push	r16
    17c4:	1f 93       	push	r17
    17c6:	2f 93       	push	r18
    17c8:	3f 93       	push	r19
    17ca:	4f 93       	push	r20
    17cc:	5f 93       	push	r21
    17ce:	6f 93       	push	r22
    17d0:	7f 93       	push	r23
    17d2:	8f 93       	push	r24
    17d4:	9f 93       	push	r25
    17d6:	af 93       	push	r26
    17d8:	bf 93       	push	r27
    17da:	ef 93       	push	r30
    17dc:	ff 93       	push	r31
    17de:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
    17e2:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <__data_end+0x1>
    17e6:	ac 01       	movw	r20, r24
    17e8:	09 2e       	mov	r0, r25
    17ea:	00 0c       	add	r0, r0
    17ec:	66 0b       	sbc	r22, r22
    17ee:	77 0b       	sbc	r23, r23
    17f0:	9a 01       	movw	r18, r20
    17f2:	11 27       	eor	r17, r17
    17f4:	00 27       	eor	r16, r16
    17f6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    17fa:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    17fe:	60 e0       	ldi	r22, 0x00	; 0
    1800:	70 e0       	ldi	r23, 0x00	; 0
    1802:	40 2b       	or	r20, r16
    1804:	51 2b       	or	r21, r17
    1806:	62 2b       	or	r22, r18
    1808:	73 2b       	or	r23, r19
    180a:	40 93 7a 01 	sts	0x017A, r20	; 0x80017a <timestamp>
    180e:	50 93 7b 01 	sts	0x017B, r21	; 0x80017b <timestamp+0x1>
    1812:	60 93 7c 01 	sts	0x017C, r22	; 0x80017c <timestamp+0x2>
    1816:	70 93 7d 01 	sts	0x017D, r23	; 0x80017d <timestamp+0x3>
    181a:	b0 9b       	sbis	0x16, 0	; 22
    181c:	1a c0       	rjmp	.+52     	; 0x1852 <__vector_18+0x9a>
    181e:	01 96       	adiw	r24, 0x01	; 1
    1820:	09 2e       	mov	r0, r25
    1822:	00 0c       	add	r0, r0
    1824:	aa 0b       	sbc	r26, r26
    1826:	bb 0b       	sbc	r27, r27
    1828:	bc 01       	movw	r22, r24
    182a:	55 27       	eor	r21, r21
    182c:	44 27       	eor	r20, r20
    182e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1832:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1836:	a0 e0       	ldi	r26, 0x00	; 0
    1838:	b0 e0       	ldi	r27, 0x00	; 0
    183a:	84 2b       	or	r24, r20
    183c:	95 2b       	or	r25, r21
    183e:	a6 2b       	or	r26, r22
    1840:	b7 2b       	or	r27, r23
    1842:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    1846:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    184a:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    184e:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    1852:	e0 91 34 02 	lds	r30, 0x0234	; 0x800234 <mtable+0x1a>
    1856:	f0 91 35 02 	lds	r31, 0x0235	; 0x800235 <mtable+0x1b>
    185a:	30 97       	sbiw	r30, 0x00	; 0
    185c:	39 f0       	breq	.+14     	; 0x186c <__vector_18+0xb4>
    185e:	6d e0       	ldi	r22, 0x0D	; 13
    1860:	70 e0       	ldi	r23, 0x00	; 0
    1862:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <otable+0x1a>
    1866:	90 91 9d 01 	lds	r25, 0x019D	; 0x80019d <otable+0x1b>
    186a:	09 95       	icall
    186c:	0e 94 05 06 	call	0xc0a	; 0xc0a <schedule>
    1870:	ff 91       	pop	r31
    1872:	ef 91       	pop	r30
    1874:	bf 91       	pop	r27
    1876:	af 91       	pop	r26
    1878:	9f 91       	pop	r25
    187a:	8f 91       	pop	r24
    187c:	7f 91       	pop	r23
    187e:	6f 91       	pop	r22
    1880:	5f 91       	pop	r21
    1882:	4f 91       	pop	r20
    1884:	3f 91       	pop	r19
    1886:	2f 91       	pop	r18
    1888:	1f 91       	pop	r17
    188a:	0f 91       	pop	r16
    188c:	0f 90       	pop	r0
    188e:	0f be       	out	0x3f, r0	; 63
    1890:	0f 90       	pop	r0
    1892:	1f 90       	pop	r1
    1894:	18 95       	reti

00001896 <__vector_19>:
    1896:	1f 92       	push	r1
    1898:	0f 92       	push	r0
    189a:	0f b6       	in	r0, 0x3f	; 63
    189c:	0f 92       	push	r0
    189e:	11 24       	eor	r1, r1
    18a0:	0f 93       	push	r16
    18a2:	1f 93       	push	r17
    18a4:	2f 93       	push	r18
    18a6:	3f 93       	push	r19
    18a8:	4f 93       	push	r20
    18aa:	5f 93       	push	r21
    18ac:	6f 93       	push	r22
    18ae:	7f 93       	push	r23
    18b0:	8f 93       	push	r24
    18b2:	9f 93       	push	r25
    18b4:	af 93       	push	r26
    18b6:	bf 93       	push	r27
    18b8:	ef 93       	push	r30
    18ba:	ff 93       	push	r31
    18bc:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
    18c0:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <__data_end+0x1>
    18c4:	ac 01       	movw	r20, r24
    18c6:	09 2e       	mov	r0, r25
    18c8:	00 0c       	add	r0, r0
    18ca:	66 0b       	sbc	r22, r22
    18cc:	77 0b       	sbc	r23, r23
    18ce:	9a 01       	movw	r18, r20
    18d0:	11 27       	eor	r17, r17
    18d2:	00 27       	eor	r16, r16
    18d4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    18d8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    18dc:	60 e0       	ldi	r22, 0x00	; 0
    18de:	70 e0       	ldi	r23, 0x00	; 0
    18e0:	40 2b       	or	r20, r16
    18e2:	51 2b       	or	r21, r17
    18e4:	62 2b       	or	r22, r18
    18e6:	73 2b       	or	r23, r19
    18e8:	40 93 7a 01 	sts	0x017A, r20	; 0x80017a <timestamp>
    18ec:	50 93 7b 01 	sts	0x017B, r21	; 0x80017b <timestamp+0x1>
    18f0:	60 93 7c 01 	sts	0x017C, r22	; 0x80017c <timestamp+0x2>
    18f4:	70 93 7d 01 	sts	0x017D, r23	; 0x80017d <timestamp+0x3>
    18f8:	b0 9b       	sbis	0x16, 0	; 22
    18fa:	1a c0       	rjmp	.+52     	; 0x1930 <__vector_19+0x9a>
    18fc:	01 96       	adiw	r24, 0x01	; 1
    18fe:	09 2e       	mov	r0, r25
    1900:	00 0c       	add	r0, r0
    1902:	aa 0b       	sbc	r26, r26
    1904:	bb 0b       	sbc	r27, r27
    1906:	bc 01       	movw	r22, r24
    1908:	55 27       	eor	r21, r21
    190a:	44 27       	eor	r20, r20
    190c:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1910:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1914:	a0 e0       	ldi	r26, 0x00	; 0
    1916:	b0 e0       	ldi	r27, 0x00	; 0
    1918:	84 2b       	or	r24, r20
    191a:	95 2b       	or	r25, r21
    191c:	a6 2b       	or	r26, r22
    191e:	b7 2b       	or	r27, r23
    1920:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    1924:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    1928:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    192c:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    1930:	e0 91 36 02 	lds	r30, 0x0236	; 0x800236 <mtable+0x1c>
    1934:	f0 91 37 02 	lds	r31, 0x0237	; 0x800237 <mtable+0x1d>
    1938:	30 97       	sbiw	r30, 0x00	; 0
    193a:	39 f0       	breq	.+14     	; 0x194a <__vector_19+0xb4>
    193c:	6e e0       	ldi	r22, 0x0E	; 14
    193e:	70 e0       	ldi	r23, 0x00	; 0
    1940:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <otable+0x1c>
    1944:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <otable+0x1d>
    1948:	09 95       	icall
    194a:	0e 94 05 06 	call	0xc0a	; 0xc0a <schedule>
    194e:	ff 91       	pop	r31
    1950:	ef 91       	pop	r30
    1952:	bf 91       	pop	r27
    1954:	af 91       	pop	r26
    1956:	9f 91       	pop	r25
    1958:	8f 91       	pop	r24
    195a:	7f 91       	pop	r23
    195c:	6f 91       	pop	r22
    195e:	5f 91       	pop	r21
    1960:	4f 91       	pop	r20
    1962:	3f 91       	pop	r19
    1964:	2f 91       	pop	r18
    1966:	1f 91       	pop	r17
    1968:	0f 91       	pop	r16
    196a:	0f 90       	pop	r0
    196c:	0f be       	out	0x3f, r0	; 63
    196e:	0f 90       	pop	r0
    1970:	1f 90       	pop	r1
    1972:	18 95       	reti

00001974 <__vector_20>:
    1974:	1f 92       	push	r1
    1976:	0f 92       	push	r0
    1978:	0f b6       	in	r0, 0x3f	; 63
    197a:	0f 92       	push	r0
    197c:	11 24       	eor	r1, r1
    197e:	0f 93       	push	r16
    1980:	1f 93       	push	r17
    1982:	2f 93       	push	r18
    1984:	3f 93       	push	r19
    1986:	4f 93       	push	r20
    1988:	5f 93       	push	r21
    198a:	6f 93       	push	r22
    198c:	7f 93       	push	r23
    198e:	8f 93       	push	r24
    1990:	9f 93       	push	r25
    1992:	af 93       	push	r26
    1994:	bf 93       	push	r27
    1996:	ef 93       	push	r30
    1998:	ff 93       	push	r31
    199a:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
    199e:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <__data_end+0x1>
    19a2:	ac 01       	movw	r20, r24
    19a4:	09 2e       	mov	r0, r25
    19a6:	00 0c       	add	r0, r0
    19a8:	66 0b       	sbc	r22, r22
    19aa:	77 0b       	sbc	r23, r23
    19ac:	9a 01       	movw	r18, r20
    19ae:	11 27       	eor	r17, r17
    19b0:	00 27       	eor	r16, r16
    19b2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    19b6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    19ba:	60 e0       	ldi	r22, 0x00	; 0
    19bc:	70 e0       	ldi	r23, 0x00	; 0
    19be:	40 2b       	or	r20, r16
    19c0:	51 2b       	or	r21, r17
    19c2:	62 2b       	or	r22, r18
    19c4:	73 2b       	or	r23, r19
    19c6:	40 93 7a 01 	sts	0x017A, r20	; 0x80017a <timestamp>
    19ca:	50 93 7b 01 	sts	0x017B, r21	; 0x80017b <timestamp+0x1>
    19ce:	60 93 7c 01 	sts	0x017C, r22	; 0x80017c <timestamp+0x2>
    19d2:	70 93 7d 01 	sts	0x017D, r23	; 0x80017d <timestamp+0x3>
    19d6:	b0 9b       	sbis	0x16, 0	; 22
    19d8:	1a c0       	rjmp	.+52     	; 0x1a0e <__vector_20+0x9a>
    19da:	01 96       	adiw	r24, 0x01	; 1
    19dc:	09 2e       	mov	r0, r25
    19de:	00 0c       	add	r0, r0
    19e0:	aa 0b       	sbc	r26, r26
    19e2:	bb 0b       	sbc	r27, r27
    19e4:	bc 01       	movw	r22, r24
    19e6:	55 27       	eor	r21, r21
    19e8:	44 27       	eor	r20, r20
    19ea:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    19ee:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    19f2:	a0 e0       	ldi	r26, 0x00	; 0
    19f4:	b0 e0       	ldi	r27, 0x00	; 0
    19f6:	84 2b       	or	r24, r20
    19f8:	95 2b       	or	r25, r21
    19fa:	a6 2b       	or	r26, r22
    19fc:	b7 2b       	or	r27, r23
    19fe:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    1a02:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    1a06:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    1a0a:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    1a0e:	e0 91 38 02 	lds	r30, 0x0238	; 0x800238 <mtable+0x1e>
    1a12:	f0 91 39 02 	lds	r31, 0x0239	; 0x800239 <mtable+0x1f>
    1a16:	30 97       	sbiw	r30, 0x00	; 0
    1a18:	39 f0       	breq	.+14     	; 0x1a28 <__vector_20+0xb4>
    1a1a:	6f e0       	ldi	r22, 0x0F	; 15
    1a1c:	70 e0       	ldi	r23, 0x00	; 0
    1a1e:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <otable+0x1e>
    1a22:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <otable+0x1f>
    1a26:	09 95       	icall
    1a28:	0e 94 05 06 	call	0xc0a	; 0xc0a <schedule>
    1a2c:	ff 91       	pop	r31
    1a2e:	ef 91       	pop	r30
    1a30:	bf 91       	pop	r27
    1a32:	af 91       	pop	r26
    1a34:	9f 91       	pop	r25
    1a36:	8f 91       	pop	r24
    1a38:	7f 91       	pop	r23
    1a3a:	6f 91       	pop	r22
    1a3c:	5f 91       	pop	r21
    1a3e:	4f 91       	pop	r20
    1a40:	3f 91       	pop	r19
    1a42:	2f 91       	pop	r18
    1a44:	1f 91       	pop	r17
    1a46:	0f 91       	pop	r16
    1a48:	0f 90       	pop	r0
    1a4a:	0f be       	out	0x3f, r0	; 63
    1a4c:	0f 90       	pop	r0
    1a4e:	1f 90       	pop	r1
    1a50:	18 95       	reti

00001a52 <__vector_21>:
    1a52:	1f 92       	push	r1
    1a54:	0f 92       	push	r0
    1a56:	0f b6       	in	r0, 0x3f	; 63
    1a58:	0f 92       	push	r0
    1a5a:	11 24       	eor	r1, r1
    1a5c:	0f 93       	push	r16
    1a5e:	1f 93       	push	r17
    1a60:	2f 93       	push	r18
    1a62:	3f 93       	push	r19
    1a64:	4f 93       	push	r20
    1a66:	5f 93       	push	r21
    1a68:	6f 93       	push	r22
    1a6a:	7f 93       	push	r23
    1a6c:	8f 93       	push	r24
    1a6e:	9f 93       	push	r25
    1a70:	af 93       	push	r26
    1a72:	bf 93       	push	r27
    1a74:	ef 93       	push	r30
    1a76:	ff 93       	push	r31
    1a78:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
    1a7c:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <__data_end+0x1>
    1a80:	ac 01       	movw	r20, r24
    1a82:	09 2e       	mov	r0, r25
    1a84:	00 0c       	add	r0, r0
    1a86:	66 0b       	sbc	r22, r22
    1a88:	77 0b       	sbc	r23, r23
    1a8a:	9a 01       	movw	r18, r20
    1a8c:	11 27       	eor	r17, r17
    1a8e:	00 27       	eor	r16, r16
    1a90:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1a94:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1a98:	60 e0       	ldi	r22, 0x00	; 0
    1a9a:	70 e0       	ldi	r23, 0x00	; 0
    1a9c:	40 2b       	or	r20, r16
    1a9e:	51 2b       	or	r21, r17
    1aa0:	62 2b       	or	r22, r18
    1aa2:	73 2b       	or	r23, r19
    1aa4:	40 93 7a 01 	sts	0x017A, r20	; 0x80017a <timestamp>
    1aa8:	50 93 7b 01 	sts	0x017B, r21	; 0x80017b <timestamp+0x1>
    1aac:	60 93 7c 01 	sts	0x017C, r22	; 0x80017c <timestamp+0x2>
    1ab0:	70 93 7d 01 	sts	0x017D, r23	; 0x80017d <timestamp+0x3>
    1ab4:	b0 9b       	sbis	0x16, 0	; 22
    1ab6:	1a c0       	rjmp	.+52     	; 0x1aec <__vector_21+0x9a>
    1ab8:	01 96       	adiw	r24, 0x01	; 1
    1aba:	09 2e       	mov	r0, r25
    1abc:	00 0c       	add	r0, r0
    1abe:	aa 0b       	sbc	r26, r26
    1ac0:	bb 0b       	sbc	r27, r27
    1ac2:	bc 01       	movw	r22, r24
    1ac4:	55 27       	eor	r21, r21
    1ac6:	44 27       	eor	r20, r20
    1ac8:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1acc:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1ad0:	a0 e0       	ldi	r26, 0x00	; 0
    1ad2:	b0 e0       	ldi	r27, 0x00	; 0
    1ad4:	84 2b       	or	r24, r20
    1ad6:	95 2b       	or	r25, r21
    1ad8:	a6 2b       	or	r26, r22
    1ada:	b7 2b       	or	r27, r23
    1adc:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    1ae0:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    1ae4:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    1ae8:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    1aec:	e0 91 3a 02 	lds	r30, 0x023A	; 0x80023a <mtable+0x20>
    1af0:	f0 91 3b 02 	lds	r31, 0x023B	; 0x80023b <mtable+0x21>
    1af4:	30 97       	sbiw	r30, 0x00	; 0
    1af6:	39 f0       	breq	.+14     	; 0x1b06 <__vector_21+0xb4>
    1af8:	60 e1       	ldi	r22, 0x10	; 16
    1afa:	70 e0       	ldi	r23, 0x00	; 0
    1afc:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <otable+0x20>
    1b00:	90 91 a3 01 	lds	r25, 0x01A3	; 0x8001a3 <otable+0x21>
    1b04:	09 95       	icall
    1b06:	0e 94 05 06 	call	0xc0a	; 0xc0a <schedule>
    1b0a:	ff 91       	pop	r31
    1b0c:	ef 91       	pop	r30
    1b0e:	bf 91       	pop	r27
    1b10:	af 91       	pop	r26
    1b12:	9f 91       	pop	r25
    1b14:	8f 91       	pop	r24
    1b16:	7f 91       	pop	r23
    1b18:	6f 91       	pop	r22
    1b1a:	5f 91       	pop	r21
    1b1c:	4f 91       	pop	r20
    1b1e:	3f 91       	pop	r19
    1b20:	2f 91       	pop	r18
    1b22:	1f 91       	pop	r17
    1b24:	0f 91       	pop	r16
    1b26:	0f 90       	pop	r0
    1b28:	0f be       	out	0x3f, r0	; 63
    1b2a:	0f 90       	pop	r0
    1b2c:	1f 90       	pop	r1
    1b2e:	18 95       	reti

00001b30 <__vector_22>:
    1b30:	1f 92       	push	r1
    1b32:	0f 92       	push	r0
    1b34:	0f b6       	in	r0, 0x3f	; 63
    1b36:	0f 92       	push	r0
    1b38:	11 24       	eor	r1, r1
    1b3a:	0f 93       	push	r16
    1b3c:	1f 93       	push	r17
    1b3e:	2f 93       	push	r18
    1b40:	3f 93       	push	r19
    1b42:	4f 93       	push	r20
    1b44:	5f 93       	push	r21
    1b46:	6f 93       	push	r22
    1b48:	7f 93       	push	r23
    1b4a:	8f 93       	push	r24
    1b4c:	9f 93       	push	r25
    1b4e:	af 93       	push	r26
    1b50:	bf 93       	push	r27
    1b52:	ef 93       	push	r30
    1b54:	ff 93       	push	r31
    1b56:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
    1b5a:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <__data_end+0x1>
    1b5e:	ac 01       	movw	r20, r24
    1b60:	09 2e       	mov	r0, r25
    1b62:	00 0c       	add	r0, r0
    1b64:	66 0b       	sbc	r22, r22
    1b66:	77 0b       	sbc	r23, r23
    1b68:	9a 01       	movw	r18, r20
    1b6a:	11 27       	eor	r17, r17
    1b6c:	00 27       	eor	r16, r16
    1b6e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1b72:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b76:	60 e0       	ldi	r22, 0x00	; 0
    1b78:	70 e0       	ldi	r23, 0x00	; 0
    1b7a:	40 2b       	or	r20, r16
    1b7c:	51 2b       	or	r21, r17
    1b7e:	62 2b       	or	r22, r18
    1b80:	73 2b       	or	r23, r19
    1b82:	40 93 7a 01 	sts	0x017A, r20	; 0x80017a <timestamp>
    1b86:	50 93 7b 01 	sts	0x017B, r21	; 0x80017b <timestamp+0x1>
    1b8a:	60 93 7c 01 	sts	0x017C, r22	; 0x80017c <timestamp+0x2>
    1b8e:	70 93 7d 01 	sts	0x017D, r23	; 0x80017d <timestamp+0x3>
    1b92:	b0 9b       	sbis	0x16, 0	; 22
    1b94:	1a c0       	rjmp	.+52     	; 0x1bca <__vector_22+0x9a>
    1b96:	01 96       	adiw	r24, 0x01	; 1
    1b98:	09 2e       	mov	r0, r25
    1b9a:	00 0c       	add	r0, r0
    1b9c:	aa 0b       	sbc	r26, r26
    1b9e:	bb 0b       	sbc	r27, r27
    1ba0:	bc 01       	movw	r22, r24
    1ba2:	55 27       	eor	r21, r21
    1ba4:	44 27       	eor	r20, r20
    1ba6:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1baa:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1bae:	a0 e0       	ldi	r26, 0x00	; 0
    1bb0:	b0 e0       	ldi	r27, 0x00	; 0
    1bb2:	84 2b       	or	r24, r20
    1bb4:	95 2b       	or	r25, r21
    1bb6:	a6 2b       	or	r26, r22
    1bb8:	b7 2b       	or	r27, r23
    1bba:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    1bbe:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    1bc2:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    1bc6:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    1bca:	e0 91 3c 02 	lds	r30, 0x023C	; 0x80023c <mtable+0x22>
    1bce:	f0 91 3d 02 	lds	r31, 0x023D	; 0x80023d <mtable+0x23>
    1bd2:	30 97       	sbiw	r30, 0x00	; 0
    1bd4:	39 f0       	breq	.+14     	; 0x1be4 <__vector_22+0xb4>
    1bd6:	61 e1       	ldi	r22, 0x11	; 17
    1bd8:	70 e0       	ldi	r23, 0x00	; 0
    1bda:	80 91 a4 01 	lds	r24, 0x01A4	; 0x8001a4 <otable+0x22>
    1bde:	90 91 a5 01 	lds	r25, 0x01A5	; 0x8001a5 <otable+0x23>
    1be2:	09 95       	icall
    1be4:	0e 94 05 06 	call	0xc0a	; 0xc0a <schedule>
    1be8:	ff 91       	pop	r31
    1bea:	ef 91       	pop	r30
    1bec:	bf 91       	pop	r27
    1bee:	af 91       	pop	r26
    1bf0:	9f 91       	pop	r25
    1bf2:	8f 91       	pop	r24
    1bf4:	7f 91       	pop	r23
    1bf6:	6f 91       	pop	r22
    1bf8:	5f 91       	pop	r21
    1bfa:	4f 91       	pop	r20
    1bfc:	3f 91       	pop	r19
    1bfe:	2f 91       	pop	r18
    1c00:	1f 91       	pop	r17
    1c02:	0f 91       	pop	r16
    1c04:	0f 90       	pop	r0
    1c06:	0f be       	out	0x3f, r0	; 63
    1c08:	0f 90       	pop	r0
    1c0a:	1f 90       	pop	r1
    1c0c:	18 95       	reti

00001c0e <idle>:
    1c0e:	0e 94 05 06 	call	0xc0a	; 0xc0a <schedule>
    1c12:	78 94       	sei
    1c14:	81 e0       	ldi	r24, 0x01	; 1
    1c16:	83 bf       	out	0x33, r24	; 51
    1c18:	88 95       	sleep
    1c1a:	fc cf       	rjmp	.-8      	; 0x1c14 <idle+0x6>

00001c1c <__vector_9>:
    1c1c:	1f 92       	push	r1
    1c1e:	0f 92       	push	r0
    1c20:	0f b6       	in	r0, 0x3f	; 63
    1c22:	0f 92       	push	r0
    1c24:	11 24       	eor	r1, r1
    1c26:	2f 93       	push	r18
    1c28:	3f 93       	push	r19
    1c2a:	4f 93       	push	r20
    1c2c:	5f 93       	push	r21
    1c2e:	6f 93       	push	r22
    1c30:	7f 93       	push	r23
    1c32:	8f 93       	push	r24
    1c34:	9f 93       	push	r25
    1c36:	ef 93       	push	r30
    1c38:	ff 93       	push	r31
    1c3a:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
    1c3e:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <__data_end+0x1>
    1c42:	01 96       	adiw	r24, 0x01	; 1
    1c44:	90 93 79 01 	sts	0x0179, r25	; 0x800179 <__data_end+0x1>
    1c48:	80 93 78 01 	sts	0x0178, r24	; 0x800178 <__data_end>
    1c4c:	e0 91 7e 01 	lds	r30, 0x017E	; 0x80017e <timerQ>
    1c50:	f0 91 7f 01 	lds	r31, 0x017F	; 0x80017f <timerQ+0x1>
    1c54:	30 97       	sbiw	r30, 0x00	; 0
    1c56:	01 f1       	breq	.+64     	; 0x1c98 <__vector_9+0x7c>
    1c58:	42 81       	ldd	r20, Z+2	; 0x02
    1c5a:	53 81       	ldd	r21, Z+3	; 0x03
    1c5c:	64 81       	ldd	r22, Z+4	; 0x04
    1c5e:	75 81       	ldd	r23, Z+5	; 0x05
    1c60:	86 17       	cp	r24, r22
    1c62:	97 07       	cpc	r25, r23
    1c64:	c9 f4       	brne	.+50     	; 0x1c98 <__vector_9+0x7c>
    1c66:	ca 01       	movw	r24, r20
    1c68:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1c6c:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1c70:	42 1b       	sub	r20, r18
    1c72:	53 0b       	sbc	r21, r19
    1c74:	41 30       	cpi	r20, 0x01	; 1
    1c76:	51 05       	cpc	r21, r1
    1c78:	29 f4       	brne	.+10     	; 0x1c84 <__vector_9+0x68>
    1c7a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1c7e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1c82:	01 96       	adiw	r24, 0x01	; 1
    1c84:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1c88:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1c8c:	ef e6       	ldi	r30, 0x6F	; 111
    1c8e:	f0 e0       	ldi	r31, 0x00	; 0
    1c90:	80 81       	ld	r24, Z
    1c92:	82 60       	ori	r24, 0x02	; 2
    1c94:	80 83       	st	Z, r24
    1c96:	05 c0       	rjmp	.+10     	; 0x1ca2 <__vector_9+0x86>
    1c98:	ef e6       	ldi	r30, 0x6F	; 111
    1c9a:	f0 e0       	ldi	r31, 0x00	; 0
    1c9c:	80 81       	ld	r24, Z
    1c9e:	8d 7f       	andi	r24, 0xFD	; 253
    1ca0:	80 83       	st	Z, r24
    1ca2:	ff 91       	pop	r31
    1ca4:	ef 91       	pop	r30
    1ca6:	9f 91       	pop	r25
    1ca8:	8f 91       	pop	r24
    1caa:	7f 91       	pop	r23
    1cac:	6f 91       	pop	r22
    1cae:	5f 91       	pop	r21
    1cb0:	4f 91       	pop	r20
    1cb2:	3f 91       	pop	r19
    1cb4:	2f 91       	pop	r18
    1cb6:	0f 90       	pop	r0
    1cb8:	0f be       	out	0x3f, r0	; 63
    1cba:	0f 90       	pop	r0
    1cbc:	1f 90       	pop	r1
    1cbe:	18 95       	reti

00001cc0 <__vector_7>:
    1cc0:	1f 92       	push	r1
    1cc2:	0f 92       	push	r0
    1cc4:	0f b6       	in	r0, 0x3f	; 63
    1cc6:	0f 92       	push	r0
    1cc8:	11 24       	eor	r1, r1
    1cca:	cf 92       	push	r12
    1ccc:	df 92       	push	r13
    1cce:	ef 92       	push	r14
    1cd0:	ff 92       	push	r15
    1cd2:	2f 93       	push	r18
    1cd4:	3f 93       	push	r19
    1cd6:	4f 93       	push	r20
    1cd8:	5f 93       	push	r21
    1cda:	6f 93       	push	r22
    1cdc:	7f 93       	push	r23
    1cde:	8f 93       	push	r24
    1ce0:	9f 93       	push	r25
    1ce2:	af 93       	push	r26
    1ce4:	bf 93       	push	r27
    1ce6:	ef 93       	push	r30
    1ce8:	ff 93       	push	r31
    1cea:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
    1cee:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <__data_end+0x1>
    1cf2:	6c 01       	movw	r12, r24
    1cf4:	09 2e       	mov	r0, r25
    1cf6:	00 0c       	add	r0, r0
    1cf8:	ee 08       	sbc	r14, r14
    1cfa:	ff 08       	sbc	r15, r15
    1cfc:	76 01       	movw	r14, r12
    1cfe:	dd 24       	eor	r13, r13
    1d00:	cc 24       	eor	r12, r12
    1d02:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1d06:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1d0a:	60 e0       	ldi	r22, 0x00	; 0
    1d0c:	70 e0       	ldi	r23, 0x00	; 0
    1d0e:	c4 2a       	or	r12, r20
    1d10:	d5 2a       	or	r13, r21
    1d12:	e6 2a       	or	r14, r22
    1d14:	f7 2a       	or	r15, r23
    1d16:	b0 9b       	sbis	0x16, 0	; 22
    1d18:	1e c0       	rjmp	.+60     	; 0x1d56 <__vector_7+0x96>
    1d1a:	6c 01       	movw	r12, r24
    1d1c:	2f ef       	ldi	r18, 0xFF	; 255
    1d1e:	c2 1a       	sub	r12, r18
    1d20:	d2 0a       	sbc	r13, r18
    1d22:	0d 2c       	mov	r0, r13
    1d24:	00 0c       	add	r0, r0
    1d26:	ee 08       	sbc	r14, r14
    1d28:	ff 08       	sbc	r15, r15
    1d2a:	d6 01       	movw	r26, r12
    1d2c:	99 27       	eor	r25, r25
    1d2e:	88 27       	eor	r24, r24
    1d30:	c0 90 84 00 	lds	r12, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1d34:	d0 90 85 00 	lds	r13, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1d38:	e1 2c       	mov	r14, r1
    1d3a:	f1 2c       	mov	r15, r1
    1d3c:	c8 2a       	or	r12, r24
    1d3e:	d9 2a       	or	r13, r25
    1d40:	ea 2a       	or	r14, r26
    1d42:	fb 2a       	or	r15, r27
    1d44:	08 c0       	rjmp	.+16     	; 0x1d56 <__vector_7+0x96>
    1d46:	8e e7       	ldi	r24, 0x7E	; 126
    1d48:	91 e0       	ldi	r25, 0x01	; 1
    1d4a:	0e 94 d0 05 	call	0xba0	; 0xba0 <dequeue>
    1d4e:	60 e8       	ldi	r22, 0x80	; 128
    1d50:	71 e0       	ldi	r23, 0x01	; 1
    1d52:	0e 94 6e 05 	call	0xadc	; 0xadc <enqueueByDeadline>
    1d56:	e0 91 7e 01 	lds	r30, 0x017E	; 0x80017e <timerQ>
    1d5a:	f0 91 7f 01 	lds	r31, 0x017F	; 0x80017f <timerQ+0x1>
    1d5e:	30 97       	sbiw	r30, 0x00	; 0
    1d60:	69 f0       	breq	.+26     	; 0x1d7c <__vector_7+0xbc>
    1d62:	82 81       	ldd	r24, Z+2	; 0x02
    1d64:	93 81       	ldd	r25, Z+3	; 0x03
    1d66:	a4 81       	ldd	r26, Z+4	; 0x04
    1d68:	b5 81       	ldd	r27, Z+5	; 0x05
    1d6a:	8c 19       	sub	r24, r12
    1d6c:	9d 09       	sbc	r25, r13
    1d6e:	ae 09       	sbc	r26, r14
    1d70:	bf 09       	sbc	r27, r15
    1d72:	18 16       	cp	r1, r24
    1d74:	19 06       	cpc	r1, r25
    1d76:	1a 06       	cpc	r1, r26
    1d78:	1b 06       	cpc	r1, r27
    1d7a:	2c f7       	brge	.-54     	; 0x1d46 <__vector_7+0x86>
    1d7c:	30 97       	sbiw	r30, 0x00	; 0
    1d7e:	21 f1       	breq	.+72     	; 0x1dc8 <__vector_7+0x108>
    1d80:	82 81       	ldd	r24, Z+2	; 0x02
    1d82:	93 81       	ldd	r25, Z+3	; 0x03
    1d84:	a4 81       	ldd	r26, Z+4	; 0x04
    1d86:	b5 81       	ldd	r27, Z+5	; 0x05
    1d88:	20 91 78 01 	lds	r18, 0x0178	; 0x800178 <__data_end>
    1d8c:	30 91 79 01 	lds	r19, 0x0179	; 0x800179 <__data_end+0x1>
    1d90:	2a 17       	cp	r18, r26
    1d92:	3b 07       	cpc	r19, r27
    1d94:	c9 f4       	brne	.+50     	; 0x1dc8 <__vector_7+0x108>
    1d96:	9c 01       	movw	r18, r24
    1d98:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1d9c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1da0:	84 1b       	sub	r24, r20
    1da2:	95 0b       	sbc	r25, r21
    1da4:	01 97       	sbiw	r24, 0x01	; 1
    1da6:	31 f4       	brne	.+12     	; 0x1db4 <__vector_7+0xf4>
    1da8:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1dac:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1db0:	2f 5f       	subi	r18, 0xFF	; 255
    1db2:	3f 4f       	sbci	r19, 0xFF	; 255
    1db4:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1db8:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1dbc:	ef e6       	ldi	r30, 0x6F	; 111
    1dbe:	f0 e0       	ldi	r31, 0x00	; 0
    1dc0:	80 81       	ld	r24, Z
    1dc2:	82 60       	ori	r24, 0x02	; 2
    1dc4:	80 83       	st	Z, r24
    1dc6:	05 c0       	rjmp	.+10     	; 0x1dd2 <__vector_7+0x112>
    1dc8:	ef e6       	ldi	r30, 0x6F	; 111
    1dca:	f0 e0       	ldi	r31, 0x00	; 0
    1dcc:	80 81       	ld	r24, Z
    1dce:	8d 7f       	andi	r24, 0xFD	; 253
    1dd0:	80 83       	st	Z, r24
    1dd2:	0e 94 05 06 	call	0xc0a	; 0xc0a <schedule>
    1dd6:	ff 91       	pop	r31
    1dd8:	ef 91       	pop	r30
    1dda:	bf 91       	pop	r27
    1ddc:	af 91       	pop	r26
    1dde:	9f 91       	pop	r25
    1de0:	8f 91       	pop	r24
    1de2:	7f 91       	pop	r23
    1de4:	6f 91       	pop	r22
    1de6:	5f 91       	pop	r21
    1de8:	4f 91       	pop	r20
    1dea:	3f 91       	pop	r19
    1dec:	2f 91       	pop	r18
    1dee:	ff 90       	pop	r15
    1df0:	ef 90       	pop	r14
    1df2:	df 90       	pop	r13
    1df4:	cf 90       	pop	r12
    1df6:	0f 90       	pop	r0
    1df8:	0f be       	out	0x3f, r0	; 63
    1dfa:	0f 90       	pop	r0
    1dfc:	1f 90       	pop	r1
    1dfe:	18 95       	reti

00001e00 <async>:
    1e00:	3f 92       	push	r3
    1e02:	4f 92       	push	r4
    1e04:	5f 92       	push	r5
    1e06:	6f 92       	push	r6
    1e08:	7f 92       	push	r7
    1e0a:	8f 92       	push	r8
    1e0c:	9f 92       	push	r9
    1e0e:	af 92       	push	r10
    1e10:	bf 92       	push	r11
    1e12:	cf 92       	push	r12
    1e14:	df 92       	push	r13
    1e16:	ef 92       	push	r14
    1e18:	ff 92       	push	r15
    1e1a:	0f 93       	push	r16
    1e1c:	1f 93       	push	r17
    1e1e:	cf 93       	push	r28
    1e20:	df 93       	push	r29
    1e22:	2b 01       	movw	r4, r22
    1e24:	3c 01       	movw	r6, r24
    1e26:	49 01       	movw	r8, r18
    1e28:	5a 01       	movw	r10, r20
    1e2a:	8f b7       	in	r24, 0x3f	; 63
    1e2c:	80 78       	andi	r24, 0x80	; 128
    1e2e:	38 2e       	mov	r3, r24
    1e30:	f8 94       	cli
    1e32:	86 e7       	ldi	r24, 0x76	; 118
    1e34:	91 e0       	ldi	r25, 0x01	; 1
    1e36:	0e 94 d0 05 	call	0xba0	; 0xba0 <dequeue>
    1e3a:	ec 01       	movw	r28, r24
    1e3c:	1b 87       	std	Y+11, r17	; 0x0b
    1e3e:	0a 87       	std	Y+10, r16	; 0x0a
    1e40:	fd 86       	std	Y+13, r15	; 0x0d
    1e42:	ec 86       	std	Y+12, r14	; 0x0c
    1e44:	df 86       	std	Y+15, r13	; 0x0f
    1e46:	ce 86       	std	Y+14, r12	; 0x0e
    1e48:	33 20       	and	r3, r3
    1e4a:	61 f0       	breq	.+24     	; 0x1e64 <async+0x64>
    1e4c:	e0 91 70 01 	lds	r30, 0x0170	; 0x800170 <current>
    1e50:	f0 91 71 01 	lds	r31, 0x0171	; 0x800171 <current+0x1>
    1e54:	02 80       	ldd	r0, Z+2	; 0x02
    1e56:	f3 81       	ldd	r31, Z+3	; 0x03
    1e58:	e0 2d       	mov	r30, r0
    1e5a:	82 81       	ldd	r24, Z+2	; 0x02
    1e5c:	93 81       	ldd	r25, Z+3	; 0x03
    1e5e:	a4 81       	ldd	r26, Z+4	; 0x04
    1e60:	b5 81       	ldd	r27, Z+5	; 0x05
    1e62:	08 c0       	rjmp	.+16     	; 0x1e74 <async+0x74>
    1e64:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <timestamp>
    1e68:	90 91 7b 01 	lds	r25, 0x017B	; 0x80017b <timestamp+0x1>
    1e6c:	a0 91 7c 01 	lds	r26, 0x017C	; 0x80017c <timestamp+0x2>
    1e70:	b0 91 7d 01 	lds	r27, 0x017D	; 0x80017d <timestamp+0x3>
    1e74:	48 0e       	add	r4, r24
    1e76:	59 1e       	adc	r5, r25
    1e78:	6a 1e       	adc	r6, r26
    1e7a:	7b 1e       	adc	r7, r27
    1e7c:	4a 82       	std	Y+2, r4	; 0x02
    1e7e:	5b 82       	std	Y+3, r5	; 0x03
    1e80:	6c 82       	std	Y+4, r6	; 0x04
    1e82:	7d 82       	std	Y+5, r7	; 0x05
    1e84:	18 14       	cp	r1, r8
    1e86:	19 04       	cpc	r1, r9
    1e88:	1a 04       	cpc	r1, r10
    1e8a:	1b 04       	cpc	r1, r11
    1e8c:	44 f0       	brlt	.+16     	; 0x1e9e <async+0x9e>
    1e8e:	0f 2e       	mov	r0, r31
    1e90:	88 24       	eor	r8, r8
    1e92:	8a 94       	dec	r8
    1e94:	98 2c       	mov	r9, r8
    1e96:	a8 2c       	mov	r10, r8
    1e98:	ff e7       	ldi	r31, 0x7F	; 127
    1e9a:	bf 2e       	mov	r11, r31
    1e9c:	f0 2d       	mov	r31, r0
    1e9e:	84 0c       	add	r8, r4
    1ea0:	95 1c       	adc	r9, r5
    1ea2:	a6 1c       	adc	r10, r6
    1ea4:	b7 1c       	adc	r11, r7
    1ea6:	8e 82       	std	Y+6, r8	; 0x06
    1ea8:	9f 82       	std	Y+7, r9	; 0x07
    1eaa:	a8 86       	std	Y+8, r10	; 0x08
    1eac:	b9 86       	std	Y+9, r11	; 0x09
    1eae:	20 91 78 01 	lds	r18, 0x0178	; 0x800178 <__data_end>
    1eb2:	30 91 79 01 	lds	r19, 0x0179	; 0x800179 <__data_end+0x1>
    1eb6:	c9 01       	movw	r24, r18
    1eb8:	03 2e       	mov	r0, r19
    1eba:	00 0c       	add	r0, r0
    1ebc:	aa 0b       	sbc	r26, r26
    1ebe:	bb 0b       	sbc	r27, r27
    1ec0:	dc 01       	movw	r26, r24
    1ec2:	99 27       	eor	r25, r25
    1ec4:	88 27       	eor	r24, r24
    1ec6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1eca:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1ece:	60 e0       	ldi	r22, 0x00	; 0
    1ed0:	70 e0       	ldi	r23, 0x00	; 0
    1ed2:	84 2b       	or	r24, r20
    1ed4:	95 2b       	or	r25, r21
    1ed6:	a6 2b       	or	r26, r22
    1ed8:	b7 2b       	or	r27, r23
    1eda:	b0 9b       	sbis	0x16, 0	; 22
    1edc:	13 c0       	rjmp	.+38     	; 0x1f04 <async+0x104>
    1ede:	c9 01       	movw	r24, r18
    1ee0:	01 96       	adiw	r24, 0x01	; 1
    1ee2:	09 2e       	mov	r0, r25
    1ee4:	00 0c       	add	r0, r0
    1ee6:	aa 0b       	sbc	r26, r26
    1ee8:	bb 0b       	sbc	r27, r27
    1eea:	dc 01       	movw	r26, r24
    1eec:	99 27       	eor	r25, r25
    1eee:	88 27       	eor	r24, r24
    1ef0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1ef4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1ef8:	60 e0       	ldi	r22, 0x00	; 0
    1efa:	70 e0       	ldi	r23, 0x00	; 0
    1efc:	84 2b       	or	r24, r20
    1efe:	95 2b       	or	r25, r21
    1f00:	a6 2b       	or	r26, r22
    1f02:	b7 2b       	or	r27, r23
    1f04:	48 1a       	sub	r4, r24
    1f06:	59 0a       	sbc	r5, r25
    1f08:	6a 0a       	sbc	r6, r26
    1f0a:	7b 0a       	sbc	r7, r27
    1f0c:	14 14       	cp	r1, r4
    1f0e:	15 04       	cpc	r1, r5
    1f10:	16 04       	cpc	r1, r6
    1f12:	17 04       	cpc	r1, r7
    1f14:	ac f5       	brge	.+106    	; 0x1f80 <async+0x180>
    1f16:	6e e7       	ldi	r22, 0x7E	; 126
    1f18:	71 e0       	ldi	r23, 0x01	; 1
    1f1a:	ce 01       	movw	r24, r28
    1f1c:	0e 94 9f 05 	call	0xb3e	; 0xb3e <enqueueByBaseline>
    1f20:	e0 91 7e 01 	lds	r30, 0x017E	; 0x80017e <timerQ>
    1f24:	f0 91 7f 01 	lds	r31, 0x017F	; 0x80017f <timerQ+0x1>
    1f28:	30 97       	sbiw	r30, 0x00	; 0
    1f2a:	21 f1       	breq	.+72     	; 0x1f74 <async+0x174>
    1f2c:	82 81       	ldd	r24, Z+2	; 0x02
    1f2e:	93 81       	ldd	r25, Z+3	; 0x03
    1f30:	a4 81       	ldd	r26, Z+4	; 0x04
    1f32:	b5 81       	ldd	r27, Z+5	; 0x05
    1f34:	20 91 78 01 	lds	r18, 0x0178	; 0x800178 <__data_end>
    1f38:	30 91 79 01 	lds	r19, 0x0179	; 0x800179 <__data_end+0x1>
    1f3c:	2a 17       	cp	r18, r26
    1f3e:	3b 07       	cpc	r19, r27
    1f40:	c9 f4       	brne	.+50     	; 0x1f74 <async+0x174>
    1f42:	9c 01       	movw	r18, r24
    1f44:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1f48:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1f4c:	84 1b       	sub	r24, r20
    1f4e:	95 0b       	sbc	r25, r21
    1f50:	01 97       	sbiw	r24, 0x01	; 1
    1f52:	31 f4       	brne	.+12     	; 0x1f60 <async+0x160>
    1f54:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1f58:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1f5c:	2f 5f       	subi	r18, 0xFF	; 255
    1f5e:	3f 4f       	sbci	r19, 0xFF	; 255
    1f60:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1f64:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1f68:	ef e6       	ldi	r30, 0x6F	; 111
    1f6a:	f0 e0       	ldi	r31, 0x00	; 0
    1f6c:	80 81       	ld	r24, Z
    1f6e:	82 60       	ori	r24, 0x02	; 2
    1f70:	80 83       	st	Z, r24
    1f72:	39 c0       	rjmp	.+114    	; 0x1fe6 <async+0x1e6>
    1f74:	ef e6       	ldi	r30, 0x6F	; 111
    1f76:	f0 e0       	ldi	r31, 0x00	; 0
    1f78:	80 81       	ld	r24, Z
    1f7a:	8d 7f       	andi	r24, 0xFD	; 253
    1f7c:	80 83       	st	Z, r24
    1f7e:	33 c0       	rjmp	.+102    	; 0x1fe6 <async+0x1e6>
    1f80:	60 e8       	ldi	r22, 0x80	; 128
    1f82:	71 e0       	ldi	r23, 0x01	; 1
    1f84:	ce 01       	movw	r24, r28
    1f86:	0e 94 6e 05 	call	0xadc	; 0xadc <enqueueByDeadline>
    1f8a:	33 20       	and	r3, r3
    1f8c:	61 f1       	breq	.+88     	; 0x1fe6 <async+0x1e6>
    1f8e:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <threadPool>
    1f92:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <threadPool+0x1>
    1f96:	89 2b       	or	r24, r25
    1f98:	31 f1       	breq	.+76     	; 0x1fe6 <async+0x1e6>
    1f9a:	e0 91 80 01 	lds	r30, 0x0180	; 0x800180 <msgQ>
    1f9e:	f0 91 81 01 	lds	r31, 0x0181	; 0x800181 <msgQ+0x1>
    1fa2:	86 81       	ldd	r24, Z+6	; 0x06
    1fa4:	97 81       	ldd	r25, Z+7	; 0x07
    1fa6:	a0 85       	ldd	r26, Z+8	; 0x08
    1fa8:	b1 85       	ldd	r27, Z+9	; 0x09
    1faa:	e0 91 72 01 	lds	r30, 0x0172	; 0x800172 <activeStack>
    1fae:	f0 91 73 01 	lds	r31, 0x0173	; 0x800173 <activeStack+0x1>
    1fb2:	02 80       	ldd	r0, Z+2	; 0x02
    1fb4:	f3 81       	ldd	r31, Z+3	; 0x03
    1fb6:	e0 2d       	mov	r30, r0
    1fb8:	46 81       	ldd	r20, Z+6	; 0x06
    1fba:	57 81       	ldd	r21, Z+7	; 0x07
    1fbc:	60 85       	ldd	r22, Z+8	; 0x08
    1fbe:	71 85       	ldd	r23, Z+9	; 0x09
    1fc0:	84 1b       	sub	r24, r20
    1fc2:	95 0b       	sbc	r25, r21
    1fc4:	a6 0b       	sbc	r26, r22
    1fc6:	b7 0b       	sbc	r27, r23
    1fc8:	72 f4       	brpl	.+28     	; 0x1fe6 <async+0x1e6>
    1fca:	84 e7       	ldi	r24, 0x74	; 116
    1fcc:	91 e0       	ldi	r25, 0x01	; 1
    1fce:	0e 94 fb 05 	call	0xbf6	; 0xbf6 <pop>
    1fd2:	62 e7       	ldi	r22, 0x72	; 114
    1fd4:	71 e0       	ldi	r23, 0x01	; 1
    1fd6:	0e 94 f1 05 	call	0xbe2	; 0xbe2 <push>
    1fda:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <activeStack>
    1fde:	90 91 73 01 	lds	r25, 0x0173	; 0x800173 <activeStack+0x1>
    1fe2:	0e 94 4e 05 	call	0xa9c	; 0xa9c <dispatch>
    1fe6:	33 20       	and	r3, r3
    1fe8:	09 f0       	breq	.+2      	; 0x1fec <async+0x1ec>
    1fea:	78 94       	sei
    1fec:	ce 01       	movw	r24, r28
    1fee:	df 91       	pop	r29
    1ff0:	cf 91       	pop	r28
    1ff2:	1f 91       	pop	r17
    1ff4:	0f 91       	pop	r16
    1ff6:	ff 90       	pop	r15
    1ff8:	ef 90       	pop	r14
    1ffa:	df 90       	pop	r13
    1ffc:	cf 90       	pop	r12
    1ffe:	bf 90       	pop	r11
    2000:	af 90       	pop	r10
    2002:	9f 90       	pop	r9
    2004:	8f 90       	pop	r8
    2006:	7f 90       	pop	r7
    2008:	6f 90       	pop	r6
    200a:	5f 90       	pop	r5
    200c:	4f 90       	pop	r4
    200e:	3f 90       	pop	r3
    2010:	08 95       	ret

00002012 <sync>:
    2012:	cf 92       	push	r12
    2014:	df 92       	push	r13
    2016:	ef 92       	push	r14
    2018:	ff 92       	push	r15
    201a:	0f 93       	push	r16
    201c:	1f 93       	push	r17
    201e:	cf 93       	push	r28
    2020:	df 93       	push	r29
    2022:	ec 01       	movw	r28, r24
    2024:	7b 01       	movw	r14, r22
    2026:	6a 01       	movw	r12, r20
    2028:	1f b7       	in	r17, 0x3f	; 63
    202a:	10 78       	andi	r17, 0x80	; 128
    202c:	f8 94       	cli
    202e:	a8 81       	ld	r26, Y
    2030:	b9 81       	ldd	r27, Y+1	; 0x01
    2032:	10 97       	sbiw	r26, 0x00	; 0
    2034:	19 f4       	brne	.+6      	; 0x203c <sync+0x2a>
    2036:	35 c0       	rjmp	.+106    	; 0x20a2 <sync+0x90>
    2038:	a0 81       	ld	r26, Z
    203a:	b1 81       	ldd	r27, Z+1	; 0x01
    203c:	14 96       	adiw	r26, 0x04	; 4
    203e:	ed 91       	ld	r30, X+
    2040:	fc 91       	ld	r31, X
    2042:	15 97       	sbiw	r26, 0x05	; 5
    2044:	30 97       	sbiw	r30, 0x00	; 0
    2046:	c1 f7       	brne	.-16     	; 0x2038 <sync+0x26>
    2048:	20 91 70 01 	lds	r18, 0x0170	; 0x800170 <current>
    204c:	30 91 71 01 	lds	r19, 0x0171	; 0x800171 <current+0x1>
    2050:	a2 17       	cp	r26, r18
    2052:	b3 07       	cpc	r27, r19
    2054:	11 f0       	breq	.+4      	; 0x205a <sync+0x48>
    2056:	11 11       	cpse	r17, r1
    2058:	07 c0       	rjmp	.+14     	; 0x2068 <sync+0x56>
    205a:	11 23       	and	r17, r17
    205c:	09 f4       	brne	.+2      	; 0x2060 <sync+0x4e>
    205e:	4a c0       	rjmp	.+148    	; 0x20f4 <sync+0xe2>
    2060:	78 94       	sei
    2062:	8f ef       	ldi	r24, 0xFF	; 255
    2064:	9f ef       	ldi	r25, 0xFF	; 255
    2066:	4e c0       	rjmp	.+156    	; 0x2104 <sync+0xf2>
    2068:	8a 81       	ldd	r24, Y+2	; 0x02
    206a:	9b 81       	ldd	r25, Y+3	; 0x03
    206c:	00 97       	sbiw	r24, 0x00	; 0
    206e:	19 f0       	breq	.+6      	; 0x2076 <sync+0x64>
    2070:	fc 01       	movw	r30, r24
    2072:	15 82       	std	Z+5, r1	; 0x05
    2074:	14 82       	std	Z+4, r1	; 0x04
    2076:	3b 83       	std	Y+3, r19	; 0x03
    2078:	2a 83       	std	Y+2, r18	; 0x02
    207a:	f9 01       	movw	r30, r18
    207c:	d5 83       	std	Z+5, r29	; 0x05
    207e:	c4 83       	std	Z+4, r28	; 0x04
    2080:	cd 01       	movw	r24, r26
    2082:	0e 94 4e 05 	call	0xa9c	; 0xa9c <dispatch>
    2086:	e0 91 70 01 	lds	r30, 0x0170	; 0x800170 <current>
    208a:	f0 91 71 01 	lds	r31, 0x0171	; 0x800171 <current+0x1>
    208e:	82 81       	ldd	r24, Z+2	; 0x02
    2090:	93 81       	ldd	r25, Z+3	; 0x03
    2092:	89 2b       	or	r24, r25
    2094:	31 f4       	brne	.+12     	; 0x20a2 <sync+0x90>
    2096:	11 23       	and	r17, r17
    2098:	81 f1       	breq	.+96     	; 0x20fa <sync+0xe8>
    209a:	78 94       	sei
    209c:	80 e0       	ldi	r24, 0x00	; 0
    209e:	90 e0       	ldi	r25, 0x00	; 0
    20a0:	31 c0       	rjmp	.+98     	; 0x2104 <sync+0xf2>
    20a2:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <current>
    20a6:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <current+0x1>
    20aa:	99 83       	std	Y+1, r25	; 0x01
    20ac:	88 83       	st	Y, r24
    20ae:	11 23       	and	r17, r17
    20b0:	29 f0       	breq	.+10     	; 0x20bc <sync+0xaa>
    20b2:	8a 81       	ldd	r24, Y+2	; 0x02
    20b4:	9b 81       	ldd	r25, Y+3	; 0x03
    20b6:	01 97       	sbiw	r24, 0x01	; 1
    20b8:	09 f0       	breq	.+2      	; 0x20bc <sync+0xaa>
    20ba:	78 94       	sei
    20bc:	b6 01       	movw	r22, r12
    20be:	ce 01       	movw	r24, r28
    20c0:	f7 01       	movw	r30, r14
    20c2:	09 95       	icall
    20c4:	f8 2e       	mov	r15, r24
    20c6:	09 2f       	mov	r16, r25
    20c8:	8f b7       	in	r24, 0x3f	; 63
    20ca:	f8 94       	cli
    20cc:	19 82       	std	Y+1, r1	; 0x01
    20ce:	18 82       	st	Y, r1
    20d0:	8a 81       	ldd	r24, Y+2	; 0x02
    20d2:	9b 81       	ldd	r25, Y+3	; 0x03
    20d4:	82 30       	cpi	r24, 0x02	; 2
    20d6:	91 05       	cpc	r25, r1
    20d8:	38 f0       	brcs	.+14     	; 0x20e8 <sync+0xd6>
    20da:	1b 82       	std	Y+3, r1	; 0x03
    20dc:	1a 82       	std	Y+2, r1	; 0x02
    20de:	fc 01       	movw	r30, r24
    20e0:	15 82       	std	Z+5, r1	; 0x05
    20e2:	14 82       	std	Z+4, r1	; 0x04
    20e4:	0e 94 4e 05 	call	0xa9c	; 0xa9c <dispatch>
    20e8:	11 23       	and	r17, r17
    20ea:	51 f0       	breq	.+20     	; 0x2100 <sync+0xee>
    20ec:	78 94       	sei
    20ee:	8f 2d       	mov	r24, r15
    20f0:	90 2f       	mov	r25, r16
    20f2:	08 c0       	rjmp	.+16     	; 0x2104 <sync+0xf2>
    20f4:	8f ef       	ldi	r24, 0xFF	; 255
    20f6:	9f ef       	ldi	r25, 0xFF	; 255
    20f8:	05 c0       	rjmp	.+10     	; 0x2104 <sync+0xf2>
    20fa:	80 e0       	ldi	r24, 0x00	; 0
    20fc:	90 e0       	ldi	r25, 0x00	; 0
    20fe:	02 c0       	rjmp	.+4      	; 0x2104 <sync+0xf2>
    2100:	8f 2d       	mov	r24, r15
    2102:	90 2f       	mov	r25, r16
    2104:	df 91       	pop	r29
    2106:	cf 91       	pop	r28
    2108:	1f 91       	pop	r17
    210a:	0f 91       	pop	r16
    210c:	ff 90       	pop	r15
    210e:	ef 90       	pop	r14
    2110:	df 90       	pop	r13
    2112:	cf 90       	pop	r12
    2114:	08 95       	ret

00002116 <run>:
    2116:	00 91 70 01 	lds	r16, 0x0170	; 0x800170 <current>
    211a:	10 91 71 01 	lds	r17, 0x0171	; 0x800171 <current+0x1>
    211e:	80 e8       	ldi	r24, 0x80	; 128
    2120:	91 e0       	ldi	r25, 0x01	; 1
    2122:	0e 94 d0 05 	call	0xba0	; 0xba0 <dequeue>
    2126:	ec 01       	movw	r28, r24
    2128:	f8 01       	movw	r30, r16
    212a:	93 83       	std	Z+3, r25	; 0x03
    212c:	82 83       	std	Z+2, r24	; 0x02
    212e:	78 94       	sei
    2130:	6c 85       	ldd	r22, Y+12	; 0x0c
    2132:	7d 85       	ldd	r23, Y+13	; 0x0d
    2134:	4e 85       	ldd	r20, Y+14	; 0x0e
    2136:	5f 85       	ldd	r21, Y+15	; 0x0f
    2138:	8a 85       	ldd	r24, Y+10	; 0x0a
    213a:	9b 85       	ldd	r25, Y+11	; 0x0b
    213c:	0e 94 09 10 	call	0x2012	; 0x2012 <sync>
    2140:	8f b7       	in	r24, 0x3f	; 63
    2142:	f8 94       	cli
    2144:	66 e7       	ldi	r22, 0x76	; 118
    2146:	71 e0       	ldi	r23, 0x01	; 1
    2148:	ce 01       	movw	r24, r28
    214a:	0e 94 e7 05 	call	0xbce	; 0xbce <insert>
    214e:	e0 91 72 01 	lds	r30, 0x0172	; 0x800172 <activeStack>
    2152:	f0 91 73 01 	lds	r31, 0x0173	; 0x800173 <activeStack+0x1>
    2156:	01 90       	ld	r0, Z+
    2158:	f0 81       	ld	r31, Z
    215a:	e0 2d       	mov	r30, r0
    215c:	c2 81       	ldd	r28, Z+2	; 0x02
    215e:	d3 81       	ldd	r29, Z+3	; 0x03
    2160:	e0 91 80 01 	lds	r30, 0x0180	; 0x800180 <msgQ>
    2164:	f0 91 81 01 	lds	r31, 0x0181	; 0x800181 <msgQ+0x1>
    2168:	30 97       	sbiw	r30, 0x00	; 0
    216a:	a1 f0       	breq	.+40     	; 0x2194 <run+0x7e>
    216c:	20 97       	sbiw	r28, 0x00	; 0
    216e:	99 f2       	breq	.-90     	; 0x2116 <run>
    2170:	86 81       	ldd	r24, Z+6	; 0x06
    2172:	97 81       	ldd	r25, Z+7	; 0x07
    2174:	a0 85       	ldd	r26, Z+8	; 0x08
    2176:	b1 85       	ldd	r27, Z+9	; 0x09
    2178:	4e 81       	ldd	r20, Y+6	; 0x06
    217a:	5f 81       	ldd	r21, Y+7	; 0x07
    217c:	68 85       	ldd	r22, Y+8	; 0x08
    217e:	79 85       	ldd	r23, Y+9	; 0x09
    2180:	84 1b       	sub	r24, r20
    2182:	95 0b       	sbc	r25, r21
    2184:	a6 0b       	sbc	r26, r22
    2186:	b7 0b       	sbc	r27, r23
    2188:	18 16       	cp	r1, r24
    218a:	19 06       	cpc	r1, r25
    218c:	1a 06       	cpc	r1, r26
    218e:	1b 06       	cpc	r1, r27
    2190:	0c f0       	brlt	.+2      	; 0x2194 <run+0x7e>
    2192:	c1 cf       	rjmp	.-126    	; 0x2116 <run>
    2194:	82 e7       	ldi	r24, 0x72	; 114
    2196:	91 e0       	ldi	r25, 0x01	; 1
    2198:	0e 94 fb 05 	call	0xbf6	; 0xbf6 <pop>
    219c:	64 e7       	ldi	r22, 0x74	; 116
    219e:	71 e0       	ldi	r23, 0x01	; 1
    21a0:	0e 94 f1 05 	call	0xbe2	; 0xbe2 <push>
    21a4:	a0 91 72 01 	lds	r26, 0x0172	; 0x800172 <activeStack>
    21a8:	b0 91 73 01 	lds	r27, 0x0173	; 0x800173 <activeStack+0x1>
    21ac:	02 c0       	rjmp	.+4      	; 0x21b2 <run+0x9c>
    21ae:	a0 81       	ld	r26, Z
    21b0:	b1 81       	ldd	r27, Z+1	; 0x01
    21b2:	14 96       	adiw	r26, 0x04	; 4
    21b4:	ed 91       	ld	r30, X+
    21b6:	fc 91       	ld	r31, X
    21b8:	15 97       	sbiw	r26, 0x05	; 5
    21ba:	30 97       	sbiw	r30, 0x00	; 0
    21bc:	c1 f7       	brne	.-16     	; 0x21ae <run+0x98>
    21be:	cd 01       	movw	r24, r26
    21c0:	0e 94 4e 05 	call	0xa9c	; 0xa9c <dispatch>
    21c4:	a8 cf       	rjmp	.-176    	; 0x2116 <run>

000021c6 <install>:
    thread0.msg = NULL;
    
    TIMER_INIT();
}

void install(Object *obj, Method m, enum Vector i) {
    21c6:	fc 01       	movw	r30, r24
    if (i >= 0 && i < N_VECTORS) {
    21c8:	42 31       	cpi	r20, 0x12	; 18
    21ca:	b8 f4       	brcc	.+46     	; 0x21fa <install+0x34>
        char status;
        DISABLE(status);
    21cc:	9f b7       	in	r25, 0x3f	; 63
    21ce:	90 78       	andi	r25, 0x80	; 128
    21d0:	f8 94       	cli
        otable[i] = obj;
    21d2:	50 e0       	ldi	r21, 0x00	; 0
    21d4:	44 0f       	add	r20, r20
    21d6:	55 1f       	adc	r21, r21
    21d8:	da 01       	movw	r26, r20
    21da:	ae 57       	subi	r26, 0x7E	; 126
    21dc:	be 4f       	sbci	r27, 0xFE	; 254
    21de:	ed 93       	st	X+, r30
    21e0:	fc 93       	st	X, r31
        mtable[i] = m;
    21e2:	da 01       	movw	r26, r20
    21e4:	a6 5e       	subi	r26, 0xE6	; 230
    21e6:	bd 4f       	sbci	r27, 0xFD	; 253
    21e8:	6d 93       	st	X+, r22
    21ea:	7c 93       	st	X, r23
        obj->wantedBy = INSTALLED_TAG;  // Mark object as subject to synchronization by interrupt disabling
    21ec:	21 e0       	ldi	r18, 0x01	; 1
    21ee:	30 e0       	ldi	r19, 0x00	; 0
    21f0:	33 83       	std	Z+3, r19	; 0x03
    21f2:	22 83       	std	Z+2, r18	; 0x02
        ENABLE(status);
    21f4:	99 23       	and	r25, r25
    21f6:	09 f0       	breq	.+2      	; 0x21fa <install+0x34>
    21f8:	78 94       	sei
    21fa:	08 95       	ret

000021fc <tinytimber>:
    }
}

int tinytimber(Object *obj, Method m, int arg) {
    21fc:	8c 01       	movw	r16, r24
    21fe:	7b 01       	movw	r14, r22
    2200:	6a 01       	movw	r12, r20
    char status;
    DISABLE(status);
    2202:	8f b7       	in	r24, 0x3f	; 63
    2204:	f8 94       	cli
    initialize();
    2206:	0e 94 af 04 	call	0x95e	; 0x95e <initialize>
    ENABLE(1);
    220a:	78 94       	sei
    if (m != NULL)
    220c:	e1 14       	cp	r14, r1
    220e:	f1 04       	cpc	r15, r1
    2210:	41 f0       	breq	.+16     	; 0x2222 <tinytimber+0x26>
        //m(obj, arg);
		ASYNC(obj,m,arg);
    2212:	20 e0       	ldi	r18, 0x00	; 0
    2214:	30 e0       	ldi	r19, 0x00	; 0
    2216:	a9 01       	movw	r20, r18
    2218:	60 e0       	ldi	r22, 0x00	; 0
    221a:	70 e0       	ldi	r23, 0x00	; 0
    221c:	cb 01       	movw	r24, r22
    221e:	0e 94 00 0f 	call	0x1e00	; 0x1e00 <async>
    DISABLE(status);
    2222:	8f b7       	in	r24, 0x3f	; 63
    2224:	f8 94       	cli
    idle();
    2226:	0e 94 07 0e 	call	0x1c0e	; 0x1c0e <idle>

0000222a <__subsf3>:
    222a:	50 58       	subi	r21, 0x80	; 128

0000222c <__addsf3>:
    222c:	bb 27       	eor	r27, r27
    222e:	aa 27       	eor	r26, r26
    2230:	0e 94 2d 11 	call	0x225a	; 0x225a <__addsf3x>
    2234:	0c 94 4c 12 	jmp	0x2498	; 0x2498 <__fp_round>
    2238:	0e 94 3e 12 	call	0x247c	; 0x247c <__fp_pscA>
    223c:	38 f0       	brcs	.+14     	; 0x224c <__addsf3+0x20>
    223e:	0e 94 45 12 	call	0x248a	; 0x248a <__fp_pscB>
    2242:	20 f0       	brcs	.+8      	; 0x224c <__addsf3+0x20>
    2244:	39 f4       	brne	.+14     	; 0x2254 <__addsf3+0x28>
    2246:	9f 3f       	cpi	r25, 0xFF	; 255
    2248:	19 f4       	brne	.+6      	; 0x2250 <__addsf3+0x24>
    224a:	26 f4       	brtc	.+8      	; 0x2254 <__addsf3+0x28>
    224c:	0c 94 3b 12 	jmp	0x2476	; 0x2476 <__fp_nan>
    2250:	0e f4       	brtc	.+2      	; 0x2254 <__addsf3+0x28>
    2252:	e0 95       	com	r30
    2254:	e7 fb       	bst	r30, 7
    2256:	0c 94 0c 12 	jmp	0x2418	; 0x2418 <__fp_inf>

0000225a <__addsf3x>:
    225a:	e9 2f       	mov	r30, r25
    225c:	0e 94 5d 12 	call	0x24ba	; 0x24ba <__fp_split3>
    2260:	58 f3       	brcs	.-42     	; 0x2238 <__addsf3+0xc>
    2262:	ba 17       	cp	r27, r26
    2264:	62 07       	cpc	r22, r18
    2266:	73 07       	cpc	r23, r19
    2268:	84 07       	cpc	r24, r20
    226a:	95 07       	cpc	r25, r21
    226c:	20 f0       	brcs	.+8      	; 0x2276 <__addsf3x+0x1c>
    226e:	79 f4       	brne	.+30     	; 0x228e <__addsf3x+0x34>
    2270:	a6 f5       	brtc	.+104    	; 0x22da <__addsf3x+0x80>
    2272:	0c 94 97 12 	jmp	0x252e	; 0x252e <__fp_zero>
    2276:	0e f4       	brtc	.+2      	; 0x227a <__addsf3x+0x20>
    2278:	e0 95       	com	r30
    227a:	0b 2e       	mov	r0, r27
    227c:	ba 2f       	mov	r27, r26
    227e:	a0 2d       	mov	r26, r0
    2280:	0b 01       	movw	r0, r22
    2282:	b9 01       	movw	r22, r18
    2284:	90 01       	movw	r18, r0
    2286:	0c 01       	movw	r0, r24
    2288:	ca 01       	movw	r24, r20
    228a:	a0 01       	movw	r20, r0
    228c:	11 24       	eor	r1, r1
    228e:	ff 27       	eor	r31, r31
    2290:	59 1b       	sub	r21, r25
    2292:	99 f0       	breq	.+38     	; 0x22ba <__addsf3x+0x60>
    2294:	59 3f       	cpi	r21, 0xF9	; 249
    2296:	50 f4       	brcc	.+20     	; 0x22ac <__addsf3x+0x52>
    2298:	50 3e       	cpi	r21, 0xE0	; 224
    229a:	68 f1       	brcs	.+90     	; 0x22f6 <__addsf3x+0x9c>
    229c:	1a 16       	cp	r1, r26
    229e:	f0 40       	sbci	r31, 0x00	; 0
    22a0:	a2 2f       	mov	r26, r18
    22a2:	23 2f       	mov	r18, r19
    22a4:	34 2f       	mov	r19, r20
    22a6:	44 27       	eor	r20, r20
    22a8:	58 5f       	subi	r21, 0xF8	; 248
    22aa:	f3 cf       	rjmp	.-26     	; 0x2292 <__addsf3x+0x38>
    22ac:	46 95       	lsr	r20
    22ae:	37 95       	ror	r19
    22b0:	27 95       	ror	r18
    22b2:	a7 95       	ror	r26
    22b4:	f0 40       	sbci	r31, 0x00	; 0
    22b6:	53 95       	inc	r21
    22b8:	c9 f7       	brne	.-14     	; 0x22ac <__addsf3x+0x52>
    22ba:	7e f4       	brtc	.+30     	; 0x22da <__addsf3x+0x80>
    22bc:	1f 16       	cp	r1, r31
    22be:	ba 0b       	sbc	r27, r26
    22c0:	62 0b       	sbc	r22, r18
    22c2:	73 0b       	sbc	r23, r19
    22c4:	84 0b       	sbc	r24, r20
    22c6:	ba f0       	brmi	.+46     	; 0x22f6 <__addsf3x+0x9c>
    22c8:	91 50       	subi	r25, 0x01	; 1
    22ca:	a1 f0       	breq	.+40     	; 0x22f4 <__addsf3x+0x9a>
    22cc:	ff 0f       	add	r31, r31
    22ce:	bb 1f       	adc	r27, r27
    22d0:	66 1f       	adc	r22, r22
    22d2:	77 1f       	adc	r23, r23
    22d4:	88 1f       	adc	r24, r24
    22d6:	c2 f7       	brpl	.-16     	; 0x22c8 <__addsf3x+0x6e>
    22d8:	0e c0       	rjmp	.+28     	; 0x22f6 <__addsf3x+0x9c>
    22da:	ba 0f       	add	r27, r26
    22dc:	62 1f       	adc	r22, r18
    22de:	73 1f       	adc	r23, r19
    22e0:	84 1f       	adc	r24, r20
    22e2:	48 f4       	brcc	.+18     	; 0x22f6 <__addsf3x+0x9c>
    22e4:	87 95       	ror	r24
    22e6:	77 95       	ror	r23
    22e8:	67 95       	ror	r22
    22ea:	b7 95       	ror	r27
    22ec:	f7 95       	ror	r31
    22ee:	9e 3f       	cpi	r25, 0xFE	; 254
    22f0:	08 f0       	brcs	.+2      	; 0x22f4 <__addsf3x+0x9a>
    22f2:	b0 cf       	rjmp	.-160    	; 0x2254 <__addsf3+0x28>
    22f4:	93 95       	inc	r25
    22f6:	88 0f       	add	r24, r24
    22f8:	08 f0       	brcs	.+2      	; 0x22fc <__addsf3x+0xa2>
    22fa:	99 27       	eor	r25, r25
    22fc:	ee 0f       	add	r30, r30
    22fe:	97 95       	ror	r25
    2300:	87 95       	ror	r24
    2302:	08 95       	ret

00002304 <__fixsfsi>:
    2304:	0e 94 89 11 	call	0x2312	; 0x2312 <__fixunssfsi>
    2308:	68 94       	set
    230a:	b1 11       	cpse	r27, r1
    230c:	0c 94 98 12 	jmp	0x2530	; 0x2530 <__fp_szero>
    2310:	08 95       	ret

00002312 <__fixunssfsi>:
    2312:	0e 94 65 12 	call	0x24ca	; 0x24ca <__fp_splitA>
    2316:	88 f0       	brcs	.+34     	; 0x233a <__fixunssfsi+0x28>
    2318:	9f 57       	subi	r25, 0x7F	; 127
    231a:	98 f0       	brcs	.+38     	; 0x2342 <__fixunssfsi+0x30>
    231c:	b9 2f       	mov	r27, r25
    231e:	99 27       	eor	r25, r25
    2320:	b7 51       	subi	r27, 0x17	; 23
    2322:	b0 f0       	brcs	.+44     	; 0x2350 <__fixunssfsi+0x3e>
    2324:	e1 f0       	breq	.+56     	; 0x235e <__fixunssfsi+0x4c>
    2326:	66 0f       	add	r22, r22
    2328:	77 1f       	adc	r23, r23
    232a:	88 1f       	adc	r24, r24
    232c:	99 1f       	adc	r25, r25
    232e:	1a f0       	brmi	.+6      	; 0x2336 <__fixunssfsi+0x24>
    2330:	ba 95       	dec	r27
    2332:	c9 f7       	brne	.-14     	; 0x2326 <__fixunssfsi+0x14>
    2334:	14 c0       	rjmp	.+40     	; 0x235e <__fixunssfsi+0x4c>
    2336:	b1 30       	cpi	r27, 0x01	; 1
    2338:	91 f0       	breq	.+36     	; 0x235e <__fixunssfsi+0x4c>
    233a:	0e 94 97 12 	call	0x252e	; 0x252e <__fp_zero>
    233e:	b1 e0       	ldi	r27, 0x01	; 1
    2340:	08 95       	ret
    2342:	0c 94 97 12 	jmp	0x252e	; 0x252e <__fp_zero>
    2346:	67 2f       	mov	r22, r23
    2348:	78 2f       	mov	r23, r24
    234a:	88 27       	eor	r24, r24
    234c:	b8 5f       	subi	r27, 0xF8	; 248
    234e:	39 f0       	breq	.+14     	; 0x235e <__fixunssfsi+0x4c>
    2350:	b9 3f       	cpi	r27, 0xF9	; 249
    2352:	cc f3       	brlt	.-14     	; 0x2346 <__fixunssfsi+0x34>
    2354:	86 95       	lsr	r24
    2356:	77 95       	ror	r23
    2358:	67 95       	ror	r22
    235a:	b3 95       	inc	r27
    235c:	d9 f7       	brne	.-10     	; 0x2354 <__fixunssfsi+0x42>
    235e:	3e f4       	brtc	.+14     	; 0x236e <__fixunssfsi+0x5c>
    2360:	90 95       	com	r25
    2362:	80 95       	com	r24
    2364:	70 95       	com	r23
    2366:	61 95       	neg	r22
    2368:	7f 4f       	sbci	r23, 0xFF	; 255
    236a:	8f 4f       	sbci	r24, 0xFF	; 255
    236c:	9f 4f       	sbci	r25, 0xFF	; 255
    236e:	08 95       	ret

00002370 <__floatunsisf>:
    2370:	e8 94       	clt
    2372:	09 c0       	rjmp	.+18     	; 0x2386 <__floatsisf+0x12>

00002374 <__floatsisf>:
    2374:	97 fb       	bst	r25, 7
    2376:	3e f4       	brtc	.+14     	; 0x2386 <__floatsisf+0x12>
    2378:	90 95       	com	r25
    237a:	80 95       	com	r24
    237c:	70 95       	com	r23
    237e:	61 95       	neg	r22
    2380:	7f 4f       	sbci	r23, 0xFF	; 255
    2382:	8f 4f       	sbci	r24, 0xFF	; 255
    2384:	9f 4f       	sbci	r25, 0xFF	; 255
    2386:	99 23       	and	r25, r25
    2388:	a9 f0       	breq	.+42     	; 0x23b4 <__floatsisf+0x40>
    238a:	f9 2f       	mov	r31, r25
    238c:	96 e9       	ldi	r25, 0x96	; 150
    238e:	bb 27       	eor	r27, r27
    2390:	93 95       	inc	r25
    2392:	f6 95       	lsr	r31
    2394:	87 95       	ror	r24
    2396:	77 95       	ror	r23
    2398:	67 95       	ror	r22
    239a:	b7 95       	ror	r27
    239c:	f1 11       	cpse	r31, r1
    239e:	f8 cf       	rjmp	.-16     	; 0x2390 <__floatsisf+0x1c>
    23a0:	fa f4       	brpl	.+62     	; 0x23e0 <__floatsisf+0x6c>
    23a2:	bb 0f       	add	r27, r27
    23a4:	11 f4       	brne	.+4      	; 0x23aa <__floatsisf+0x36>
    23a6:	60 ff       	sbrs	r22, 0
    23a8:	1b c0       	rjmp	.+54     	; 0x23e0 <__floatsisf+0x6c>
    23aa:	6f 5f       	subi	r22, 0xFF	; 255
    23ac:	7f 4f       	sbci	r23, 0xFF	; 255
    23ae:	8f 4f       	sbci	r24, 0xFF	; 255
    23b0:	9f 4f       	sbci	r25, 0xFF	; 255
    23b2:	16 c0       	rjmp	.+44     	; 0x23e0 <__floatsisf+0x6c>
    23b4:	88 23       	and	r24, r24
    23b6:	11 f0       	breq	.+4      	; 0x23bc <__floatsisf+0x48>
    23b8:	96 e9       	ldi	r25, 0x96	; 150
    23ba:	11 c0       	rjmp	.+34     	; 0x23de <__floatsisf+0x6a>
    23bc:	77 23       	and	r23, r23
    23be:	21 f0       	breq	.+8      	; 0x23c8 <__floatsisf+0x54>
    23c0:	9e e8       	ldi	r25, 0x8E	; 142
    23c2:	87 2f       	mov	r24, r23
    23c4:	76 2f       	mov	r23, r22
    23c6:	05 c0       	rjmp	.+10     	; 0x23d2 <__floatsisf+0x5e>
    23c8:	66 23       	and	r22, r22
    23ca:	71 f0       	breq	.+28     	; 0x23e8 <__floatsisf+0x74>
    23cc:	96 e8       	ldi	r25, 0x86	; 134
    23ce:	86 2f       	mov	r24, r22
    23d0:	70 e0       	ldi	r23, 0x00	; 0
    23d2:	60 e0       	ldi	r22, 0x00	; 0
    23d4:	2a f0       	brmi	.+10     	; 0x23e0 <__floatsisf+0x6c>
    23d6:	9a 95       	dec	r25
    23d8:	66 0f       	add	r22, r22
    23da:	77 1f       	adc	r23, r23
    23dc:	88 1f       	adc	r24, r24
    23de:	da f7       	brpl	.-10     	; 0x23d6 <__floatsisf+0x62>
    23e0:	88 0f       	add	r24, r24
    23e2:	96 95       	lsr	r25
    23e4:	87 95       	ror	r24
    23e6:	97 f9       	bld	r25, 7
    23e8:	08 95       	ret

000023ea <floor>:
    23ea:	0e 94 7f 12 	call	0x24fe	; 0x24fe <__fp_trunc>
    23ee:	90 f0       	brcs	.+36     	; 0x2414 <floor+0x2a>
    23f0:	9f 37       	cpi	r25, 0x7F	; 127
    23f2:	48 f4       	brcc	.+18     	; 0x2406 <floor+0x1c>
    23f4:	91 11       	cpse	r25, r1
    23f6:	16 f0       	brts	.+4      	; 0x23fc <floor+0x12>
    23f8:	0c 94 98 12 	jmp	0x2530	; 0x2530 <__fp_szero>
    23fc:	60 e0       	ldi	r22, 0x00	; 0
    23fe:	70 e0       	ldi	r23, 0x00	; 0
    2400:	80 e8       	ldi	r24, 0x80	; 128
    2402:	9f eb       	ldi	r25, 0xBF	; 191
    2404:	08 95       	ret
    2406:	26 f4       	brtc	.+8      	; 0x2410 <floor+0x26>
    2408:	1b 16       	cp	r1, r27
    240a:	61 1d       	adc	r22, r1
    240c:	71 1d       	adc	r23, r1
    240e:	81 1d       	adc	r24, r1
    2410:	0c 94 12 12 	jmp	0x2424	; 0x2424 <__fp_mintl>
    2414:	0c 94 2d 12 	jmp	0x245a	; 0x245a <__fp_mpack>

00002418 <__fp_inf>:
    2418:	97 f9       	bld	r25, 7
    241a:	9f 67       	ori	r25, 0x7F	; 127
    241c:	80 e8       	ldi	r24, 0x80	; 128
    241e:	70 e0       	ldi	r23, 0x00	; 0
    2420:	60 e0       	ldi	r22, 0x00	; 0
    2422:	08 95       	ret

00002424 <__fp_mintl>:
    2424:	88 23       	and	r24, r24
    2426:	71 f4       	brne	.+28     	; 0x2444 <__fp_mintl+0x20>
    2428:	77 23       	and	r23, r23
    242a:	21 f0       	breq	.+8      	; 0x2434 <__fp_mintl+0x10>
    242c:	98 50       	subi	r25, 0x08	; 8
    242e:	87 2b       	or	r24, r23
    2430:	76 2f       	mov	r23, r22
    2432:	07 c0       	rjmp	.+14     	; 0x2442 <__fp_mintl+0x1e>
    2434:	66 23       	and	r22, r22
    2436:	11 f4       	brne	.+4      	; 0x243c <__fp_mintl+0x18>
    2438:	99 27       	eor	r25, r25
    243a:	0d c0       	rjmp	.+26     	; 0x2456 <__fp_mintl+0x32>
    243c:	90 51       	subi	r25, 0x10	; 16
    243e:	86 2b       	or	r24, r22
    2440:	70 e0       	ldi	r23, 0x00	; 0
    2442:	60 e0       	ldi	r22, 0x00	; 0
    2444:	2a f0       	brmi	.+10     	; 0x2450 <__fp_mintl+0x2c>
    2446:	9a 95       	dec	r25
    2448:	66 0f       	add	r22, r22
    244a:	77 1f       	adc	r23, r23
    244c:	88 1f       	adc	r24, r24
    244e:	da f7       	brpl	.-10     	; 0x2446 <__fp_mintl+0x22>
    2450:	88 0f       	add	r24, r24
    2452:	96 95       	lsr	r25
    2454:	87 95       	ror	r24
    2456:	97 f9       	bld	r25, 7
    2458:	08 95       	ret

0000245a <__fp_mpack>:
    245a:	9f 3f       	cpi	r25, 0xFF	; 255
    245c:	31 f0       	breq	.+12     	; 0x246a <__fp_mpack_finite+0xc>

0000245e <__fp_mpack_finite>:
    245e:	91 50       	subi	r25, 0x01	; 1
    2460:	20 f4       	brcc	.+8      	; 0x246a <__fp_mpack_finite+0xc>
    2462:	87 95       	ror	r24
    2464:	77 95       	ror	r23
    2466:	67 95       	ror	r22
    2468:	b7 95       	ror	r27
    246a:	88 0f       	add	r24, r24
    246c:	91 1d       	adc	r25, r1
    246e:	96 95       	lsr	r25
    2470:	87 95       	ror	r24
    2472:	97 f9       	bld	r25, 7
    2474:	08 95       	ret

00002476 <__fp_nan>:
    2476:	9f ef       	ldi	r25, 0xFF	; 255
    2478:	80 ec       	ldi	r24, 0xC0	; 192
    247a:	08 95       	ret

0000247c <__fp_pscA>:
    247c:	00 24       	eor	r0, r0
    247e:	0a 94       	dec	r0
    2480:	16 16       	cp	r1, r22
    2482:	17 06       	cpc	r1, r23
    2484:	18 06       	cpc	r1, r24
    2486:	09 06       	cpc	r0, r25
    2488:	08 95       	ret

0000248a <__fp_pscB>:
    248a:	00 24       	eor	r0, r0
    248c:	0a 94       	dec	r0
    248e:	12 16       	cp	r1, r18
    2490:	13 06       	cpc	r1, r19
    2492:	14 06       	cpc	r1, r20
    2494:	05 06       	cpc	r0, r21
    2496:	08 95       	ret

00002498 <__fp_round>:
    2498:	09 2e       	mov	r0, r25
    249a:	03 94       	inc	r0
    249c:	00 0c       	add	r0, r0
    249e:	11 f4       	brne	.+4      	; 0x24a4 <__fp_round+0xc>
    24a0:	88 23       	and	r24, r24
    24a2:	52 f0       	brmi	.+20     	; 0x24b8 <__fp_round+0x20>
    24a4:	bb 0f       	add	r27, r27
    24a6:	40 f4       	brcc	.+16     	; 0x24b8 <__fp_round+0x20>
    24a8:	bf 2b       	or	r27, r31
    24aa:	11 f4       	brne	.+4      	; 0x24b0 <__fp_round+0x18>
    24ac:	60 ff       	sbrs	r22, 0
    24ae:	04 c0       	rjmp	.+8      	; 0x24b8 <__fp_round+0x20>
    24b0:	6f 5f       	subi	r22, 0xFF	; 255
    24b2:	7f 4f       	sbci	r23, 0xFF	; 255
    24b4:	8f 4f       	sbci	r24, 0xFF	; 255
    24b6:	9f 4f       	sbci	r25, 0xFF	; 255
    24b8:	08 95       	ret

000024ba <__fp_split3>:
    24ba:	57 fd       	sbrc	r21, 7
    24bc:	90 58       	subi	r25, 0x80	; 128
    24be:	44 0f       	add	r20, r20
    24c0:	55 1f       	adc	r21, r21
    24c2:	59 f0       	breq	.+22     	; 0x24da <__fp_splitA+0x10>
    24c4:	5f 3f       	cpi	r21, 0xFF	; 255
    24c6:	71 f0       	breq	.+28     	; 0x24e4 <__fp_splitA+0x1a>
    24c8:	47 95       	ror	r20

000024ca <__fp_splitA>:
    24ca:	88 0f       	add	r24, r24
    24cc:	97 fb       	bst	r25, 7
    24ce:	99 1f       	adc	r25, r25
    24d0:	61 f0       	breq	.+24     	; 0x24ea <__fp_splitA+0x20>
    24d2:	9f 3f       	cpi	r25, 0xFF	; 255
    24d4:	79 f0       	breq	.+30     	; 0x24f4 <__fp_splitA+0x2a>
    24d6:	87 95       	ror	r24
    24d8:	08 95       	ret
    24da:	12 16       	cp	r1, r18
    24dc:	13 06       	cpc	r1, r19
    24de:	14 06       	cpc	r1, r20
    24e0:	55 1f       	adc	r21, r21
    24e2:	f2 cf       	rjmp	.-28     	; 0x24c8 <__fp_split3+0xe>
    24e4:	46 95       	lsr	r20
    24e6:	f1 df       	rcall	.-30     	; 0x24ca <__fp_splitA>
    24e8:	08 c0       	rjmp	.+16     	; 0x24fa <__fp_splitA+0x30>
    24ea:	16 16       	cp	r1, r22
    24ec:	17 06       	cpc	r1, r23
    24ee:	18 06       	cpc	r1, r24
    24f0:	99 1f       	adc	r25, r25
    24f2:	f1 cf       	rjmp	.-30     	; 0x24d6 <__fp_splitA+0xc>
    24f4:	86 95       	lsr	r24
    24f6:	71 05       	cpc	r23, r1
    24f8:	61 05       	cpc	r22, r1
    24fa:	08 94       	sec
    24fc:	08 95       	ret

000024fe <__fp_trunc>:
    24fe:	0e 94 65 12 	call	0x24ca	; 0x24ca <__fp_splitA>
    2502:	a0 f0       	brcs	.+40     	; 0x252c <__fp_trunc+0x2e>
    2504:	be e7       	ldi	r27, 0x7E	; 126
    2506:	b9 17       	cp	r27, r25
    2508:	88 f4       	brcc	.+34     	; 0x252c <__fp_trunc+0x2e>
    250a:	bb 27       	eor	r27, r27
    250c:	9f 38       	cpi	r25, 0x8F	; 143
    250e:	60 f4       	brcc	.+24     	; 0x2528 <__fp_trunc+0x2a>
    2510:	16 16       	cp	r1, r22
    2512:	b1 1d       	adc	r27, r1
    2514:	67 2f       	mov	r22, r23
    2516:	78 2f       	mov	r23, r24
    2518:	88 27       	eor	r24, r24
    251a:	98 5f       	subi	r25, 0xF8	; 248
    251c:	f7 cf       	rjmp	.-18     	; 0x250c <__fp_trunc+0xe>
    251e:	86 95       	lsr	r24
    2520:	77 95       	ror	r23
    2522:	67 95       	ror	r22
    2524:	b1 1d       	adc	r27, r1
    2526:	93 95       	inc	r25
    2528:	96 39       	cpi	r25, 0x96	; 150
    252a:	c8 f3       	brcs	.-14     	; 0x251e <__fp_trunc+0x20>
    252c:	08 95       	ret

0000252e <__fp_zero>:
    252e:	e8 94       	clt

00002530 <__fp_szero>:
    2530:	bb 27       	eor	r27, r27
    2532:	66 27       	eor	r22, r22
    2534:	77 27       	eor	r23, r23
    2536:	cb 01       	movw	r24, r22
    2538:	97 f9       	bld	r25, 7
    253a:	08 95       	ret

0000253c <__divmodsi4>:
    253c:	05 2e       	mov	r0, r21
    253e:	97 fb       	bst	r25, 7
    2540:	1e f4       	brtc	.+6      	; 0x2548 <__divmodsi4+0xc>
    2542:	00 94       	com	r0
    2544:	0e 94 b5 12 	call	0x256a	; 0x256a <__negsi2>
    2548:	57 fd       	sbrc	r21, 7
    254a:	07 d0       	rcall	.+14     	; 0x255a <__divmodsi4_neg2>
    254c:	0e 94 bd 12 	call	0x257a	; 0x257a <__udivmodsi4>
    2550:	07 fc       	sbrc	r0, 7
    2552:	03 d0       	rcall	.+6      	; 0x255a <__divmodsi4_neg2>
    2554:	4e f4       	brtc	.+18     	; 0x2568 <__divmodsi4_exit>
    2556:	0c 94 b5 12 	jmp	0x256a	; 0x256a <__negsi2>

0000255a <__divmodsi4_neg2>:
    255a:	50 95       	com	r21
    255c:	40 95       	com	r20
    255e:	30 95       	com	r19
    2560:	21 95       	neg	r18
    2562:	3f 4f       	sbci	r19, 0xFF	; 255
    2564:	4f 4f       	sbci	r20, 0xFF	; 255
    2566:	5f 4f       	sbci	r21, 0xFF	; 255

00002568 <__divmodsi4_exit>:
    2568:	08 95       	ret

0000256a <__negsi2>:
    256a:	90 95       	com	r25
    256c:	80 95       	com	r24
    256e:	70 95       	com	r23
    2570:	61 95       	neg	r22
    2572:	7f 4f       	sbci	r23, 0xFF	; 255
    2574:	8f 4f       	sbci	r24, 0xFF	; 255
    2576:	9f 4f       	sbci	r25, 0xFF	; 255
    2578:	08 95       	ret

0000257a <__udivmodsi4>:
    257a:	a1 e2       	ldi	r26, 0x21	; 33
    257c:	1a 2e       	mov	r1, r26
    257e:	aa 1b       	sub	r26, r26
    2580:	bb 1b       	sub	r27, r27
    2582:	fd 01       	movw	r30, r26
    2584:	0d c0       	rjmp	.+26     	; 0x25a0 <__udivmodsi4_ep>

00002586 <__udivmodsi4_loop>:
    2586:	aa 1f       	adc	r26, r26
    2588:	bb 1f       	adc	r27, r27
    258a:	ee 1f       	adc	r30, r30
    258c:	ff 1f       	adc	r31, r31
    258e:	a2 17       	cp	r26, r18
    2590:	b3 07       	cpc	r27, r19
    2592:	e4 07       	cpc	r30, r20
    2594:	f5 07       	cpc	r31, r21
    2596:	20 f0       	brcs	.+8      	; 0x25a0 <__udivmodsi4_ep>
    2598:	a2 1b       	sub	r26, r18
    259a:	b3 0b       	sbc	r27, r19
    259c:	e4 0b       	sbc	r30, r20
    259e:	f5 0b       	sbc	r31, r21

000025a0 <__udivmodsi4_ep>:
    25a0:	66 1f       	adc	r22, r22
    25a2:	77 1f       	adc	r23, r23
    25a4:	88 1f       	adc	r24, r24
    25a6:	99 1f       	adc	r25, r25
    25a8:	1a 94       	dec	r1
    25aa:	69 f7       	brne	.-38     	; 0x2586 <__udivmodsi4_loop>
    25ac:	60 95       	com	r22
    25ae:	70 95       	com	r23
    25b0:	80 95       	com	r24
    25b2:	90 95       	com	r25
    25b4:	9b 01       	movw	r18, r22
    25b6:	ac 01       	movw	r20, r24
    25b8:	bd 01       	movw	r22, r26
    25ba:	cf 01       	movw	r24, r30
    25bc:	08 95       	ret

000025be <setjmp>:
    25be:	dc 01       	movw	r26, r24
    25c0:	2d 92       	st	X+, r2
    25c2:	3d 92       	st	X+, r3
    25c4:	4d 92       	st	X+, r4
    25c6:	5d 92       	st	X+, r5
    25c8:	6d 92       	st	X+, r6
    25ca:	7d 92       	st	X+, r7
    25cc:	8d 92       	st	X+, r8
    25ce:	9d 92       	st	X+, r9
    25d0:	ad 92       	st	X+, r10
    25d2:	bd 92       	st	X+, r11
    25d4:	cd 92       	st	X+, r12
    25d6:	dd 92       	st	X+, r13
    25d8:	ed 92       	st	X+, r14
    25da:	fd 92       	st	X+, r15
    25dc:	0d 93       	st	X+, r16
    25de:	1d 93       	st	X+, r17
    25e0:	cd 93       	st	X+, r28
    25e2:	dd 93       	st	X+, r29
    25e4:	ff 91       	pop	r31
    25e6:	ef 91       	pop	r30
    25e8:	8d b7       	in	r24, 0x3d	; 61
    25ea:	8d 93       	st	X+, r24
    25ec:	8e b7       	in	r24, 0x3e	; 62
    25ee:	8d 93       	st	X+, r24
    25f0:	8f b7       	in	r24, 0x3f	; 63
    25f2:	8d 93       	st	X+, r24
    25f4:	ed 93       	st	X+, r30
    25f6:	fd 93       	st	X+, r31
    25f8:	88 27       	eor	r24, r24
    25fa:	99 27       	eor	r25, r25
    25fc:	09 94       	ijmp

000025fe <longjmp>:
    25fe:	dc 01       	movw	r26, r24
    2600:	cb 01       	movw	r24, r22
    2602:	81 30       	cpi	r24, 0x01	; 1
    2604:	91 05       	cpc	r25, r1
    2606:	81 1d       	adc	r24, r1
    2608:	2d 90       	ld	r2, X+
    260a:	3d 90       	ld	r3, X+
    260c:	4d 90       	ld	r4, X+
    260e:	5d 90       	ld	r5, X+
    2610:	6d 90       	ld	r6, X+
    2612:	7d 90       	ld	r7, X+
    2614:	8d 90       	ld	r8, X+
    2616:	9d 90       	ld	r9, X+
    2618:	ad 90       	ld	r10, X+
    261a:	bd 90       	ld	r11, X+
    261c:	cd 90       	ld	r12, X+
    261e:	dd 90       	ld	r13, X+
    2620:	ed 90       	ld	r14, X+
    2622:	fd 90       	ld	r15, X+
    2624:	0d 91       	ld	r16, X+
    2626:	1d 91       	ld	r17, X+
    2628:	cd 91       	ld	r28, X+
    262a:	dd 91       	ld	r29, X+
    262c:	ed 91       	ld	r30, X+
    262e:	fd 91       	ld	r31, X+
    2630:	0d 90       	ld	r0, X+
    2632:	f8 94       	cli
    2634:	fe bf       	out	0x3e, r31	; 62
    2636:	0f be       	out	0x3f, r0	; 63
    2638:	ed bf       	out	0x3d, r30	; 61
    263a:	ed 91       	ld	r30, X+
    263c:	fd 91       	ld	r31, X+
    263e:	09 94       	ijmp

00002640 <_exit>:
    2640:	f8 94       	cli

00002642 <__stop_program>:
    2642:	ff cf       	rjmp	.-2      	; 0x2642 <__stop_program>
