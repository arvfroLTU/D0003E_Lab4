
Lab 4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000096  00800100  00002470  00002504  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002470  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000357  00800196  00800196  0000259a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000259a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000025cc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000258  00000000  00000000  0000260c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000029f4  00000000  00000000  00002864  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000010ac  00000000  00000000  00005258  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001629  00000000  00000000  00006304  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000c20  00000000  00000000  00007930  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000091b  00000000  00000000  00008550  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000024f0  00000000  00000000  00008e6b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001f8  00000000  00000000  0000b35b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
       4:	0c 94 4f 05 	jmp	0xa9e	; 0xa9e <__vector_1>
       8:	0c 94 be 05 	jmp	0xb7c	; 0xb7c <__vector_2>
       c:	0c 94 2d 06 	jmp	0xc5a	; 0xc5a <__vector_3>
      10:	0c 94 9c 06 	jmp	0xd38	; 0xd38 <__vector_4>
      14:	0c 94 0b 07 	jmp	0xe16	; 0xe16 <__vector_5>
      18:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      1c:	0c 94 76 0d 	jmp	0x1aec	; 0x1aec <__vector_7>
      20:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      24:	0c 94 24 0d 	jmp	0x1a48	; 0x1a48 <__vector_9>
      28:	0c 94 7a 07 	jmp	0xef4	; 0xef4 <__vector_10>
      2c:	0c 94 e9 07 	jmp	0xfd2	; 0xfd2 <__vector_11>
      30:	0c 94 58 08 	jmp	0x10b0	; 0x10b0 <__vector_12>
      34:	0c 94 c7 08 	jmp	0x118e	; 0x118e <__vector_13>
      38:	0c 94 36 09 	jmp	0x126c	; 0x126c <__vector_14>
      3c:	0c 94 a5 09 	jmp	0x134a	; 0x134a <__vector_15>
      40:	0c 94 14 0a 	jmp	0x1428	; 0x1428 <__vector_16>
      44:	0c 94 83 0a 	jmp	0x1506	; 0x1506 <__vector_17>
      48:	0c 94 f2 0a 	jmp	0x15e4	; 0x15e4 <__vector_18>
      4c:	0c 94 61 0b 	jmp	0x16c2	; 0x16c2 <__vector_19>
      50:	0c 94 d0 0b 	jmp	0x17a0	; 0x17a0 <__vector_20>
      54:	0c 94 3f 0c 	jmp	0x187e	; 0x187e <__vector_21>
      58:	0c 94 ae 0c 	jmp	0x195c	; 0x195c <__vector_22>

0000005c <__ctors_end>:
      5c:	11 24       	eor	r1, r1
      5e:	1f be       	out	0x3f, r1	; 63
      60:	cf ef       	ldi	r28, 0xFF	; 255
      62:	d4 e0       	ldi	r29, 0x04	; 4
      64:	de bf       	out	0x3e, r29	; 62
      66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
      68:	11 e0       	ldi	r17, 0x01	; 1
      6a:	a0 e0       	ldi	r26, 0x00	; 0
      6c:	b1 e0       	ldi	r27, 0x01	; 1
      6e:	e0 e7       	ldi	r30, 0x70	; 112
      70:	f4 e2       	ldi	r31, 0x24	; 36
      72:	02 c0       	rjmp	.+4      	; 0x78 <__do_copy_data+0x10>
      74:	05 90       	lpm	r0, Z+
      76:	0d 92       	st	X+, r0
      78:	a6 39       	cpi	r26, 0x96	; 150
      7a:	b1 07       	cpc	r27, r17
      7c:	d9 f7       	brne	.-10     	; 0x74 <__do_copy_data+0xc>

0000007e <__do_clear_bss>:
      7e:	24 e0       	ldi	r18, 0x04	; 4
      80:	a6 e9       	ldi	r26, 0x96	; 150
      82:	b1 e0       	ldi	r27, 0x01	; 1
      84:	01 c0       	rjmp	.+2      	; 0x88 <.do_clear_bss_start>

00000086 <.do_clear_bss_loop>:
      86:	1d 92       	st	X+, r1

00000088 <.do_clear_bss_start>:
      88:	ad 3e       	cpi	r26, 0xED	; 237
      8a:	b2 07       	cpc	r27, r18
      8c:	e1 f7       	brne	.-8      	; 0x86 <.do_clear_bss_loop>
      8e:	0e 94 a2 02 	call	0x544	; 0x544 <main>
      92:	0c 94 36 12 	jmp	0x246c	; 0x246c <_exit>

00000096 <__bad_interrupt>:
      96:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009a <UpDownPushBuffer>:
	ASYNC(self->pg2, outputPulse, 0);
	
}
*/
void UpDownPushBuffer(General *self)
{
      9a:	cf 92       	push	r12
      9c:	df 92       	push	r13
      9e:	ef 92       	push	r14
      a0:	ff 92       	push	r15
      a2:	0f 93       	push	r16
      a4:	1f 93       	push	r17
      a6:	cf 93       	push	r28
      a8:	df 93       	push	r29
      aa:	ec 01       	movw	r28, r24
	if (!(PINB & (1 << 6)))
      ac:	1e 99       	sbic	0x03, 6	; 3
      ae:	33 c0       	rjmp	.+102    	; 0x116 <UpDownPushBuffer+0x7c>
	{
		ASYNC(self->Active, plusPulse, 0);
      b0:	0a 85       	ldd	r16, Y+10	; 0x0a
      b2:	1b 85       	ldd	r17, Y+11	; 0x0b
      b4:	c1 2c       	mov	r12, r1
      b6:	d1 2c       	mov	r13, r1
      b8:	0f 2e       	mov	r0, r31
      ba:	f8 e7       	ldi	r31, 0x78	; 120
      bc:	ef 2e       	mov	r14, r31
      be:	f3 e0       	ldi	r31, 0x03	; 3
      c0:	ff 2e       	mov	r15, r31
      c2:	f0 2d       	mov	r31, r0
      c4:	20 e0       	ldi	r18, 0x00	; 0
      c6:	30 e0       	ldi	r19, 0x00	; 0
      c8:	a9 01       	movw	r20, r18
      ca:	60 e0       	ldi	r22, 0x00	; 0
      cc:	70 e0       	ldi	r23, 0x00	; 0
      ce:	cb 01       	movw	r24, r22
      d0:	0e 94 16 0e 	call	0x1c2c	; 0x1c2c <async>
		self->graphics->frequency = self->Active->frequency;
      d4:	e8 85       	ldd	r30, Y+8	; 0x08
      d6:	f9 85       	ldd	r31, Y+9	; 0x09
      d8:	aa 85       	ldd	r26, Y+10	; 0x0a
      da:	bb 85       	ldd	r27, Y+11	; 0x0b
      dc:	16 96       	adiw	r26, 0x06	; 6
      de:	8d 91       	ld	r24, X+
      e0:	9c 91       	ld	r25, X
      e2:	17 97       	sbiw	r26, 0x07	; 7
      e4:	09 2e       	mov	r0, r25
      e6:	00 0c       	add	r0, r0
      e8:	aa 0b       	sbc	r26, r26
      ea:	bb 0b       	sbc	r27, r27
      ec:	84 83       	std	Z+4, r24	; 0x04
      ee:	95 83       	std	Z+5, r25	; 0x05
      f0:	a6 83       	std	Z+6, r26	; 0x06
      f2:	b7 83       	std	Z+7, r27	; 0x07
		ASYNC(self->graphics, updateGUI, 0);
      f4:	08 85       	ldd	r16, Y+8	; 0x08
      f6:	19 85       	ldd	r17, Y+9	; 0x09
      f8:	0f 2e       	mov	r0, r31
      fa:	f5 e6       	ldi	r31, 0x65	; 101
      fc:	ef 2e       	mov	r14, r31
      fe:	f2 e0       	ldi	r31, 0x02	; 2
     100:	ff 2e       	mov	r15, r31
     102:	f0 2d       	mov	r31, r0
     104:	20 e0       	ldi	r18, 0x00	; 0
     106:	30 e0       	ldi	r19, 0x00	; 0
     108:	a9 01       	movw	r20, r18
     10a:	60 e0       	ldi	r22, 0x00	; 0
     10c:	70 e0       	ldi	r23, 0x00	; 0
     10e:	cb 01       	movw	r24, r22
     110:	0e 94 16 0e 	call	0x1c2c	; 0x1c2c <async>
     114:	75 c0       	rjmp	.+234    	; 0x200 <__EEPROM_REGION_LENGTH__>
	}
	
	else if (!(PINB & (1 << 7)))
     116:	1f 99       	sbic	0x03, 7	; 3
     118:	33 c0       	rjmp	.+102    	; 0x180 <UpDownPushBuffer+0xe6>
	{
		ASYNC(self->Active, minusPulse, 0);
     11a:	0a 85       	ldd	r16, Y+10	; 0x0a
     11c:	1b 85       	ldd	r17, Y+11	; 0x0b
     11e:	c1 2c       	mov	r12, r1
     120:	d1 2c       	mov	r13, r1
     122:	0f 2e       	mov	r0, r31
     124:	f4 e9       	ldi	r31, 0x94	; 148
     126:	ef 2e       	mov	r14, r31
     128:	f3 e0       	ldi	r31, 0x03	; 3
     12a:	ff 2e       	mov	r15, r31
     12c:	f0 2d       	mov	r31, r0
     12e:	20 e0       	ldi	r18, 0x00	; 0
     130:	30 e0       	ldi	r19, 0x00	; 0
     132:	a9 01       	movw	r20, r18
     134:	60 e0       	ldi	r22, 0x00	; 0
     136:	70 e0       	ldi	r23, 0x00	; 0
     138:	cb 01       	movw	r24, r22
     13a:	0e 94 16 0e 	call	0x1c2c	; 0x1c2c <async>
		self->graphics->frequency = self->Active->frequency;
     13e:	e8 85       	ldd	r30, Y+8	; 0x08
     140:	f9 85       	ldd	r31, Y+9	; 0x09
     142:	aa 85       	ldd	r26, Y+10	; 0x0a
     144:	bb 85       	ldd	r27, Y+11	; 0x0b
     146:	16 96       	adiw	r26, 0x06	; 6
     148:	8d 91       	ld	r24, X+
     14a:	9c 91       	ld	r25, X
     14c:	17 97       	sbiw	r26, 0x07	; 7
     14e:	09 2e       	mov	r0, r25
     150:	00 0c       	add	r0, r0
     152:	aa 0b       	sbc	r26, r26
     154:	bb 0b       	sbc	r27, r27
     156:	84 83       	std	Z+4, r24	; 0x04
     158:	95 83       	std	Z+5, r25	; 0x05
     15a:	a6 83       	std	Z+6, r26	; 0x06
     15c:	b7 83       	std	Z+7, r27	; 0x07
		ASYNC(self->graphics, updateGUI, 0);
     15e:	08 85       	ldd	r16, Y+8	; 0x08
     160:	19 85       	ldd	r17, Y+9	; 0x09
     162:	0f 2e       	mov	r0, r31
     164:	f5 e6       	ldi	r31, 0x65	; 101
     166:	ef 2e       	mov	r14, r31
     168:	f2 e0       	ldi	r31, 0x02	; 2
     16a:	ff 2e       	mov	r15, r31
     16c:	f0 2d       	mov	r31, r0
     16e:	20 e0       	ldi	r18, 0x00	; 0
     170:	30 e0       	ldi	r19, 0x00	; 0
     172:	a9 01       	movw	r20, r18
     174:	60 e0       	ldi	r22, 0x00	; 0
     176:	70 e0       	ldi	r23, 0x00	; 0
     178:	cb 01       	movw	r24, r22
     17a:	0e 94 16 0e 	call	0x1c2c	; 0x1c2c <async>
     17e:	40 c0       	rjmp	.+128    	; 0x200 <__EEPROM_REGION_LENGTH__>
	}
	
	else if (!(PINB & (1 << 4)))
     180:	1c 99       	sbic	0x03, 4	; 3
     182:	3e c0       	rjmp	.+124    	; 0x200 <__EEPROM_REGION_LENGTH__>
	{
		if (self->Active->pulseCut == 0)
     184:	ea 85       	ldd	r30, Y+10	; 0x0a
     186:	fb 85       	ldd	r31, Y+11	; 0x0b
     188:	82 85       	ldd	r24, Z+10	; 0x0a
     18a:	93 85       	ldd	r25, Z+11	; 0x0b
     18c:	00 97       	sbiw	r24, 0x00	; 0
     18e:	39 f4       	brne	.+14     	; 0x19e <UpDownPushBuffer+0x104>
		{
			self->graphics->frequency = 0;
     190:	e8 85       	ldd	r30, Y+8	; 0x08
     192:	f9 85       	ldd	r31, Y+9	; 0x09
     194:	14 82       	std	Z+4, r1	; 0x04
     196:	15 82       	std	Z+5, r1	; 0x05
     198:	16 82       	std	Z+6, r1	; 0x06
     19a:	17 82       	std	Z+7, r1	; 0x07
     19c:	0f c0       	rjmp	.+30     	; 0x1bc <UpDownPushBuffer+0x122>
		}
		else if (self->Active->pulseCut == 1)
     19e:	01 97       	sbiw	r24, 0x01	; 1
     1a0:	69 f4       	brne	.+26     	; 0x1bc <UpDownPushBuffer+0x122>
		{
			self->graphics->frequency = self->Active->frequency;
     1a2:	28 85       	ldd	r18, Y+8	; 0x08
     1a4:	39 85       	ldd	r19, Y+9	; 0x09
     1a6:	86 81       	ldd	r24, Z+6	; 0x06
     1a8:	97 81       	ldd	r25, Z+7	; 0x07
     1aa:	09 2e       	mov	r0, r25
     1ac:	00 0c       	add	r0, r0
     1ae:	aa 0b       	sbc	r26, r26
     1b0:	bb 0b       	sbc	r27, r27
     1b2:	f9 01       	movw	r30, r18
     1b4:	84 83       	std	Z+4, r24	; 0x04
     1b6:	95 83       	std	Z+5, r25	; 0x05
     1b8:	a6 83       	std	Z+6, r26	; 0x06
     1ba:	b7 83       	std	Z+7, r27	; 0x07
		}
		ASYNC(self->Active, toZero, 0);
     1bc:	0a 85       	ldd	r16, Y+10	; 0x0a
     1be:	1b 85       	ldd	r17, Y+11	; 0x0b
     1c0:	c1 2c       	mov	r12, r1
     1c2:	d1 2c       	mov	r13, r1
     1c4:	0f 2e       	mov	r0, r31
     1c6:	f3 eb       	ldi	r31, 0xB3	; 179
     1c8:	ef 2e       	mov	r14, r31
     1ca:	f3 e0       	ldi	r31, 0x03	; 3
     1cc:	ff 2e       	mov	r15, r31
     1ce:	f0 2d       	mov	r31, r0
     1d0:	20 e0       	ldi	r18, 0x00	; 0
     1d2:	30 e0       	ldi	r19, 0x00	; 0
     1d4:	a9 01       	movw	r20, r18
     1d6:	60 e0       	ldi	r22, 0x00	; 0
     1d8:	70 e0       	ldi	r23, 0x00	; 0
     1da:	cb 01       	movw	r24, r22
     1dc:	0e 94 16 0e 	call	0x1c2c	; 0x1c2c <async>
		ASYNC(self->graphics, updateGUI, 0);
     1e0:	08 85       	ldd	r16, Y+8	; 0x08
     1e2:	19 85       	ldd	r17, Y+9	; 0x09
     1e4:	0f 2e       	mov	r0, r31
     1e6:	f5 e6       	ldi	r31, 0x65	; 101
     1e8:	ef 2e       	mov	r14, r31
     1ea:	f2 e0       	ldi	r31, 0x02	; 2
     1ec:	ff 2e       	mov	r15, r31
     1ee:	f0 2d       	mov	r31, r0
     1f0:	20 e0       	ldi	r18, 0x00	; 0
     1f2:	30 e0       	ldi	r19, 0x00	; 0
     1f4:	a9 01       	movw	r20, r18
     1f6:	60 e0       	ldi	r22, 0x00	; 0
     1f8:	70 e0       	ldi	r23, 0x00	; 0
     1fa:	cb 01       	movw	r24, r22
     1fc:	0e 94 16 0e 	call	0x1c2c	; 0x1c2c <async>
	}
}
     200:	df 91       	pop	r29
     202:	cf 91       	pop	r28
     204:	1f 91       	pop	r17
     206:	0f 91       	pop	r16
     208:	ff 90       	pop	r15
     20a:	ef 90       	pop	r14
     20c:	df 90       	pop	r13
     20e:	cf 90       	pop	r12
     210:	08 95       	ret

00000212 <LRBuffer>:

void LRBuffer(General *self){
     212:	fc 01       	movw	r30, r24

		if (!(PINE & (1 << 2)))
     214:	62 99       	sbic	0x0c, 2	; 12
     216:	0f c0       	rjmp	.+30     	; 0x236 <LRBuffer+0x24>
		{	
			self->Active = self->pg1;						//Towards MONITOR IS PG2 (Left)
     218:	84 81       	ldd	r24, Z+4	; 0x04
     21a:	95 81       	ldd	r25, Z+5	; 0x05
     21c:	93 87       	std	Z+11, r25	; 0x0b
     21e:	82 87       	std	Z+10, r24	; 0x0a
			
			self->graphics->side = 0;
     220:	00 84       	ldd	r0, Z+8	; 0x08
     222:	f1 85       	ldd	r31, Z+9	; 0x09
     224:	e0 2d       	mov	r30, r0
     226:	11 86       	std	Z+9, r1	; 0x09
     228:	10 86       	std	Z+8, r1	; 0x08
			//self->graphics->frequency =self->pg1->frequency;
			LCDDR13 = 0x0;
     22a:	10 92 f9 00 	sts	0x00F9, r1	; 0x8000f9 <__TEXT_REGION_LENGTH__+0x7fc0f9>
			LCDDR18 = 0x1;
     22e:	81 e0       	ldi	r24, 0x01	; 1
     230:	80 93 fe 00 	sts	0x00FE, r24	; 0x8000fe <__TEXT_REGION_LENGTH__+0x7fc0fe>
     234:	08 95       	ret
			//ASYNC(self->graphics, updateGUI, 0);

		}
		else if (!(PINE & (1 << 3)))
     236:	63 99       	sbic	0x0c, 3	; 12
     238:	10 c0       	rjmp	.+32     	; 0x25a <LRBuffer+0x48>
		{	
			self->Active = self->pg2;					// Away from MONITOR IS PG1 (Right)
     23a:	86 81       	ldd	r24, Z+6	; 0x06
     23c:	97 81       	ldd	r25, Z+7	; 0x07
     23e:	93 87       	std	Z+11, r25	; 0x0b
     240:	82 87       	std	Z+10, r24	; 0x0a
			
			self->graphics->side = 4;
     242:	00 84       	ldd	r0, Z+8	; 0x08
     244:	f1 85       	ldd	r31, Z+9	; 0x09
     246:	e0 2d       	mov	r30, r0
     248:	84 e0       	ldi	r24, 0x04	; 4
     24a:	90 e0       	ldi	r25, 0x00	; 0
     24c:	91 87       	std	Z+9, r25	; 0x09
     24e:	80 87       	std	Z+8, r24	; 0x08
			//self->graphics->frequency =self->pg2->frequency;
			LCDDR13 = 0x1;
     250:	81 e0       	ldi	r24, 0x01	; 1
     252:	80 93 f9 00 	sts	0x00F9, r24	; 0x8000f9 <__TEXT_REGION_LENGTH__+0x7fc0f9>
			LCDDR18 = 0x0;
     256:	10 92 fe 00 	sts	0x00FE, r1	; 0x8000fe <__TEXT_REGION_LENGTH__+0x7fc0fe>
     25a:	08 95       	ret

0000025c <LCD_Init>:
			self->frequency = 0;
		}
		else
		self->frequency = self->saved2;
	}
}
     25c:	e1 e6       	ldi	r30, 0x61	; 97
     25e:	f0 e0       	ldi	r31, 0x00	; 0
     260:	80 e8       	ldi	r24, 0x80	; 128
     262:	80 83       	st	Z, r24
     264:	10 82       	st	Z, r1
     266:	87 eb       	ldi	r24, 0xB7	; 183
     268:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>
     26c:	87 e0       	ldi	r24, 0x07	; 7
     26e:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
     272:	8f e0       	ldi	r24, 0x0F	; 15
     274:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
     278:	80 ec       	ldi	r24, 0xC0	; 192
     27a:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>
     27e:	08 95       	ret

00000280 <writeChar>:
     280:	cf 92       	push	r12
     282:	df 92       	push	r13
     284:	ef 92       	push	r14
     286:	ff 92       	push	r15
     288:	1f 93       	push	r17
     28a:	cf 93       	push	r28
     28c:	df 93       	push	r29
     28e:	10 ed       	ldi	r17, 0xD0	; 208
     290:	18 0f       	add	r17, r24
     292:	66 30       	cpi	r22, 0x06	; 6
     294:	71 05       	cpc	r23, r1
     296:	08 f0       	brcs	.+2      	; 0x29a <writeChar+0x1a>
     298:	b1 c0       	rjmp	.+354    	; 0x3fc <writeChar+0x17c>
     29a:	1a 30       	cpi	r17, 0x0A	; 10
     29c:	08 f0       	brcs	.+2      	; 0x2a0 <writeChar+0x20>
     29e:	ae c0       	rjmp	.+348    	; 0x3fc <writeChar+0x17c>
     2a0:	9b 01       	movw	r18, r22
     2a2:	2e 5f       	subi	r18, 0xFE	; 254
     2a4:	3f 4f       	sbci	r19, 0xFF	; 255
     2a6:	c9 01       	movw	r24, r18
     2a8:	99 23       	and	r25, r25
     2aa:	0c f4       	brge	.+2      	; 0x2ae <writeChar+0x2e>
     2ac:	01 96       	adiw	r24, 0x01	; 1
     2ae:	6b 01       	movw	r12, r22
     2b0:	bc 01       	movw	r22, r24
     2b2:	75 95       	asr	r23
     2b4:	67 95       	ror	r22
     2b6:	07 2e       	mov	r0, r23
     2b8:	00 0c       	add	r0, r0
     2ba:	88 0b       	sbc	r24, r24
     2bc:	99 0b       	sbc	r25, r25
     2be:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <__floatsisf>
     2c2:	0e 94 0b 11 	call	0x2216	; 0x2216 <floor>
     2c6:	20 e0       	ldi	r18, 0x00	; 0
     2c8:	30 e0       	ldi	r19, 0x00	; 0
     2ca:	40 e8       	ldi	r20, 0x80	; 128
     2cc:	5f e3       	ldi	r21, 0x3F	; 63
     2ce:	0e 94 2b 10 	call	0x2056	; 0x2056 <__subsf3>
     2d2:	0e 94 98 10 	call	0x2130	; 0x2130 <__fixsfsi>
     2d6:	fb 01       	movw	r30, r22
     2d8:	ee 0f       	add	r30, r30
     2da:	ff 1f       	adc	r31, r31
     2dc:	e0 5b       	subi	r30, 0xB0	; 176
     2de:	fe 4f       	sbci	r31, 0xFE	; 254
     2e0:	a0 81       	ld	r26, Z
     2e2:	b1 81       	ldd	r27, Z+1	; 0x01
     2e4:	ed 90       	ld	r14, X+
     2e6:	fc 90       	ld	r15, X
     2e8:	11 97       	sbiw	r26, 0x01	; 1
     2ea:	e1 2f       	mov	r30, r17
     2ec:	f0 e0       	ldi	r31, 0x00	; 0
     2ee:	9f 01       	movw	r18, r30
     2f0:	22 0f       	add	r18, r18
     2f2:	33 1f       	adc	r19, r19
     2f4:	22 0f       	add	r18, r18
     2f6:	33 1f       	adc	r19, r19
     2f8:	22 0f       	add	r18, r18
     2fa:	33 1f       	adc	r19, r19
     2fc:	20 50       	subi	r18, 0x00	; 0
     2fe:	3f 4f       	sbci	r19, 0xFF	; 255
     300:	e9 01       	movw	r28, r18
     302:	48 81       	ld	r20, Y
     304:	59 81       	ldd	r21, Y+1	; 0x01
     306:	96 01       	movw	r18, r12
     308:	21 70       	andi	r18, 0x01	; 1
     30a:	30 78       	andi	r19, 0x80	; 128
     30c:	33 23       	and	r19, r19
     30e:	34 f4       	brge	.+12     	; 0x31c <writeChar+0x9c>
     310:	21 50       	subi	r18, 0x01	; 1
     312:	31 09       	sbc	r19, r1
     314:	2e 6f       	ori	r18, 0xFE	; 254
     316:	3f 6f       	ori	r19, 0xFF	; 255
     318:	2f 5f       	subi	r18, 0xFF	; 255
     31a:	3f 4f       	sbci	r19, 0xFF	; 255
     31c:	22 0f       	add	r18, r18
     31e:	33 1f       	adc	r19, r19
     320:	22 0f       	add	r18, r18
     322:	33 1f       	adc	r19, r19
     324:	02 2e       	mov	r0, r18
     326:	02 c0       	rjmp	.+4      	; 0x32c <writeChar+0xac>
     328:	44 0f       	add	r20, r20
     32a:	55 1f       	adc	r21, r21
     32c:	0a 94       	dec	r0
     32e:	e2 f7       	brpl	.-8      	; 0x328 <writeChar+0xa8>
     330:	4e 0d       	add	r20, r14
     332:	5f 1d       	adc	r21, r15
     334:	4d 93       	st	X+, r20
     336:	5c 93       	st	X, r21
     338:	6b 01       	movw	r12, r22
     33a:	7c 01       	movw	r14, r24
     33c:	d4 e0       	ldi	r29, 0x04	; 4
     33e:	cd 0e       	add	r12, r29
     340:	d1 1c       	adc	r13, r1
     342:	e1 1c       	adc	r14, r1
     344:	f1 1c       	adc	r15, r1
     346:	a6 01       	movw	r20, r12
     348:	44 0f       	add	r20, r20
     34a:	55 1f       	adc	r21, r21
     34c:	da 01       	movw	r26, r20
     34e:	a0 5b       	subi	r26, 0xB0	; 176
     350:	be 4f       	sbci	r27, 0xFE	; 254
     352:	0d 90       	ld	r0, X+
     354:	bc 91       	ld	r27, X
     356:	a0 2d       	mov	r26, r0
     358:	cd 91       	ld	r28, X+
     35a:	dc 91       	ld	r29, X
     35c:	11 97       	sbiw	r26, 0x01	; 1
     35e:	ee 0f       	add	r30, r30
     360:	ff 1f       	adc	r31, r31
     362:	ee 0f       	add	r30, r30
     364:	ff 1f       	adc	r31, r31
     366:	ee 0f       	add	r30, r30
     368:	ff 1f       	adc	r31, r31
     36a:	e0 50       	subi	r30, 0x00	; 0
     36c:	ff 4f       	sbci	r31, 0xFF	; 255
     36e:	42 81       	ldd	r20, Z+2	; 0x02
     370:	53 81       	ldd	r21, Z+3	; 0x03
     372:	02 2e       	mov	r0, r18
     374:	02 c0       	rjmp	.+4      	; 0x37a <writeChar+0xfa>
     376:	44 0f       	add	r20, r20
     378:	55 1f       	adc	r21, r21
     37a:	0a 94       	dec	r0
     37c:	e2 f7       	brpl	.-8      	; 0x376 <writeChar+0xf6>
     37e:	4c 0f       	add	r20, r28
     380:	5d 1f       	adc	r21, r29
     382:	4d 93       	st	X+, r20
     384:	5c 93       	st	X, r21
     386:	6b 01       	movw	r12, r22
     388:	7c 01       	movw	r14, r24
     38a:	48 e0       	ldi	r20, 0x08	; 8
     38c:	c4 0e       	add	r12, r20
     38e:	d1 1c       	adc	r13, r1
     390:	e1 1c       	adc	r14, r1
     392:	f1 1c       	adc	r15, r1
     394:	a6 01       	movw	r20, r12
     396:	44 0f       	add	r20, r20
     398:	55 1f       	adc	r21, r21
     39a:	da 01       	movw	r26, r20
     39c:	a0 5b       	subi	r26, 0xB0	; 176
     39e:	be 4f       	sbci	r27, 0xFE	; 254
     3a0:	0d 90       	ld	r0, X+
     3a2:	bc 91       	ld	r27, X
     3a4:	a0 2d       	mov	r26, r0
     3a6:	cd 91       	ld	r28, X+
     3a8:	dc 91       	ld	r29, X
     3aa:	11 97       	sbiw	r26, 0x01	; 1
     3ac:	44 81       	ldd	r20, Z+4	; 0x04
     3ae:	55 81       	ldd	r21, Z+5	; 0x05
     3b0:	02 2e       	mov	r0, r18
     3b2:	02 c0       	rjmp	.+4      	; 0x3b8 <writeChar+0x138>
     3b4:	44 0f       	add	r20, r20
     3b6:	55 1f       	adc	r21, r21
     3b8:	0a 94       	dec	r0
     3ba:	e2 f7       	brpl	.-8      	; 0x3b4 <writeChar+0x134>
     3bc:	4c 0f       	add	r20, r28
     3be:	5d 1f       	adc	r21, r29
     3c0:	4d 93       	st	X+, r20
     3c2:	5c 93       	st	X, r21
     3c4:	dc 01       	movw	r26, r24
     3c6:	cb 01       	movw	r24, r22
     3c8:	0c 96       	adiw	r24, 0x0c	; 12
     3ca:	a1 1d       	adc	r26, r1
     3cc:	b1 1d       	adc	r27, r1
     3ce:	bc 01       	movw	r22, r24
     3d0:	66 0f       	add	r22, r22
     3d2:	77 1f       	adc	r23, r23
     3d4:	db 01       	movw	r26, r22
     3d6:	a0 5b       	subi	r26, 0xB0	; 176
     3d8:	be 4f       	sbci	r27, 0xFE	; 254
     3da:	0d 90       	ld	r0, X+
     3dc:	bc 91       	ld	r27, X
     3de:	a0 2d       	mov	r26, r0
     3e0:	4d 91       	ld	r20, X+
     3e2:	5c 91       	ld	r21, X
     3e4:	11 97       	sbiw	r26, 0x01	; 1
     3e6:	86 81       	ldd	r24, Z+6	; 0x06
     3e8:	97 81       	ldd	r25, Z+7	; 0x07
     3ea:	02 c0       	rjmp	.+4      	; 0x3f0 <writeChar+0x170>
     3ec:	88 0f       	add	r24, r24
     3ee:	99 1f       	adc	r25, r25
     3f0:	2a 95       	dec	r18
     3f2:	e2 f7       	brpl	.-8      	; 0x3ec <writeChar+0x16c>
     3f4:	84 0f       	add	r24, r20
     3f6:	95 1f       	adc	r25, r21
     3f8:	8d 93       	st	X+, r24
     3fa:	9c 93       	st	X, r25
     3fc:	df 91       	pop	r29
     3fe:	cf 91       	pop	r28
     400:	1f 91       	pop	r17
     402:	ff 90       	pop	r15
     404:	ef 90       	pop	r14
     406:	df 90       	pop	r13
     408:	cf 90       	pop	r12
     40a:	08 95       	ret

0000040c <clearChar1>:
     40c:	82 30       	cpi	r24, 0x02	; 2
     40e:	91 05       	cpc	r25, r1
     410:	48 f4       	brcc	.+18     	; 0x424 <clearChar1+0x18>
     412:	10 92 ec 00 	sts	0x00EC, r1	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
     416:	10 92 f1 00 	sts	0x00F1, r1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7fc0f1>
     41a:	10 92 f6 00 	sts	0x00F6, r1	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7fc0f6>
     41e:	10 92 fb 00 	sts	0x00FB, r1	; 0x8000fb <__TEXT_REGION_LENGTH__+0x7fc0fb>
     422:	08 95       	ret
     424:	03 97       	sbiw	r24, 0x03	; 3
     426:	02 97       	sbiw	r24, 0x02	; 2
     428:	80 f4       	brcc	.+32     	; 0x44a <clearChar1+0x3e>
     42a:	10 92 ed 00 	sts	0x00ED, r1	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
     42e:	10 92 ee 00 	sts	0x00EE, r1	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
     432:	10 92 f2 00 	sts	0x00F2, r1	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7fc0f2>
     436:	10 92 f3 00 	sts	0x00F3, r1	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7fc0f3>
     43a:	10 92 f7 00 	sts	0x00F7, r1	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7fc0f7>
     43e:	10 92 f8 00 	sts	0x00F8, r1	; 0x8000f8 <__TEXT_REGION_LENGTH__+0x7fc0f8>
     442:	10 92 fc 00 	sts	0x00FC, r1	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7fc0fc>
     446:	10 92 fd 00 	sts	0x00FD, r1	; 0x8000fd <__TEXT_REGION_LENGTH__+0x7fc0fd>
     44a:	08 95       	ret

0000044c <printAt>:
     44c:	8f 92       	push	r8
     44e:	9f 92       	push	r9
     450:	af 92       	push	r10
     452:	bf 92       	push	r11
     454:	cf 92       	push	r12
     456:	df 92       	push	r13
     458:	ef 92       	push	r14
     45a:	ff 92       	push	r15
     45c:	cf 93       	push	r28
     45e:	df 93       	push	r29
     460:	4b 01       	movw	r8, r22
     462:	5c 01       	movw	r10, r24
     464:	ea 01       	movw	r28, r20
     466:	ca 01       	movw	r24, r20
     468:	0e 94 06 02 	call	0x40c	; 0x40c <clearChar1>
     46c:	c5 01       	movw	r24, r10
     46e:	b4 01       	movw	r22, r8
     470:	24 e6       	ldi	r18, 0x64	; 100
     472:	30 e0       	ldi	r19, 0x00	; 0
     474:	40 e0       	ldi	r20, 0x00	; 0
     476:	50 e0       	ldi	r21, 0x00	; 0
     478:	0e 94 b4 11 	call	0x2368	; 0x2368 <__divmodsi4>
     47c:	0f 2e       	mov	r0, r31
     47e:	fa e0       	ldi	r31, 0x0A	; 10
     480:	cf 2e       	mov	r12, r31
     482:	d1 2c       	mov	r13, r1
     484:	e1 2c       	mov	r14, r1
     486:	f1 2c       	mov	r15, r1
     488:	f0 2d       	mov	r31, r0
     48a:	a7 01       	movw	r20, r14
     48c:	96 01       	movw	r18, r12
     48e:	0e 94 b4 11 	call	0x2368	; 0x2368 <__divmodsi4>
     492:	be 01       	movw	r22, r28
     494:	80 e3       	ldi	r24, 0x30	; 48
     496:	82 0f       	add	r24, r18
     498:	0e 94 40 01 	call	0x280	; 0x280 <writeChar>
     49c:	21 96       	adiw	r28, 0x01	; 1
     49e:	c5 01       	movw	r24, r10
     4a0:	b4 01       	movw	r22, r8
     4a2:	a7 01       	movw	r20, r14
     4a4:	96 01       	movw	r18, r12
     4a6:	0e 94 b4 11 	call	0x2368	; 0x2368 <__divmodsi4>
     4aa:	86 2f       	mov	r24, r22
     4ac:	be 01       	movw	r22, r28
     4ae:	80 5d       	subi	r24, 0xD0	; 208
     4b0:	0e 94 40 01 	call	0x280	; 0x280 <writeChar>
     4b4:	df 91       	pop	r29
     4b6:	cf 91       	pop	r28
     4b8:	ff 90       	pop	r15
     4ba:	ef 90       	pop	r14
     4bc:	df 90       	pop	r13
     4be:	cf 90       	pop	r12
     4c0:	bf 90       	pop	r11
     4c2:	af 90       	pop	r10
     4c4:	9f 90       	pop	r9
     4c6:	8f 90       	pop	r8
     4c8:	08 95       	ret

000004ca <updateGUI>:

void updateGUI(GUI *self){
     4ca:	cf 93       	push	r28
     4cc:	df 93       	push	r29
     4ce:	ec 01       	movw	r28, r24
	if (self->frequency < 0)
     4d0:	8c 81       	ldd	r24, Y+4	; 0x04
     4d2:	9d 81       	ldd	r25, Y+5	; 0x05
     4d4:	ae 81       	ldd	r26, Y+6	; 0x06
     4d6:	bf 81       	ldd	r27, Y+7	; 0x07
     4d8:	bb 23       	and	r27, r27
     4da:	24 f4       	brge	.+8      	; 0x4e4 <updateGUI+0x1a>
		self->frequency = 0;
     4dc:	1c 82       	std	Y+4, r1	; 0x04
     4de:	1d 82       	std	Y+5, r1	; 0x05
     4e0:	1e 82       	std	Y+6, r1	; 0x06
     4e2:	1f 82       	std	Y+7, r1	; 0x07
	if (self->frequency > 99)
     4e4:	8c 81       	ldd	r24, Y+4	; 0x04
     4e6:	9d 81       	ldd	r25, Y+5	; 0x05
     4e8:	ae 81       	ldd	r26, Y+6	; 0x06
     4ea:	bf 81       	ldd	r27, Y+7	; 0x07
     4ec:	84 36       	cpi	r24, 0x64	; 100
     4ee:	91 05       	cpc	r25, r1
     4f0:	a1 05       	cpc	r26, r1
     4f2:	b1 05       	cpc	r27, r1
     4f4:	44 f0       	brlt	.+16     	; 0x506 <__stack+0x7>
		self->frequency = 99;
     4f6:	83 e6       	ldi	r24, 0x63	; 99
     4f8:	90 e0       	ldi	r25, 0x00	; 0
     4fa:	a0 e0       	ldi	r26, 0x00	; 0
     4fc:	b0 e0       	ldi	r27, 0x00	; 0
     4fe:	8c 83       	std	Y+4, r24	; 0x04
     500:	9d 83       	std	Y+5, r25	; 0x05
     502:	ae 83       	std	Y+6, r26	; 0x06
     504:	bf 83       	std	Y+7, r27	; 0x07
		
	clearChar1(self->side);
     506:	88 85       	ldd	r24, Y+8	; 0x08
     508:	99 85       	ldd	r25, Y+9	; 0x09
     50a:	0e 94 06 02 	call	0x40c	; 0x40c <clearChar1>
	printAt(self->frequency, self->side);
     50e:	48 85       	ldd	r20, Y+8	; 0x08
     510:	59 85       	ldd	r21, Y+9	; 0x09
     512:	6c 81       	ldd	r22, Y+4	; 0x04
     514:	7d 81       	ldd	r23, Y+5	; 0x05
     516:	8e 81       	ldd	r24, Y+6	; 0x06
     518:	9f 81       	ldd	r25, Y+7	; 0x07
     51a:	0e 94 26 02 	call	0x44c	; 0x44c <printAt>
}
     51e:	df 91       	pop	r29
     520:	cf 91       	pop	r28
     522:	08 95       	ret

00000524 <start>:

void start(GUI *self)
{
     524:	cf 93       	push	r28
     526:	df 93       	push	r29
     528:	ec 01       	movw	r28, r24
	updateGUI(self);
     52a:	0e 94 65 02 	call	0x4ca	; 0x4ca <updateGUI>
	outputPulse(self->pg1);
     52e:	8e 85       	ldd	r24, Y+14	; 0x0e
     530:	9f 85       	ldd	r25, Y+15	; 0x0f
     532:	0e 94 37 03 	call	0x66e	; 0x66e <outputPulse>
	outputPulse(self->pg2);
     536:	88 89       	ldd	r24, Y+16	; 0x10
     538:	99 89       	ldd	r25, Y+17	; 0x11
     53a:	0e 94 37 03 	call	0x66e	; 0x66e <outputPulse>
	//ASYNC(self->pg1, outputPulse, 0);
	//ASYNC(self->pg2, outputPulse, 0);
	
	
}
     53e:	df 91       	pop	r29
     540:	cf 91       	pop	r28
     542:	08 95       	ret

00000544 <main>:
#include "output.h"
#include "pulseGen.h"
#include "General.h"


int main(void){
     544:	0f 93       	push	r16
     546:	1f 93       	push	r17
     548:	cf 93       	push	r28
     54a:	df 93       	push	r29
     54c:	cd b7       	in	r28, 0x3d	; 61
     54e:	de b7       	in	r29, 0x3e	; 62
     550:	ea 97       	sbiw	r28, 0x3a	; 58
     552:	0f b6       	in	r0, 0x3f	; 63
     554:	f8 94       	cli
     556:	de bf       	out	0x3e, r29	; 62
     558:	0f be       	out	0x3f, r0	; 63
     55a:	cd bf       	out	0x3d, r28	; 61
	
PORTB = (1<<PB7 | 1<<PB6 | 1<<PB4 );																			//7down, 6up, 4push, 3
     55c:	80 ed       	ldi	r24, 0xD0	; 208
     55e:	85 b9       	out	0x05, r24	; 5
PORTE = (1<<PE3 | 1<<PE2);																						//2left 3right
     560:	8c e0       	ldi	r24, 0x0C	; 12
     562:	8e b9       	out	0x0e, r24	; 14
PCMSK1 = (1<<PCINT15)|(1<<PCINT14)|(1<<PCINT13)|(1<<PCINT12)|(1<<PCINT11)|(1<<PCINT10)|(1<<PCINT9)|(1<<PCINT8); //carpet bombing with interrupts
     564:	8f ef       	ldi	r24, 0xFF	; 255
     566:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <__TEXT_REGION_LENGTH__+0x7fc06c>
PCMSK0 =(1<<PCINT7)|(1<<PCINT6)|(1<<PCINT5)|(1<<PCINT4)|(1<<PCINT3)|(1<<PCINT2)|(1<<PCINT1)|(1<<PCINT0);
     56a:	80 93 6b 00 	sts	0x006B, r24	; 0x80006b <__TEXT_REGION_LENGTH__+0x7fc06b>
EIMSK |= (1 << PCIE1) | (1 << PCIE0);
     56e:	8d b3       	in	r24, 0x1d	; 29
     570:	80 6c       	ori	r24, 0xC0	; 192
     572:	8d bb       	out	0x1d, r24	; 29
PORTE |= (0 << PE4) | (0 << PE6);
     574:	8e b1       	in	r24, 0x0e	; 14
     576:	8e b9       	out	0x0e, r24	; 14
DDRE |= (1 << DDE4) | (1 << DDE6);
     578:	8d b1       	in	r24, 0x0d	; 13
     57a:	80 65       	ori	r24, 0x50	; 80
     57c:	8d b9       	out	0x0d, r24	; 13


output op = initOutput(0);				//initialize output with state 0
pulseGen pg1 = initpulseGen(0, 1, &op);
     57e:	2e e0       	ldi	r18, 0x0E	; 14
     580:	ea e7       	ldi	r30, 0x7A	; 122
     582:	f1 e0       	ldi	r31, 0x01	; 1
     584:	ce 01       	movw	r24, r28
     586:	01 96       	adiw	r24, 0x01	; 1
     588:	dc 01       	movw	r26, r24
     58a:	01 90       	ld	r0, Z+
     58c:	0d 92       	st	X+, r0
     58e:	2a 95       	dec	r18
     590:	e1 f7       	brne	.-8      	; 0x58a <main+0x46>
pulseGen pg2 = initpulseGen(1, 4, &op);
     592:	2e e0       	ldi	r18, 0x0E	; 14
     594:	e8 e8       	ldi	r30, 0x88	; 136
     596:	f1 e0       	ldi	r31, 0x01	; 1
     598:	de 01       	movw	r26, r28
     59a:	1f 96       	adiw	r26, 0x0f	; 15
     59c:	01 90       	ld	r0, Z+
     59e:	0d 92       	st	X+, r0
     5a0:	2a 95       	dec	r18
     5a2:	e1 f7       	brne	.-8      	; 0x59c <main+0x58>
GUI	graphics = initGUI(&pg1, &pg2);
     5a4:	1e 8e       	std	Y+30, r1	; 0x1e
     5a6:	1d 8e       	std	Y+29, r1	; 0x1d
     5a8:	18 a2       	std	Y+32, r1	; 0x20
     5aa:	1f 8e       	std	Y+31, r1	; 0x1f
     5ac:	41 e0       	ldi	r20, 0x01	; 1
     5ae:	50 e0       	ldi	r21, 0x00	; 0
     5b0:	60 e0       	ldi	r22, 0x00	; 0
     5b2:	70 e0       	ldi	r23, 0x00	; 0
     5b4:	49 a3       	std	Y+33, r20	; 0x21
     5b6:	5a a3       	std	Y+34, r21	; 0x22
     5b8:	6b a3       	std	Y+35, r22	; 0x23
     5ba:	7c a3       	std	Y+36, r23	; 0x24
     5bc:	1e a2       	std	Y+38, r1	; 0x26
     5be:	1d a2       	std	Y+37, r1	; 0x25
     5c0:	18 a6       	std	Y+40, r1	; 0x28
     5c2:	1f a2       	std	Y+39, r1	; 0x27
     5c4:	1a a6       	std	Y+42, r1	; 0x2a
     5c6:	19 a6       	std	Y+41, r1	; 0x29
     5c8:	9c a7       	std	Y+44, r25	; 0x2c
     5ca:	8b a7       	std	Y+43, r24	; 0x2b
     5cc:	9e 01       	movw	r18, r28
     5ce:	21 5f       	subi	r18, 0xF1	; 241
     5d0:	3f 4f       	sbci	r19, 0xFF	; 255
     5d2:	3e a7       	std	Y+46, r19	; 0x2e
     5d4:	2d a7       	std	Y+45, r18	; 0x2d
General Gnrl = initGeneral(&pg1, &pg2, &graphics);
     5d6:	18 aa       	std	Y+48, r1	; 0x30
     5d8:	1f a6       	std	Y+47, r1	; 0x2f
     5da:	1a aa       	std	Y+50, r1	; 0x32
     5dc:	19 aa       	std	Y+49, r1	; 0x31
     5de:	9c ab       	std	Y+52, r25	; 0x34
     5e0:	8b ab       	std	Y+51, r24	; 0x33
     5e2:	3e ab       	std	Y+54, r19	; 0x36
     5e4:	2d ab       	std	Y+53, r18	; 0x35
     5e6:	8e 01       	movw	r16, r28
     5e8:	03 5e       	subi	r16, 0xE3	; 227
     5ea:	1f 4f       	sbci	r17, 0xFF	; 255
     5ec:	18 af       	std	Y+56, r17	; 0x38
     5ee:	0f ab       	std	Y+55, r16	; 0x37
     5f0:	9a af       	std	Y+58, r25	; 0x3a
     5f2:	89 af       	std	Y+57, r24	; 0x39

LCD_Init();
     5f4:	0e 94 2e 01 	call	0x25c	; 0x25c <LCD_Init>

INSTALL(&Gnrl, LRBuffer, IRQ_PCINT0);
     5f8:	41 e0       	ldi	r20, 0x01	; 1
     5fa:	69 e0       	ldi	r22, 0x09	; 9
     5fc:	71 e0       	ldi	r23, 0x01	; 1
     5fe:	ce 01       	movw	r24, r28
     600:	8f 96       	adiw	r24, 0x2f	; 47
     602:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <install>
INSTALL(&Gnrl, UpDownPushBuffer, IRQ_PCINT1);
     606:	42 e0       	ldi	r20, 0x02	; 2
     608:	6d e4       	ldi	r22, 0x4D	; 77
     60a:	70 e0       	ldi	r23, 0x00	; 0
     60c:	ce 01       	movw	r24, r28
     60e:	8f 96       	adiw	r24, 0x2f	; 47
     610:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <install>
return TINYTIMBER(&graphics, start, 0);
     614:	40 e0       	ldi	r20, 0x00	; 0
     616:	50 e0       	ldi	r21, 0x00	; 0
     618:	62 e9       	ldi	r22, 0x92	; 146
     61a:	72 e0       	ldi	r23, 0x02	; 2
     61c:	c8 01       	movw	r24, r16
     61e:	0e 94 14 10 	call	0x2028	; 0x2028 <tinytimber>
     622:	ea 96       	adiw	r28, 0x3a	; 58
     624:	0f b6       	in	r0, 0x3f	; 63
     626:	f8 94       	cli
     628:	de bf       	out	0x3e, r29	; 62
     62a:	0f be       	out	0x3f, r0	; 63
     62c:	cd bf       	out	0x3d, r28	; 61
     62e:	df 91       	pop	r29
     630:	cf 91       	pop	r28
     632:	1f 91       	pop	r17
     634:	0f 91       	pop	r16
     636:	08 95       	ret

00000638 <pinPulse>:

void pinPulse(output *self, int x)
{
	// Look over
	
	if (x == 0)
     638:	61 15       	cp	r22, r1
     63a:	71 05       	cpc	r23, r1
     63c:	21 f4       	brne	.+8      	; 0x646 <pinPulse+0xe>
	{
		PORTE ^= (1 << 4);
     63e:	9e b1       	in	r25, 0x0e	; 14
     640:	80 e1       	ldi	r24, 0x10	; 16
     642:	89 27       	eor	r24, r25
     644:	8e b9       	out	0x0e, r24	; 14
	}
	if (x == 1)
     646:	61 30       	cpi	r22, 0x01	; 1
     648:	71 05       	cpc	r23, r1
     64a:	21 f4       	brne	.+8      	; 0x654 <pinPulse+0x1c>
	{
		PORTE ^= (1 << 6);
     64c:	9e b1       	in	r25, 0x0e	; 14
     64e:	80 e4       	ldi	r24, 0x40	; 64
     650:	89 27       	eor	r24, r25
     652:	8e b9       	out	0x0e, r24	; 14
     654:	08 95       	ret

00000656 <cutPulse>:

}


void cutPulse(output *self, int x){
	if (x == 0){
     656:	61 15       	cp	r22, r1
     658:	71 05       	cpc	r23, r1
     65a:	19 f4       	brne	.+6      	; 0x662 <cutPulse+0xc>
		PORTE |= ( 0<< 4);
     65c:	8e b1       	in	r24, 0x0e	; 14
     65e:	8e b9       	out	0x0e, r24	; 14
     660:	08 95       	ret

		
	}
	else if (x == 1){
     662:	61 30       	cpi	r22, 0x01	; 1
     664:	71 05       	cpc	r23, r1
     666:	11 f4       	brne	.+4      	; 0x66c <cutPulse+0x16>
		PORTE |= (0 << 6);
     668:	8e b1       	in	r24, 0x0e	; 14
     66a:	8e b9       	out	0x0e, r24	; 14
     66c:	08 95       	ret

0000066e <outputPulse>:
	else if (self->pulseCut ==1){
		self->pulseCut =0;
	}
}

void  outputPulse(pulseGen *self){
     66e:	cf 92       	push	r12
     670:	df 92       	push	r13
     672:	ef 92       	push	r14
     674:	ff 92       	push	r15
     676:	0f 93       	push	r16
     678:	1f 93       	push	r17
     67a:	cf 93       	push	r28
     67c:	df 93       	push	r29
     67e:	ec 01       	movw	r28, r24
	
	if (self->pulseCut == 0)
     680:	8a 85       	ldd	r24, Y+10	; 0x0a
     682:	9b 85       	ldd	r25, Y+11	; 0x0b
     684:	00 97       	sbiw	r24, 0x00	; 0
     686:	39 f4       	brne	.+14     	; 0x696 <outputPulse+0x28>
		pinPulse(self->op, self->target);				 //output frequency to oscilloscope
     688:	6c 81       	ldd	r22, Y+4	; 0x04
     68a:	7d 81       	ldd	r23, Y+5	; 0x05
     68c:	8c 85       	ldd	r24, Y+12	; 0x0c
     68e:	9d 85       	ldd	r25, Y+13	; 0x0d
     690:	0e 94 1c 03 	call	0x638	; 0x638 <pinPulse>
     694:	08 c0       	rjmp	.+16     	; 0x6a6 <outputPulse+0x38>
	else if (self->pulseCut == 1)
     696:	01 97       	sbiw	r24, 0x01	; 1
     698:	31 f4       	brne	.+12     	; 0x6a6 <outputPulse+0x38>
		cutPulse(self->op, self->target);
     69a:	6c 81       	ldd	r22, Y+4	; 0x04
     69c:	7d 81       	ldd	r23, Y+5	; 0x05
     69e:	8c 85       	ldd	r24, Y+12	; 0x0c
     6a0:	9d 85       	ldd	r25, Y+13	; 0x0d
     6a2:	0e 94 2b 03 	call	0x656	; 0x656 <cutPulse>
	AFTER(((SEC(1)) /(self->frequency) /2), self, outputPulse, 0); //waits for  frequency period before repeating output
     6a6:	2e 81       	ldd	r18, Y+6	; 0x06
     6a8:	3f 81       	ldd	r19, Y+7	; 0x07
     6aa:	03 2e       	mov	r0, r19
     6ac:	00 0c       	add	r0, r0
     6ae:	44 0b       	sbc	r20, r20
     6b0:	55 0b       	sbc	r21, r21
     6b2:	69 e0       	ldi	r22, 0x09	; 9
     6b4:	7d e3       	ldi	r23, 0x3D	; 61
     6b6:	80 e0       	ldi	r24, 0x00	; 0
     6b8:	90 e0       	ldi	r25, 0x00	; 0
     6ba:	0e 94 b4 11 	call	0x2368	; 0x2368 <__divmodsi4>
     6be:	ca 01       	movw	r24, r20
     6c0:	b9 01       	movw	r22, r18
     6c2:	c1 2c       	mov	r12, r1
     6c4:	d1 2c       	mov	r13, r1
     6c6:	0f 2e       	mov	r0, r31
     6c8:	f7 e3       	ldi	r31, 0x37	; 55
     6ca:	ef 2e       	mov	r14, r31
     6cc:	f3 e0       	ldi	r31, 0x03	; 3
     6ce:	ff 2e       	mov	r15, r31
     6d0:	f0 2d       	mov	r31, r0
     6d2:	8e 01       	movw	r16, r28
     6d4:	20 e0       	ldi	r18, 0x00	; 0
     6d6:	30 e0       	ldi	r19, 0x00	; 0
     6d8:	a9 01       	movw	r20, r18
     6da:	0e 94 16 0e 	call	0x1c2c	; 0x1c2c <async>
}
     6de:	df 91       	pop	r29
     6e0:	cf 91       	pop	r28
     6e2:	1f 91       	pop	r17
     6e4:	0f 91       	pop	r16
     6e6:	ff 90       	pop	r15
     6e8:	ef 90       	pop	r14
     6ea:	df 90       	pop	r13
     6ec:	cf 90       	pop	r12
     6ee:	08 95       	ret

000006f0 <plusPulse>:
int j = 0;
int k = 1;


void  plusPulse(pulseGen *self){
	i++;
     6f0:	20 91 98 01 	lds	r18, 0x0198	; 0x800198 <i>
     6f4:	30 91 99 01 	lds	r19, 0x0199	; 0x800199 <i+0x1>
     6f8:	2f 5f       	subi	r18, 0xFF	; 255
     6fa:	3f 4f       	sbci	r19, 0xFF	; 255
     6fc:	30 93 99 01 	sts	0x0199, r19	; 0x800199 <i+0x1>
     700:	20 93 98 01 	sts	0x0198, r18	; 0x800198 <i>
	k++;
     704:	20 91 70 01 	lds	r18, 0x0170	; 0x800170 <k>
     708:	30 91 71 01 	lds	r19, 0x0171	; 0x800171 <k+0x1>
     70c:	2f 5f       	subi	r18, 0xFF	; 255
     70e:	3f 4f       	sbci	r19, 0xFF	; 255
     710:	30 93 71 01 	sts	0x0171, r19	; 0x800171 <k+0x1>
     714:	20 93 70 01 	sts	0x0170, r18	; 0x800170 <k>
	self->frequency = self->frequency +1; 
     718:	fc 01       	movw	r30, r24
     71a:	26 81       	ldd	r18, Z+6	; 0x06
     71c:	37 81       	ldd	r19, Z+7	; 0x07
     71e:	2f 5f       	subi	r18, 0xFF	; 255
     720:	3f 4f       	sbci	r19, 0xFF	; 255
     722:	37 83       	std	Z+7, r19	; 0x07
     724:	26 83       	std	Z+6, r18	; 0x06
     726:	08 95       	ret

00000728 <minusPulse>:
}

void  minusPulse(pulseGen *self){
	j++;
     728:	20 91 96 01 	lds	r18, 0x0196	; 0x800196 <__data_end>
     72c:	30 91 97 01 	lds	r19, 0x0197	; 0x800197 <__data_end+0x1>
     730:	2f 5f       	subi	r18, 0xFF	; 255
     732:	3f 4f       	sbci	r19, 0xFF	; 255
     734:	30 93 97 01 	sts	0x0197, r19	; 0x800197 <__data_end+0x1>
     738:	20 93 96 01 	sts	0x0196, r18	; 0x800196 <__data_end>
	k--;
     73c:	20 91 70 01 	lds	r18, 0x0170	; 0x800170 <k>
     740:	30 91 71 01 	lds	r19, 0x0171	; 0x800171 <k+0x1>
     744:	21 50       	subi	r18, 0x01	; 1
     746:	31 09       	sbc	r19, r1
     748:	30 93 71 01 	sts	0x0171, r19	; 0x800171 <k+0x1>
     74c:	20 93 70 01 	sts	0x0170, r18	; 0x800170 <k>
	if (self->frequency > 1){
     750:	fc 01       	movw	r30, r24
     752:	26 81       	ldd	r18, Z+6	; 0x06
     754:	37 81       	ldd	r19, Z+7	; 0x07
     756:	22 30       	cpi	r18, 0x02	; 2
     758:	31 05       	cpc	r19, r1
     75a:	24 f0       	brlt	.+8      	; 0x764 <minusPulse+0x3c>
		self->frequency = self->frequency -1;
     75c:	21 50       	subi	r18, 0x01	; 1
     75e:	31 09       	sbc	r19, r1
     760:	37 83       	std	Z+7, r19	; 0x07
     762:	26 83       	std	Z+6, r18	; 0x06
     764:	08 95       	ret

00000766 <toZero>:
	}
}

void  toZero( pulseGen *self){
	if (self->pulseCut == 0){
     766:	fc 01       	movw	r30, r24
     768:	22 85       	ldd	r18, Z+10	; 0x0a
     76a:	33 85       	ldd	r19, Z+11	; 0x0b
     76c:	21 15       	cp	r18, r1
     76e:	31 05       	cpc	r19, r1
     770:	29 f4       	brne	.+10     	; 0x77c <toZero+0x16>
		self->pulseCut = 1;
     772:	21 e0       	ldi	r18, 0x01	; 1
     774:	30 e0       	ldi	r19, 0x00	; 0
     776:	33 87       	std	Z+11, r19	; 0x0b
     778:	22 87       	std	Z+10, r18	; 0x0a
     77a:	08 95       	ret
	}
	else if (self->pulseCut ==1){
     77c:	21 30       	cpi	r18, 0x01	; 1
     77e:	31 05       	cpc	r19, r1
     780:	19 f4       	brne	.+6      	; 0x788 <toZero+0x22>
		self->pulseCut =0;
     782:	fc 01       	movw	r30, r24
     784:	13 86       	std	Z+11, r1	; 0x0b
     786:	12 86       	std	Z+10, r1	; 0x0a
     788:	08 95       	ret

0000078a <initialize>:
    Time now;
    DISABLE(status);
    TIMERGET(now);
    ENABLE(status);
    return now - (status ? current->msg->baseline : timestamp);
}
     78a:	cf 93       	push	r28
     78c:	df 93       	push	r29
     78e:	00 d0       	rcall	.+0      	; 0x790 <initialize+0x6>
     790:	00 d0       	rcall	.+0      	; 0x792 <initialize+0x8>
     792:	cd b7       	in	r28, 0x3d	; 61
     794:	de b7       	in	r29, 0x3e	; 62
     796:	80 e0       	ldi	r24, 0x00	; 0
     798:	90 e0       	ldi	r25, 0x00	; 0
     79a:	18 c0       	rjmp	.+48     	; 0x7cc <initialize+0x42>
     79c:	ac 01       	movw	r20, r24
     79e:	4f 5f       	subi	r20, 0xFF	; 255
     7a0:	5f 4f       	sbci	r21, 0xFF	; 255
     7a2:	9a 01       	movw	r18, r20
     7a4:	22 95       	swap	r18
     7a6:	32 95       	swap	r19
     7a8:	30 7f       	andi	r19, 0xF0	; 240
     7aa:	32 27       	eor	r19, r18
     7ac:	20 7f       	andi	r18, 0xF0	; 240
     7ae:	32 27       	eor	r19, r18
     7b0:	23 58       	subi	r18, 0x83	; 131
     7b2:	3d 4f       	sbci	r19, 0xFD	; 253
     7b4:	82 95       	swap	r24
     7b6:	92 95       	swap	r25
     7b8:	90 7f       	andi	r25, 0xF0	; 240
     7ba:	98 27       	eor	r25, r24
     7bc:	80 7f       	andi	r24, 0xF0	; 240
     7be:	98 27       	eor	r25, r24
     7c0:	fc 01       	movw	r30, r24
     7c2:	e3 58       	subi	r30, 0x83	; 131
     7c4:	fd 4f       	sbci	r31, 0xFD	; 253
     7c6:	31 83       	std	Z+1, r19	; 0x01
     7c8:	20 83       	st	Z, r18
     7ca:	ca 01       	movw	r24, r20
     7cc:	8e 30       	cpi	r24, 0x0E	; 14
     7ce:	91 05       	cpc	r25, r1
     7d0:	2c f3       	brlt	.-54     	; 0x79c <initialize+0x12>
     7d2:	10 92 5e 03 	sts	0x035E, r1	; 0x80035e <messages+0xe1>
     7d6:	10 92 5d 03 	sts	0x035D, r1	; 0x80035d <messages+0xe0>
     7da:	80 e0       	ldi	r24, 0x00	; 0
     7dc:	90 e0       	ldi	r25, 0x00	; 0
     7de:	15 c0       	rjmp	.+42     	; 0x80a <initialize+0x80>
     7e0:	ac 01       	movw	r20, r24
     7e2:	4f 5f       	subi	r20, 0xFF	; 255
     7e4:	5f 4f       	sbci	r21, 0xFF	; 255
     7e6:	6d e1       	ldi	r22, 0x1D	; 29
     7e8:	64 9f       	mul	r22, r20
     7ea:	90 01       	movw	r18, r0
     7ec:	65 9f       	mul	r22, r21
     7ee:	30 0d       	add	r19, r0
     7f0:	11 24       	eor	r1, r1
     7f2:	28 53       	subi	r18, 0x38	; 56
     7f4:	3e 4f       	sbci	r19, 0xFE	; 254
     7f6:	68 9f       	mul	r22, r24
     7f8:	f0 01       	movw	r30, r0
     7fa:	69 9f       	mul	r22, r25
     7fc:	f0 0d       	add	r31, r0
     7fe:	11 24       	eor	r1, r1
     800:	e8 53       	subi	r30, 0x38	; 56
     802:	fe 4f       	sbci	r31, 0xFE	; 254
     804:	31 83       	std	Z+1, r19	; 0x01
     806:	20 83       	st	Z, r18
     808:	ca 01       	movw	r24, r20
     80a:	83 30       	cpi	r24, 0x03	; 3
     80c:	91 05       	cpc	r25, r1
     80e:	44 f3       	brlt	.-48     	; 0x7e0 <initialize+0x56>
     810:	10 92 20 02 	sts	0x0220, r1	; 0x800220 <threads+0x58>
     814:	10 92 1f 02 	sts	0x021F, r1	; 0x80021f <threads+0x57>
     818:	1a 82       	std	Y+2, r1	; 0x02
     81a:	19 82       	std	Y+1, r1	; 0x01
     81c:	32 c0       	rjmp	.+100    	; 0x882 <initialize+0xf8>
     81e:	2d e1       	ldi	r18, 0x1D	; 29
     820:	49 81       	ldd	r20, Y+1	; 0x01
     822:	5a 81       	ldd	r21, Y+2	; 0x02
     824:	24 9f       	mul	r18, r20
     826:	c0 01       	movw	r24, r0
     828:	25 9f       	mul	r18, r21
     82a:	90 0d       	add	r25, r0
     82c:	11 24       	eor	r1, r1
     82e:	fc 01       	movw	r30, r24
     830:	e2 53       	subi	r30, 0x32	; 50
     832:	fe 4f       	sbci	r31, 0xFE	; 254
     834:	fc 83       	std	Y+4, r31	; 0x04
     836:	eb 83       	std	Y+3, r30	; 0x03
     838:	cf 01       	movw	r24, r30
     83a:	0e 94 f5 11 	call	0x23ea	; 0x23ea <setjmp>
     83e:	20 e6       	ldi	r18, 0x60	; 96
     840:	49 81       	ldd	r20, Y+1	; 0x01
     842:	5a 81       	ldd	r21, Y+2	; 0x02
     844:	24 9f       	mul	r18, r20
     846:	c0 01       	movw	r24, r0
     848:	25 9f       	mul	r18, r21
     84a:	90 0d       	add	r25, r0
     84c:	11 24       	eor	r1, r1
     84e:	87 53       	subi	r24, 0x37	; 55
     850:	9c 4f       	sbci	r25, 0xFC	; 252
     852:	eb 81       	ldd	r30, Y+3	; 0x03
     854:	fc 81       	ldd	r31, Y+4	; 0x04
     856:	91 8b       	std	Z+17, r25	; 0x11
     858:	80 8b       	std	Z+16, r24	; 0x10
     85a:	93 8b       	std	Z+19, r25	; 0x13
     85c:	82 8b       	std	Z+18, r24	; 0x12
     85e:	81 ea       	ldi	r24, 0xA1	; 161
     860:	9f e0       	ldi	r25, 0x0F	; 15
     862:	96 8b       	std	Z+22, r25	; 0x16
     864:	85 8b       	std	Z+21, r24	; 0x15
     866:	8d e1       	ldi	r24, 0x1D	; 29
     868:	84 9f       	mul	r24, r20
     86a:	f0 01       	movw	r30, r0
     86c:	85 9f       	mul	r24, r21
     86e:	f0 0d       	add	r31, r0
     870:	11 24       	eor	r1, r1
     872:	e8 53       	subi	r30, 0x38	; 56
     874:	fe 4f       	sbci	r31, 0xFE	; 254
     876:	15 82       	std	Z+5, r1	; 0x05
     878:	14 82       	std	Z+4, r1	; 0x04
     87a:	4f 5f       	subi	r20, 0xFF	; 255
     87c:	5f 4f       	sbci	r21, 0xFF	; 255
     87e:	5a 83       	std	Y+2, r21	; 0x02
     880:	49 83       	std	Y+1, r20	; 0x01
     882:	29 81       	ldd	r18, Y+1	; 0x01
     884:	3a 81       	ldd	r19, Y+2	; 0x02
     886:	24 30       	cpi	r18, 0x04	; 4
     888:	31 05       	cpc	r19, r1
     88a:	4c f2       	brlt	.-110    	; 0x81e <initialize+0x94>
     88c:	e0 e6       	ldi	r30, 0x60	; 96
     88e:	f2 e0       	ldi	r31, 0x02	; 2
     890:	11 82       	std	Z+1, r1	; 0x01
     892:	10 82       	st	Z, r1
     894:	15 82       	std	Z+5, r1	; 0x05
     896:	14 82       	std	Z+4, r1	; 0x04
     898:	13 82       	std	Z+3, r1	; 0x03
     89a:	12 82       	std	Z+2, r1	; 0x02
     89c:	e1 e6       	ldi	r30, 0x61	; 97
     89e:	f0 e0       	ldi	r31, 0x00	; 0
     8a0:	80 e8       	ldi	r24, 0x80	; 128
     8a2:	80 83       	st	Z, r24
     8a4:	10 82       	st	Z, r1
     8a6:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     8aa:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     8ae:	84 e0       	ldi	r24, 0x04	; 4
     8b0:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7fc081>
     8b4:	81 e0       	ldi	r24, 0x01	; 1
     8b6:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
     8ba:	0f 90       	pop	r0
     8bc:	0f 90       	pop	r0
     8be:	0f 90       	pop	r0
     8c0:	0f 90       	pop	r0
     8c2:	df 91       	pop	r29
     8c4:	cf 91       	pop	r28
     8c6:	08 95       	ret

000008c8 <dispatch>:
     8c8:	cf 93       	push	r28
     8ca:	df 93       	push	r29
     8cc:	00 d0       	rcall	.+0      	; 0x8ce <dispatch+0x6>
     8ce:	cd b7       	in	r28, 0x3d	; 61
     8d0:	de b7       	in	r29, 0x3e	; 62
     8d2:	9a 83       	std	Y+2, r25	; 0x02
     8d4:	89 83       	std	Y+1, r24	; 0x01
     8d6:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <current>
     8da:	90 91 73 01 	lds	r25, 0x0173	; 0x800173 <current+0x1>
     8de:	06 96       	adiw	r24, 0x06	; 6
     8e0:	0e 94 f5 11 	call	0x23ea	; 0x23ea <setjmp>
     8e4:	89 2b       	or	r24, r25
     8e6:	59 f4       	brne	.+22     	; 0x8fe <dispatch+0x36>
     8e8:	89 81       	ldd	r24, Y+1	; 0x01
     8ea:	9a 81       	ldd	r25, Y+2	; 0x02
     8ec:	90 93 73 01 	sts	0x0173, r25	; 0x800173 <current+0x1>
     8f0:	80 93 72 01 	sts	0x0172, r24	; 0x800172 <current>
     8f4:	61 e0       	ldi	r22, 0x01	; 1
     8f6:	70 e0       	ldi	r23, 0x00	; 0
     8f8:	06 96       	adiw	r24, 0x06	; 6
     8fa:	0e 94 15 12 	call	0x242a	; 0x242a <longjmp>
     8fe:	0f 90       	pop	r0
     900:	0f 90       	pop	r0
     902:	df 91       	pop	r29
     904:	cf 91       	pop	r28
     906:	08 95       	ret

00000908 <enqueueByDeadline>:
     908:	0f 93       	push	r16
     90a:	1f 93       	push	r17
     90c:	cf 93       	push	r28
     90e:	df 93       	push	r29
     910:	dc 01       	movw	r26, r24
     912:	cb 01       	movw	r24, r22
     914:	eb 01       	movw	r28, r22
     916:	e8 81       	ld	r30, Y
     918:	f9 81       	ldd	r31, Y+1	; 0x01
     91a:	c0 e0       	ldi	r28, 0x00	; 0
     91c:	d0 e0       	ldi	r29, 0x00	; 0
     91e:	04 c0       	rjmp	.+8      	; 0x928 <enqueueByDeadline+0x20>
     920:	ef 01       	movw	r28, r30
     922:	01 90       	ld	r0, Z+
     924:	f0 81       	ld	r31, Z
     926:	e0 2d       	mov	r30, r0
     928:	30 97       	sbiw	r30, 0x00	; 0
     92a:	79 f0       	breq	.+30     	; 0x94a <enqueueByDeadline+0x42>
     92c:	06 81       	ldd	r16, Z+6	; 0x06
     92e:	17 81       	ldd	r17, Z+7	; 0x07
     930:	20 85       	ldd	r18, Z+8	; 0x08
     932:	31 85       	ldd	r19, Z+9	; 0x09
     934:	16 96       	adiw	r26, 0x06	; 6
     936:	4d 91       	ld	r20, X+
     938:	5d 91       	ld	r21, X+
     93a:	6d 91       	ld	r22, X+
     93c:	7c 91       	ld	r23, X
     93e:	19 97       	sbiw	r26, 0x09	; 9
     940:	40 17       	cp	r20, r16
     942:	51 07       	cpc	r21, r17
     944:	62 07       	cpc	r22, r18
     946:	73 07       	cpc	r23, r19
     948:	5c f7       	brge	.-42     	; 0x920 <enqueueByDeadline+0x18>
     94a:	11 96       	adiw	r26, 0x01	; 1
     94c:	fc 93       	st	X, r31
     94e:	ee 93       	st	-X, r30
     950:	20 97       	sbiw	r28, 0x00	; 0
     952:	21 f4       	brne	.+8      	; 0x95c <enqueueByDeadline+0x54>
     954:	fc 01       	movw	r30, r24
     956:	b1 83       	std	Z+1, r27	; 0x01
     958:	a0 83       	st	Z, r26
     95a:	02 c0       	rjmp	.+4      	; 0x960 <enqueueByDeadline+0x58>
     95c:	b9 83       	std	Y+1, r27	; 0x01
     95e:	a8 83       	st	Y, r26
     960:	df 91       	pop	r29
     962:	cf 91       	pop	r28
     964:	1f 91       	pop	r17
     966:	0f 91       	pop	r16
     968:	08 95       	ret

0000096a <enqueueByBaseline>:
     96a:	0f 93       	push	r16
     96c:	1f 93       	push	r17
     96e:	cf 93       	push	r28
     970:	df 93       	push	r29
     972:	dc 01       	movw	r26, r24
     974:	cb 01       	movw	r24, r22
     976:	eb 01       	movw	r28, r22
     978:	e8 81       	ld	r30, Y
     97a:	f9 81       	ldd	r31, Y+1	; 0x01
     97c:	c0 e0       	ldi	r28, 0x00	; 0
     97e:	d0 e0       	ldi	r29, 0x00	; 0
     980:	04 c0       	rjmp	.+8      	; 0x98a <enqueueByBaseline+0x20>
     982:	ef 01       	movw	r28, r30
     984:	01 90       	ld	r0, Z+
     986:	f0 81       	ld	r31, Z
     988:	e0 2d       	mov	r30, r0
     98a:	30 97       	sbiw	r30, 0x00	; 0
     98c:	79 f0       	breq	.+30     	; 0x9ac <enqueueByBaseline+0x42>
     98e:	02 81       	ldd	r16, Z+2	; 0x02
     990:	13 81       	ldd	r17, Z+3	; 0x03
     992:	24 81       	ldd	r18, Z+4	; 0x04
     994:	35 81       	ldd	r19, Z+5	; 0x05
     996:	12 96       	adiw	r26, 0x02	; 2
     998:	4d 91       	ld	r20, X+
     99a:	5d 91       	ld	r21, X+
     99c:	6d 91       	ld	r22, X+
     99e:	7c 91       	ld	r23, X
     9a0:	15 97       	sbiw	r26, 0x05	; 5
     9a2:	40 17       	cp	r20, r16
     9a4:	51 07       	cpc	r21, r17
     9a6:	62 07       	cpc	r22, r18
     9a8:	73 07       	cpc	r23, r19
     9aa:	5c f7       	brge	.-42     	; 0x982 <enqueueByBaseline+0x18>
     9ac:	11 96       	adiw	r26, 0x01	; 1
     9ae:	fc 93       	st	X, r31
     9b0:	ee 93       	st	-X, r30
     9b2:	20 97       	sbiw	r28, 0x00	; 0
     9b4:	21 f4       	brne	.+8      	; 0x9be <enqueueByBaseline+0x54>
     9b6:	fc 01       	movw	r30, r24
     9b8:	b1 83       	std	Z+1, r27	; 0x01
     9ba:	a0 83       	st	Z, r26
     9bc:	02 c0       	rjmp	.+4      	; 0x9c2 <enqueueByBaseline+0x58>
     9be:	b9 83       	std	Y+1, r27	; 0x01
     9c0:	a8 83       	st	Y, r26
     9c2:	df 91       	pop	r29
     9c4:	cf 91       	pop	r28
     9c6:	1f 91       	pop	r17
     9c8:	0f 91       	pop	r16
     9ca:	08 95       	ret

000009cc <dequeue>:
     9cc:	dc 01       	movw	r26, r24
     9ce:	ed 91       	ld	r30, X+
     9d0:	fc 91       	ld	r31, X
     9d2:	11 97       	sbiw	r26, 0x01	; 1
     9d4:	30 97       	sbiw	r30, 0x00	; 0
     9d6:	59 f4       	brne	.+22     	; 0x9ee <dequeue+0x22>
     9d8:	8f ef       	ldi	r24, 0xFF	; 255
     9da:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
     9de:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
     9e2:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
     9e6:	81 e0       	ldi	r24, 0x01	; 1
     9e8:	83 bf       	out	0x33, r24	; 51
     9ea:	88 95       	sleep
     9ec:	fc cf       	rjmp	.-8      	; 0x9e6 <dequeue+0x1a>
     9ee:	20 81       	ld	r18, Z
     9f0:	31 81       	ldd	r19, Z+1	; 0x01
     9f2:	2d 93       	st	X+, r18
     9f4:	3c 93       	st	X, r19
     9f6:	cf 01       	movw	r24, r30
     9f8:	08 95       	ret

000009fa <insert>:
     9fa:	fb 01       	movw	r30, r22
     9fc:	20 81       	ld	r18, Z
     9fe:	31 81       	ldd	r19, Z+1	; 0x01
     a00:	fc 01       	movw	r30, r24
     a02:	31 83       	std	Z+1, r19	; 0x01
     a04:	20 83       	st	Z, r18
     a06:	fb 01       	movw	r30, r22
     a08:	91 83       	std	Z+1, r25	; 0x01
     a0a:	80 83       	st	Z, r24
     a0c:	08 95       	ret

00000a0e <push>:
     a0e:	fb 01       	movw	r30, r22
     a10:	20 81       	ld	r18, Z
     a12:	31 81       	ldd	r19, Z+1	; 0x01
     a14:	fc 01       	movw	r30, r24
     a16:	31 83       	std	Z+1, r19	; 0x01
     a18:	20 83       	st	Z, r18
     a1a:	fb 01       	movw	r30, r22
     a1c:	91 83       	std	Z+1, r25	; 0x01
     a1e:	80 83       	st	Z, r24
     a20:	08 95       	ret

00000a22 <pop>:
     a22:	dc 01       	movw	r26, r24
     a24:	ed 91       	ld	r30, X+
     a26:	fc 91       	ld	r31, X
     a28:	11 97       	sbiw	r26, 0x01	; 1
     a2a:	20 81       	ld	r18, Z
     a2c:	31 81       	ldd	r19, Z+1	; 0x01
     a2e:	2d 93       	st	X+, r18
     a30:	3c 93       	st	X, r19
     a32:	cf 01       	movw	r24, r30
     a34:	08 95       	ret

00000a36 <schedule>:
     a36:	cf 93       	push	r28
     a38:	df 93       	push	r29
     a3a:	e0 91 74 01 	lds	r30, 0x0174	; 0x800174 <activeStack>
     a3e:	f0 91 75 01 	lds	r31, 0x0175	; 0x800175 <activeStack+0x1>
     a42:	c2 81       	ldd	r28, Z+2	; 0x02
     a44:	d3 81       	ldd	r29, Z+3	; 0x03
     a46:	e0 91 a2 01 	lds	r30, 0x01A2	; 0x8001a2 <msgQ>
     a4a:	f0 91 a3 01 	lds	r31, 0x01A3	; 0x8001a3 <msgQ+0x1>
     a4e:	30 97       	sbiw	r30, 0x00	; 0
     a50:	19 f1       	breq	.+70     	; 0xa98 <schedule+0x62>
     a52:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <threadPool>
     a56:	90 91 77 01 	lds	r25, 0x0177	; 0x800177 <threadPool+0x1>
     a5a:	89 2b       	or	r24, r25
     a5c:	e9 f0       	breq	.+58     	; 0xa98 <schedule+0x62>
     a5e:	20 97       	sbiw	r28, 0x00	; 0
     a60:	69 f0       	breq	.+26     	; 0xa7c <schedule+0x46>
     a62:	86 81       	ldd	r24, Z+6	; 0x06
     a64:	97 81       	ldd	r25, Z+7	; 0x07
     a66:	a0 85       	ldd	r26, Z+8	; 0x08
     a68:	b1 85       	ldd	r27, Z+9	; 0x09
     a6a:	4e 81       	ldd	r20, Y+6	; 0x06
     a6c:	5f 81       	ldd	r21, Y+7	; 0x07
     a6e:	68 85       	ldd	r22, Y+8	; 0x08
     a70:	79 85       	ldd	r23, Y+9	; 0x09
     a72:	84 1b       	sub	r24, r20
     a74:	95 0b       	sbc	r25, r21
     a76:	a6 0b       	sbc	r26, r22
     a78:	b7 0b       	sbc	r27, r23
     a7a:	72 f4       	brpl	.+28     	; 0xa98 <schedule+0x62>
     a7c:	86 e7       	ldi	r24, 0x76	; 118
     a7e:	91 e0       	ldi	r25, 0x01	; 1
     a80:	0e 94 11 05 	call	0xa22	; 0xa22 <pop>
     a84:	64 e7       	ldi	r22, 0x74	; 116
     a86:	71 e0       	ldi	r23, 0x01	; 1
     a88:	0e 94 07 05 	call	0xa0e	; 0xa0e <push>
     a8c:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <activeStack>
     a90:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <activeStack+0x1>
     a94:	0e 94 64 04 	call	0x8c8	; 0x8c8 <dispatch>
     a98:	df 91       	pop	r29
     a9a:	cf 91       	pop	r28
     a9c:	08 95       	ret

00000a9e <__vector_1>:
     a9e:	1f 92       	push	r1
     aa0:	0f 92       	push	r0
     aa2:	0f b6       	in	r0, 0x3f	; 63
     aa4:	0f 92       	push	r0
     aa6:	11 24       	eor	r1, r1
     aa8:	0f 93       	push	r16
     aaa:	1f 93       	push	r17
     aac:	2f 93       	push	r18
     aae:	3f 93       	push	r19
     ab0:	4f 93       	push	r20
     ab2:	5f 93       	push	r21
     ab4:	6f 93       	push	r22
     ab6:	7f 93       	push	r23
     ab8:	8f 93       	push	r24
     aba:	9f 93       	push	r25
     abc:	af 93       	push	r26
     abe:	bf 93       	push	r27
     ac0:	ef 93       	push	r30
     ac2:	ff 93       	push	r31
     ac4:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <overflows>
     ac8:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <overflows+0x1>
     acc:	ac 01       	movw	r20, r24
     ace:	09 2e       	mov	r0, r25
     ad0:	00 0c       	add	r0, r0
     ad2:	66 0b       	sbc	r22, r22
     ad4:	77 0b       	sbc	r23, r23
     ad6:	9a 01       	movw	r18, r20
     ad8:	11 27       	eor	r17, r17
     ada:	00 27       	eor	r16, r16
     adc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ae0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     ae4:	60 e0       	ldi	r22, 0x00	; 0
     ae6:	70 e0       	ldi	r23, 0x00	; 0
     ae8:	40 2b       	or	r20, r16
     aea:	51 2b       	or	r21, r17
     aec:	62 2b       	or	r22, r18
     aee:	73 2b       	or	r23, r19
     af0:	40 93 9c 01 	sts	0x019C, r20	; 0x80019c <timestamp>
     af4:	50 93 9d 01 	sts	0x019D, r21	; 0x80019d <timestamp+0x1>
     af8:	60 93 9e 01 	sts	0x019E, r22	; 0x80019e <timestamp+0x2>
     afc:	70 93 9f 01 	sts	0x019F, r23	; 0x80019f <timestamp+0x3>
     b00:	b0 9b       	sbis	0x16, 0	; 22
     b02:	1a c0       	rjmp	.+52     	; 0xb38 <__vector_1+0x9a>
     b04:	01 96       	adiw	r24, 0x01	; 1
     b06:	09 2e       	mov	r0, r25
     b08:	00 0c       	add	r0, r0
     b0a:	aa 0b       	sbc	r26, r26
     b0c:	bb 0b       	sbc	r27, r27
     b0e:	bc 01       	movw	r22, r24
     b10:	55 27       	eor	r21, r21
     b12:	44 27       	eor	r20, r20
     b14:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b18:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b1c:	a0 e0       	ldi	r26, 0x00	; 0
     b1e:	b0 e0       	ldi	r27, 0x00	; 0
     b20:	84 2b       	or	r24, r20
     b22:	95 2b       	or	r25, r21
     b24:	a6 2b       	or	r26, r22
     b26:	b7 2b       	or	r27, r23
     b28:	80 93 9c 01 	sts	0x019C, r24	; 0x80019c <timestamp>
     b2c:	90 93 9d 01 	sts	0x019D, r25	; 0x80019d <timestamp+0x1>
     b30:	a0 93 9e 01 	sts	0x019E, r26	; 0x80019e <timestamp+0x2>
     b34:	b0 93 9f 01 	sts	0x019F, r27	; 0x80019f <timestamp+0x3>
     b38:	e0 91 3c 02 	lds	r30, 0x023C	; 0x80023c <mtable>
     b3c:	f0 91 3d 02 	lds	r31, 0x023D	; 0x80023d <mtable+0x1>
     b40:	30 97       	sbiw	r30, 0x00	; 0
     b42:	39 f0       	breq	.+14     	; 0xb52 <__vector_1+0xb4>
     b44:	60 e0       	ldi	r22, 0x00	; 0
     b46:	70 e0       	ldi	r23, 0x00	; 0
     b48:	80 91 a4 01 	lds	r24, 0x01A4	; 0x8001a4 <otable>
     b4c:	90 91 a5 01 	lds	r25, 0x01A5	; 0x8001a5 <otable+0x1>
     b50:	09 95       	icall
     b52:	0e 94 1b 05 	call	0xa36	; 0xa36 <schedule>
     b56:	ff 91       	pop	r31
     b58:	ef 91       	pop	r30
     b5a:	bf 91       	pop	r27
     b5c:	af 91       	pop	r26
     b5e:	9f 91       	pop	r25
     b60:	8f 91       	pop	r24
     b62:	7f 91       	pop	r23
     b64:	6f 91       	pop	r22
     b66:	5f 91       	pop	r21
     b68:	4f 91       	pop	r20
     b6a:	3f 91       	pop	r19
     b6c:	2f 91       	pop	r18
     b6e:	1f 91       	pop	r17
     b70:	0f 91       	pop	r16
     b72:	0f 90       	pop	r0
     b74:	0f be       	out	0x3f, r0	; 63
     b76:	0f 90       	pop	r0
     b78:	1f 90       	pop	r1
     b7a:	18 95       	reti

00000b7c <__vector_2>:
     b7c:	1f 92       	push	r1
     b7e:	0f 92       	push	r0
     b80:	0f b6       	in	r0, 0x3f	; 63
     b82:	0f 92       	push	r0
     b84:	11 24       	eor	r1, r1
     b86:	0f 93       	push	r16
     b88:	1f 93       	push	r17
     b8a:	2f 93       	push	r18
     b8c:	3f 93       	push	r19
     b8e:	4f 93       	push	r20
     b90:	5f 93       	push	r21
     b92:	6f 93       	push	r22
     b94:	7f 93       	push	r23
     b96:	8f 93       	push	r24
     b98:	9f 93       	push	r25
     b9a:	af 93       	push	r26
     b9c:	bf 93       	push	r27
     b9e:	ef 93       	push	r30
     ba0:	ff 93       	push	r31
     ba2:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <overflows>
     ba6:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <overflows+0x1>
     baa:	ac 01       	movw	r20, r24
     bac:	09 2e       	mov	r0, r25
     bae:	00 0c       	add	r0, r0
     bb0:	66 0b       	sbc	r22, r22
     bb2:	77 0b       	sbc	r23, r23
     bb4:	9a 01       	movw	r18, r20
     bb6:	11 27       	eor	r17, r17
     bb8:	00 27       	eor	r16, r16
     bba:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     bbe:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     bc2:	60 e0       	ldi	r22, 0x00	; 0
     bc4:	70 e0       	ldi	r23, 0x00	; 0
     bc6:	40 2b       	or	r20, r16
     bc8:	51 2b       	or	r21, r17
     bca:	62 2b       	or	r22, r18
     bcc:	73 2b       	or	r23, r19
     bce:	40 93 9c 01 	sts	0x019C, r20	; 0x80019c <timestamp>
     bd2:	50 93 9d 01 	sts	0x019D, r21	; 0x80019d <timestamp+0x1>
     bd6:	60 93 9e 01 	sts	0x019E, r22	; 0x80019e <timestamp+0x2>
     bda:	70 93 9f 01 	sts	0x019F, r23	; 0x80019f <timestamp+0x3>
     bde:	b0 9b       	sbis	0x16, 0	; 22
     be0:	1a c0       	rjmp	.+52     	; 0xc16 <__vector_2+0x9a>
     be2:	01 96       	adiw	r24, 0x01	; 1
     be4:	09 2e       	mov	r0, r25
     be6:	00 0c       	add	r0, r0
     be8:	aa 0b       	sbc	r26, r26
     bea:	bb 0b       	sbc	r27, r27
     bec:	bc 01       	movw	r22, r24
     bee:	55 27       	eor	r21, r21
     bf0:	44 27       	eor	r20, r20
     bf2:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     bf6:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     bfa:	a0 e0       	ldi	r26, 0x00	; 0
     bfc:	b0 e0       	ldi	r27, 0x00	; 0
     bfe:	84 2b       	or	r24, r20
     c00:	95 2b       	or	r25, r21
     c02:	a6 2b       	or	r26, r22
     c04:	b7 2b       	or	r27, r23
     c06:	80 93 9c 01 	sts	0x019C, r24	; 0x80019c <timestamp>
     c0a:	90 93 9d 01 	sts	0x019D, r25	; 0x80019d <timestamp+0x1>
     c0e:	a0 93 9e 01 	sts	0x019E, r26	; 0x80019e <timestamp+0x2>
     c12:	b0 93 9f 01 	sts	0x019F, r27	; 0x80019f <timestamp+0x3>
     c16:	e0 91 3e 02 	lds	r30, 0x023E	; 0x80023e <mtable+0x2>
     c1a:	f0 91 3f 02 	lds	r31, 0x023F	; 0x80023f <mtable+0x3>
     c1e:	30 97       	sbiw	r30, 0x00	; 0
     c20:	39 f0       	breq	.+14     	; 0xc30 <__vector_2+0xb4>
     c22:	61 e0       	ldi	r22, 0x01	; 1
     c24:	70 e0       	ldi	r23, 0x00	; 0
     c26:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <otable+0x2>
     c2a:	90 91 a7 01 	lds	r25, 0x01A7	; 0x8001a7 <otable+0x3>
     c2e:	09 95       	icall
     c30:	0e 94 1b 05 	call	0xa36	; 0xa36 <schedule>
     c34:	ff 91       	pop	r31
     c36:	ef 91       	pop	r30
     c38:	bf 91       	pop	r27
     c3a:	af 91       	pop	r26
     c3c:	9f 91       	pop	r25
     c3e:	8f 91       	pop	r24
     c40:	7f 91       	pop	r23
     c42:	6f 91       	pop	r22
     c44:	5f 91       	pop	r21
     c46:	4f 91       	pop	r20
     c48:	3f 91       	pop	r19
     c4a:	2f 91       	pop	r18
     c4c:	1f 91       	pop	r17
     c4e:	0f 91       	pop	r16
     c50:	0f 90       	pop	r0
     c52:	0f be       	out	0x3f, r0	; 63
     c54:	0f 90       	pop	r0
     c56:	1f 90       	pop	r1
     c58:	18 95       	reti

00000c5a <__vector_3>:
     c5a:	1f 92       	push	r1
     c5c:	0f 92       	push	r0
     c5e:	0f b6       	in	r0, 0x3f	; 63
     c60:	0f 92       	push	r0
     c62:	11 24       	eor	r1, r1
     c64:	0f 93       	push	r16
     c66:	1f 93       	push	r17
     c68:	2f 93       	push	r18
     c6a:	3f 93       	push	r19
     c6c:	4f 93       	push	r20
     c6e:	5f 93       	push	r21
     c70:	6f 93       	push	r22
     c72:	7f 93       	push	r23
     c74:	8f 93       	push	r24
     c76:	9f 93       	push	r25
     c78:	af 93       	push	r26
     c7a:	bf 93       	push	r27
     c7c:	ef 93       	push	r30
     c7e:	ff 93       	push	r31
     c80:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <overflows>
     c84:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <overflows+0x1>
     c88:	ac 01       	movw	r20, r24
     c8a:	09 2e       	mov	r0, r25
     c8c:	00 0c       	add	r0, r0
     c8e:	66 0b       	sbc	r22, r22
     c90:	77 0b       	sbc	r23, r23
     c92:	9a 01       	movw	r18, r20
     c94:	11 27       	eor	r17, r17
     c96:	00 27       	eor	r16, r16
     c98:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c9c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     ca0:	60 e0       	ldi	r22, 0x00	; 0
     ca2:	70 e0       	ldi	r23, 0x00	; 0
     ca4:	40 2b       	or	r20, r16
     ca6:	51 2b       	or	r21, r17
     ca8:	62 2b       	or	r22, r18
     caa:	73 2b       	or	r23, r19
     cac:	40 93 9c 01 	sts	0x019C, r20	; 0x80019c <timestamp>
     cb0:	50 93 9d 01 	sts	0x019D, r21	; 0x80019d <timestamp+0x1>
     cb4:	60 93 9e 01 	sts	0x019E, r22	; 0x80019e <timestamp+0x2>
     cb8:	70 93 9f 01 	sts	0x019F, r23	; 0x80019f <timestamp+0x3>
     cbc:	b0 9b       	sbis	0x16, 0	; 22
     cbe:	1a c0       	rjmp	.+52     	; 0xcf4 <__vector_3+0x9a>
     cc0:	01 96       	adiw	r24, 0x01	; 1
     cc2:	09 2e       	mov	r0, r25
     cc4:	00 0c       	add	r0, r0
     cc6:	aa 0b       	sbc	r26, r26
     cc8:	bb 0b       	sbc	r27, r27
     cca:	bc 01       	movw	r22, r24
     ccc:	55 27       	eor	r21, r21
     cce:	44 27       	eor	r20, r20
     cd0:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     cd4:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     cd8:	a0 e0       	ldi	r26, 0x00	; 0
     cda:	b0 e0       	ldi	r27, 0x00	; 0
     cdc:	84 2b       	or	r24, r20
     cde:	95 2b       	or	r25, r21
     ce0:	a6 2b       	or	r26, r22
     ce2:	b7 2b       	or	r27, r23
     ce4:	80 93 9c 01 	sts	0x019C, r24	; 0x80019c <timestamp>
     ce8:	90 93 9d 01 	sts	0x019D, r25	; 0x80019d <timestamp+0x1>
     cec:	a0 93 9e 01 	sts	0x019E, r26	; 0x80019e <timestamp+0x2>
     cf0:	b0 93 9f 01 	sts	0x019F, r27	; 0x80019f <timestamp+0x3>
     cf4:	e0 91 40 02 	lds	r30, 0x0240	; 0x800240 <mtable+0x4>
     cf8:	f0 91 41 02 	lds	r31, 0x0241	; 0x800241 <mtable+0x5>
     cfc:	30 97       	sbiw	r30, 0x00	; 0
     cfe:	39 f0       	breq	.+14     	; 0xd0e <__vector_3+0xb4>
     d00:	62 e0       	ldi	r22, 0x02	; 2
     d02:	70 e0       	ldi	r23, 0x00	; 0
     d04:	80 91 a8 01 	lds	r24, 0x01A8	; 0x8001a8 <otable+0x4>
     d08:	90 91 a9 01 	lds	r25, 0x01A9	; 0x8001a9 <otable+0x5>
     d0c:	09 95       	icall
     d0e:	0e 94 1b 05 	call	0xa36	; 0xa36 <schedule>
     d12:	ff 91       	pop	r31
     d14:	ef 91       	pop	r30
     d16:	bf 91       	pop	r27
     d18:	af 91       	pop	r26
     d1a:	9f 91       	pop	r25
     d1c:	8f 91       	pop	r24
     d1e:	7f 91       	pop	r23
     d20:	6f 91       	pop	r22
     d22:	5f 91       	pop	r21
     d24:	4f 91       	pop	r20
     d26:	3f 91       	pop	r19
     d28:	2f 91       	pop	r18
     d2a:	1f 91       	pop	r17
     d2c:	0f 91       	pop	r16
     d2e:	0f 90       	pop	r0
     d30:	0f be       	out	0x3f, r0	; 63
     d32:	0f 90       	pop	r0
     d34:	1f 90       	pop	r1
     d36:	18 95       	reti

00000d38 <__vector_4>:
     d38:	1f 92       	push	r1
     d3a:	0f 92       	push	r0
     d3c:	0f b6       	in	r0, 0x3f	; 63
     d3e:	0f 92       	push	r0
     d40:	11 24       	eor	r1, r1
     d42:	0f 93       	push	r16
     d44:	1f 93       	push	r17
     d46:	2f 93       	push	r18
     d48:	3f 93       	push	r19
     d4a:	4f 93       	push	r20
     d4c:	5f 93       	push	r21
     d4e:	6f 93       	push	r22
     d50:	7f 93       	push	r23
     d52:	8f 93       	push	r24
     d54:	9f 93       	push	r25
     d56:	af 93       	push	r26
     d58:	bf 93       	push	r27
     d5a:	ef 93       	push	r30
     d5c:	ff 93       	push	r31
     d5e:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <overflows>
     d62:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <overflows+0x1>
     d66:	ac 01       	movw	r20, r24
     d68:	09 2e       	mov	r0, r25
     d6a:	00 0c       	add	r0, r0
     d6c:	66 0b       	sbc	r22, r22
     d6e:	77 0b       	sbc	r23, r23
     d70:	9a 01       	movw	r18, r20
     d72:	11 27       	eor	r17, r17
     d74:	00 27       	eor	r16, r16
     d76:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d7a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d7e:	60 e0       	ldi	r22, 0x00	; 0
     d80:	70 e0       	ldi	r23, 0x00	; 0
     d82:	40 2b       	or	r20, r16
     d84:	51 2b       	or	r21, r17
     d86:	62 2b       	or	r22, r18
     d88:	73 2b       	or	r23, r19
     d8a:	40 93 9c 01 	sts	0x019C, r20	; 0x80019c <timestamp>
     d8e:	50 93 9d 01 	sts	0x019D, r21	; 0x80019d <timestamp+0x1>
     d92:	60 93 9e 01 	sts	0x019E, r22	; 0x80019e <timestamp+0x2>
     d96:	70 93 9f 01 	sts	0x019F, r23	; 0x80019f <timestamp+0x3>
     d9a:	b0 9b       	sbis	0x16, 0	; 22
     d9c:	1a c0       	rjmp	.+52     	; 0xdd2 <__vector_4+0x9a>
     d9e:	01 96       	adiw	r24, 0x01	; 1
     da0:	09 2e       	mov	r0, r25
     da2:	00 0c       	add	r0, r0
     da4:	aa 0b       	sbc	r26, r26
     da6:	bb 0b       	sbc	r27, r27
     da8:	bc 01       	movw	r22, r24
     daa:	55 27       	eor	r21, r21
     dac:	44 27       	eor	r20, r20
     dae:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     db2:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     db6:	a0 e0       	ldi	r26, 0x00	; 0
     db8:	b0 e0       	ldi	r27, 0x00	; 0
     dba:	84 2b       	or	r24, r20
     dbc:	95 2b       	or	r25, r21
     dbe:	a6 2b       	or	r26, r22
     dc0:	b7 2b       	or	r27, r23
     dc2:	80 93 9c 01 	sts	0x019C, r24	; 0x80019c <timestamp>
     dc6:	90 93 9d 01 	sts	0x019D, r25	; 0x80019d <timestamp+0x1>
     dca:	a0 93 9e 01 	sts	0x019E, r26	; 0x80019e <timestamp+0x2>
     dce:	b0 93 9f 01 	sts	0x019F, r27	; 0x80019f <timestamp+0x3>
     dd2:	e0 91 42 02 	lds	r30, 0x0242	; 0x800242 <mtable+0x6>
     dd6:	f0 91 43 02 	lds	r31, 0x0243	; 0x800243 <mtable+0x7>
     dda:	30 97       	sbiw	r30, 0x00	; 0
     ddc:	39 f0       	breq	.+14     	; 0xdec <__vector_4+0xb4>
     dde:	63 e0       	ldi	r22, 0x03	; 3
     de0:	70 e0       	ldi	r23, 0x00	; 0
     de2:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <otable+0x6>
     de6:	90 91 ab 01 	lds	r25, 0x01AB	; 0x8001ab <otable+0x7>
     dea:	09 95       	icall
     dec:	0e 94 1b 05 	call	0xa36	; 0xa36 <schedule>
     df0:	ff 91       	pop	r31
     df2:	ef 91       	pop	r30
     df4:	bf 91       	pop	r27
     df6:	af 91       	pop	r26
     df8:	9f 91       	pop	r25
     dfa:	8f 91       	pop	r24
     dfc:	7f 91       	pop	r23
     dfe:	6f 91       	pop	r22
     e00:	5f 91       	pop	r21
     e02:	4f 91       	pop	r20
     e04:	3f 91       	pop	r19
     e06:	2f 91       	pop	r18
     e08:	1f 91       	pop	r17
     e0a:	0f 91       	pop	r16
     e0c:	0f 90       	pop	r0
     e0e:	0f be       	out	0x3f, r0	; 63
     e10:	0f 90       	pop	r0
     e12:	1f 90       	pop	r1
     e14:	18 95       	reti

00000e16 <__vector_5>:
     e16:	1f 92       	push	r1
     e18:	0f 92       	push	r0
     e1a:	0f b6       	in	r0, 0x3f	; 63
     e1c:	0f 92       	push	r0
     e1e:	11 24       	eor	r1, r1
     e20:	0f 93       	push	r16
     e22:	1f 93       	push	r17
     e24:	2f 93       	push	r18
     e26:	3f 93       	push	r19
     e28:	4f 93       	push	r20
     e2a:	5f 93       	push	r21
     e2c:	6f 93       	push	r22
     e2e:	7f 93       	push	r23
     e30:	8f 93       	push	r24
     e32:	9f 93       	push	r25
     e34:	af 93       	push	r26
     e36:	bf 93       	push	r27
     e38:	ef 93       	push	r30
     e3a:	ff 93       	push	r31
     e3c:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <overflows>
     e40:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <overflows+0x1>
     e44:	ac 01       	movw	r20, r24
     e46:	09 2e       	mov	r0, r25
     e48:	00 0c       	add	r0, r0
     e4a:	66 0b       	sbc	r22, r22
     e4c:	77 0b       	sbc	r23, r23
     e4e:	9a 01       	movw	r18, r20
     e50:	11 27       	eor	r17, r17
     e52:	00 27       	eor	r16, r16
     e54:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e58:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e5c:	60 e0       	ldi	r22, 0x00	; 0
     e5e:	70 e0       	ldi	r23, 0x00	; 0
     e60:	40 2b       	or	r20, r16
     e62:	51 2b       	or	r21, r17
     e64:	62 2b       	or	r22, r18
     e66:	73 2b       	or	r23, r19
     e68:	40 93 9c 01 	sts	0x019C, r20	; 0x80019c <timestamp>
     e6c:	50 93 9d 01 	sts	0x019D, r21	; 0x80019d <timestamp+0x1>
     e70:	60 93 9e 01 	sts	0x019E, r22	; 0x80019e <timestamp+0x2>
     e74:	70 93 9f 01 	sts	0x019F, r23	; 0x80019f <timestamp+0x3>
     e78:	b0 9b       	sbis	0x16, 0	; 22
     e7a:	1a c0       	rjmp	.+52     	; 0xeb0 <__vector_5+0x9a>
     e7c:	01 96       	adiw	r24, 0x01	; 1
     e7e:	09 2e       	mov	r0, r25
     e80:	00 0c       	add	r0, r0
     e82:	aa 0b       	sbc	r26, r26
     e84:	bb 0b       	sbc	r27, r27
     e86:	bc 01       	movw	r22, r24
     e88:	55 27       	eor	r21, r21
     e8a:	44 27       	eor	r20, r20
     e8c:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e90:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e94:	a0 e0       	ldi	r26, 0x00	; 0
     e96:	b0 e0       	ldi	r27, 0x00	; 0
     e98:	84 2b       	or	r24, r20
     e9a:	95 2b       	or	r25, r21
     e9c:	a6 2b       	or	r26, r22
     e9e:	b7 2b       	or	r27, r23
     ea0:	80 93 9c 01 	sts	0x019C, r24	; 0x80019c <timestamp>
     ea4:	90 93 9d 01 	sts	0x019D, r25	; 0x80019d <timestamp+0x1>
     ea8:	a0 93 9e 01 	sts	0x019E, r26	; 0x80019e <timestamp+0x2>
     eac:	b0 93 9f 01 	sts	0x019F, r27	; 0x80019f <timestamp+0x3>
     eb0:	e0 91 44 02 	lds	r30, 0x0244	; 0x800244 <mtable+0x8>
     eb4:	f0 91 45 02 	lds	r31, 0x0245	; 0x800245 <mtable+0x9>
     eb8:	30 97       	sbiw	r30, 0x00	; 0
     eba:	39 f0       	breq	.+14     	; 0xeca <__vector_5+0xb4>
     ebc:	64 e0       	ldi	r22, 0x04	; 4
     ebe:	70 e0       	ldi	r23, 0x00	; 0
     ec0:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <otable+0x8>
     ec4:	90 91 ad 01 	lds	r25, 0x01AD	; 0x8001ad <otable+0x9>
     ec8:	09 95       	icall
     eca:	0e 94 1b 05 	call	0xa36	; 0xa36 <schedule>
     ece:	ff 91       	pop	r31
     ed0:	ef 91       	pop	r30
     ed2:	bf 91       	pop	r27
     ed4:	af 91       	pop	r26
     ed6:	9f 91       	pop	r25
     ed8:	8f 91       	pop	r24
     eda:	7f 91       	pop	r23
     edc:	6f 91       	pop	r22
     ede:	5f 91       	pop	r21
     ee0:	4f 91       	pop	r20
     ee2:	3f 91       	pop	r19
     ee4:	2f 91       	pop	r18
     ee6:	1f 91       	pop	r17
     ee8:	0f 91       	pop	r16
     eea:	0f 90       	pop	r0
     eec:	0f be       	out	0x3f, r0	; 63
     eee:	0f 90       	pop	r0
     ef0:	1f 90       	pop	r1
     ef2:	18 95       	reti

00000ef4 <__vector_10>:
     ef4:	1f 92       	push	r1
     ef6:	0f 92       	push	r0
     ef8:	0f b6       	in	r0, 0x3f	; 63
     efa:	0f 92       	push	r0
     efc:	11 24       	eor	r1, r1
     efe:	0f 93       	push	r16
     f00:	1f 93       	push	r17
     f02:	2f 93       	push	r18
     f04:	3f 93       	push	r19
     f06:	4f 93       	push	r20
     f08:	5f 93       	push	r21
     f0a:	6f 93       	push	r22
     f0c:	7f 93       	push	r23
     f0e:	8f 93       	push	r24
     f10:	9f 93       	push	r25
     f12:	af 93       	push	r26
     f14:	bf 93       	push	r27
     f16:	ef 93       	push	r30
     f18:	ff 93       	push	r31
     f1a:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <overflows>
     f1e:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <overflows+0x1>
     f22:	ac 01       	movw	r20, r24
     f24:	09 2e       	mov	r0, r25
     f26:	00 0c       	add	r0, r0
     f28:	66 0b       	sbc	r22, r22
     f2a:	77 0b       	sbc	r23, r23
     f2c:	9a 01       	movw	r18, r20
     f2e:	11 27       	eor	r17, r17
     f30:	00 27       	eor	r16, r16
     f32:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f36:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f3a:	60 e0       	ldi	r22, 0x00	; 0
     f3c:	70 e0       	ldi	r23, 0x00	; 0
     f3e:	40 2b       	or	r20, r16
     f40:	51 2b       	or	r21, r17
     f42:	62 2b       	or	r22, r18
     f44:	73 2b       	or	r23, r19
     f46:	40 93 9c 01 	sts	0x019C, r20	; 0x80019c <timestamp>
     f4a:	50 93 9d 01 	sts	0x019D, r21	; 0x80019d <timestamp+0x1>
     f4e:	60 93 9e 01 	sts	0x019E, r22	; 0x80019e <timestamp+0x2>
     f52:	70 93 9f 01 	sts	0x019F, r23	; 0x80019f <timestamp+0x3>
     f56:	b0 9b       	sbis	0x16, 0	; 22
     f58:	1a c0       	rjmp	.+52     	; 0xf8e <__vector_10+0x9a>
     f5a:	01 96       	adiw	r24, 0x01	; 1
     f5c:	09 2e       	mov	r0, r25
     f5e:	00 0c       	add	r0, r0
     f60:	aa 0b       	sbc	r26, r26
     f62:	bb 0b       	sbc	r27, r27
     f64:	bc 01       	movw	r22, r24
     f66:	55 27       	eor	r21, r21
     f68:	44 27       	eor	r20, r20
     f6a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f6e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f72:	a0 e0       	ldi	r26, 0x00	; 0
     f74:	b0 e0       	ldi	r27, 0x00	; 0
     f76:	84 2b       	or	r24, r20
     f78:	95 2b       	or	r25, r21
     f7a:	a6 2b       	or	r26, r22
     f7c:	b7 2b       	or	r27, r23
     f7e:	80 93 9c 01 	sts	0x019C, r24	; 0x80019c <timestamp>
     f82:	90 93 9d 01 	sts	0x019D, r25	; 0x80019d <timestamp+0x1>
     f86:	a0 93 9e 01 	sts	0x019E, r26	; 0x80019e <timestamp+0x2>
     f8a:	b0 93 9f 01 	sts	0x019F, r27	; 0x80019f <timestamp+0x3>
     f8e:	e0 91 46 02 	lds	r30, 0x0246	; 0x800246 <mtable+0xa>
     f92:	f0 91 47 02 	lds	r31, 0x0247	; 0x800247 <mtable+0xb>
     f96:	30 97       	sbiw	r30, 0x00	; 0
     f98:	39 f0       	breq	.+14     	; 0xfa8 <__vector_10+0xb4>
     f9a:	65 e0       	ldi	r22, 0x05	; 5
     f9c:	70 e0       	ldi	r23, 0x00	; 0
     f9e:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <otable+0xa>
     fa2:	90 91 af 01 	lds	r25, 0x01AF	; 0x8001af <otable+0xb>
     fa6:	09 95       	icall
     fa8:	0e 94 1b 05 	call	0xa36	; 0xa36 <schedule>
     fac:	ff 91       	pop	r31
     fae:	ef 91       	pop	r30
     fb0:	bf 91       	pop	r27
     fb2:	af 91       	pop	r26
     fb4:	9f 91       	pop	r25
     fb6:	8f 91       	pop	r24
     fb8:	7f 91       	pop	r23
     fba:	6f 91       	pop	r22
     fbc:	5f 91       	pop	r21
     fbe:	4f 91       	pop	r20
     fc0:	3f 91       	pop	r19
     fc2:	2f 91       	pop	r18
     fc4:	1f 91       	pop	r17
     fc6:	0f 91       	pop	r16
     fc8:	0f 90       	pop	r0
     fca:	0f be       	out	0x3f, r0	; 63
     fcc:	0f 90       	pop	r0
     fce:	1f 90       	pop	r1
     fd0:	18 95       	reti

00000fd2 <__vector_11>:
     fd2:	1f 92       	push	r1
     fd4:	0f 92       	push	r0
     fd6:	0f b6       	in	r0, 0x3f	; 63
     fd8:	0f 92       	push	r0
     fda:	11 24       	eor	r1, r1
     fdc:	0f 93       	push	r16
     fde:	1f 93       	push	r17
     fe0:	2f 93       	push	r18
     fe2:	3f 93       	push	r19
     fe4:	4f 93       	push	r20
     fe6:	5f 93       	push	r21
     fe8:	6f 93       	push	r22
     fea:	7f 93       	push	r23
     fec:	8f 93       	push	r24
     fee:	9f 93       	push	r25
     ff0:	af 93       	push	r26
     ff2:	bf 93       	push	r27
     ff4:	ef 93       	push	r30
     ff6:	ff 93       	push	r31
     ff8:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <overflows>
     ffc:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <overflows+0x1>
    1000:	ac 01       	movw	r20, r24
    1002:	09 2e       	mov	r0, r25
    1004:	00 0c       	add	r0, r0
    1006:	66 0b       	sbc	r22, r22
    1008:	77 0b       	sbc	r23, r23
    100a:	9a 01       	movw	r18, r20
    100c:	11 27       	eor	r17, r17
    100e:	00 27       	eor	r16, r16
    1010:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1014:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1018:	60 e0       	ldi	r22, 0x00	; 0
    101a:	70 e0       	ldi	r23, 0x00	; 0
    101c:	40 2b       	or	r20, r16
    101e:	51 2b       	or	r21, r17
    1020:	62 2b       	or	r22, r18
    1022:	73 2b       	or	r23, r19
    1024:	40 93 9c 01 	sts	0x019C, r20	; 0x80019c <timestamp>
    1028:	50 93 9d 01 	sts	0x019D, r21	; 0x80019d <timestamp+0x1>
    102c:	60 93 9e 01 	sts	0x019E, r22	; 0x80019e <timestamp+0x2>
    1030:	70 93 9f 01 	sts	0x019F, r23	; 0x80019f <timestamp+0x3>
    1034:	b0 9b       	sbis	0x16, 0	; 22
    1036:	1a c0       	rjmp	.+52     	; 0x106c <__vector_11+0x9a>
    1038:	01 96       	adiw	r24, 0x01	; 1
    103a:	09 2e       	mov	r0, r25
    103c:	00 0c       	add	r0, r0
    103e:	aa 0b       	sbc	r26, r26
    1040:	bb 0b       	sbc	r27, r27
    1042:	bc 01       	movw	r22, r24
    1044:	55 27       	eor	r21, r21
    1046:	44 27       	eor	r20, r20
    1048:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    104c:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1050:	a0 e0       	ldi	r26, 0x00	; 0
    1052:	b0 e0       	ldi	r27, 0x00	; 0
    1054:	84 2b       	or	r24, r20
    1056:	95 2b       	or	r25, r21
    1058:	a6 2b       	or	r26, r22
    105a:	b7 2b       	or	r27, r23
    105c:	80 93 9c 01 	sts	0x019C, r24	; 0x80019c <timestamp>
    1060:	90 93 9d 01 	sts	0x019D, r25	; 0x80019d <timestamp+0x1>
    1064:	a0 93 9e 01 	sts	0x019E, r26	; 0x80019e <timestamp+0x2>
    1068:	b0 93 9f 01 	sts	0x019F, r27	; 0x80019f <timestamp+0x3>
    106c:	e0 91 48 02 	lds	r30, 0x0248	; 0x800248 <mtable+0xc>
    1070:	f0 91 49 02 	lds	r31, 0x0249	; 0x800249 <mtable+0xd>
    1074:	30 97       	sbiw	r30, 0x00	; 0
    1076:	39 f0       	breq	.+14     	; 0x1086 <__vector_11+0xb4>
    1078:	66 e0       	ldi	r22, 0x06	; 6
    107a:	70 e0       	ldi	r23, 0x00	; 0
    107c:	80 91 b0 01 	lds	r24, 0x01B0	; 0x8001b0 <otable+0xc>
    1080:	90 91 b1 01 	lds	r25, 0x01B1	; 0x8001b1 <otable+0xd>
    1084:	09 95       	icall
    1086:	0e 94 1b 05 	call	0xa36	; 0xa36 <schedule>
    108a:	ff 91       	pop	r31
    108c:	ef 91       	pop	r30
    108e:	bf 91       	pop	r27
    1090:	af 91       	pop	r26
    1092:	9f 91       	pop	r25
    1094:	8f 91       	pop	r24
    1096:	7f 91       	pop	r23
    1098:	6f 91       	pop	r22
    109a:	5f 91       	pop	r21
    109c:	4f 91       	pop	r20
    109e:	3f 91       	pop	r19
    10a0:	2f 91       	pop	r18
    10a2:	1f 91       	pop	r17
    10a4:	0f 91       	pop	r16
    10a6:	0f 90       	pop	r0
    10a8:	0f be       	out	0x3f, r0	; 63
    10aa:	0f 90       	pop	r0
    10ac:	1f 90       	pop	r1
    10ae:	18 95       	reti

000010b0 <__vector_12>:
    10b0:	1f 92       	push	r1
    10b2:	0f 92       	push	r0
    10b4:	0f b6       	in	r0, 0x3f	; 63
    10b6:	0f 92       	push	r0
    10b8:	11 24       	eor	r1, r1
    10ba:	0f 93       	push	r16
    10bc:	1f 93       	push	r17
    10be:	2f 93       	push	r18
    10c0:	3f 93       	push	r19
    10c2:	4f 93       	push	r20
    10c4:	5f 93       	push	r21
    10c6:	6f 93       	push	r22
    10c8:	7f 93       	push	r23
    10ca:	8f 93       	push	r24
    10cc:	9f 93       	push	r25
    10ce:	af 93       	push	r26
    10d0:	bf 93       	push	r27
    10d2:	ef 93       	push	r30
    10d4:	ff 93       	push	r31
    10d6:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <overflows>
    10da:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <overflows+0x1>
    10de:	ac 01       	movw	r20, r24
    10e0:	09 2e       	mov	r0, r25
    10e2:	00 0c       	add	r0, r0
    10e4:	66 0b       	sbc	r22, r22
    10e6:	77 0b       	sbc	r23, r23
    10e8:	9a 01       	movw	r18, r20
    10ea:	11 27       	eor	r17, r17
    10ec:	00 27       	eor	r16, r16
    10ee:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    10f2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    10f6:	60 e0       	ldi	r22, 0x00	; 0
    10f8:	70 e0       	ldi	r23, 0x00	; 0
    10fa:	40 2b       	or	r20, r16
    10fc:	51 2b       	or	r21, r17
    10fe:	62 2b       	or	r22, r18
    1100:	73 2b       	or	r23, r19
    1102:	40 93 9c 01 	sts	0x019C, r20	; 0x80019c <timestamp>
    1106:	50 93 9d 01 	sts	0x019D, r21	; 0x80019d <timestamp+0x1>
    110a:	60 93 9e 01 	sts	0x019E, r22	; 0x80019e <timestamp+0x2>
    110e:	70 93 9f 01 	sts	0x019F, r23	; 0x80019f <timestamp+0x3>
    1112:	b0 9b       	sbis	0x16, 0	; 22
    1114:	1a c0       	rjmp	.+52     	; 0x114a <__vector_12+0x9a>
    1116:	01 96       	adiw	r24, 0x01	; 1
    1118:	09 2e       	mov	r0, r25
    111a:	00 0c       	add	r0, r0
    111c:	aa 0b       	sbc	r26, r26
    111e:	bb 0b       	sbc	r27, r27
    1120:	bc 01       	movw	r22, r24
    1122:	55 27       	eor	r21, r21
    1124:	44 27       	eor	r20, r20
    1126:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    112a:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    112e:	a0 e0       	ldi	r26, 0x00	; 0
    1130:	b0 e0       	ldi	r27, 0x00	; 0
    1132:	84 2b       	or	r24, r20
    1134:	95 2b       	or	r25, r21
    1136:	a6 2b       	or	r26, r22
    1138:	b7 2b       	or	r27, r23
    113a:	80 93 9c 01 	sts	0x019C, r24	; 0x80019c <timestamp>
    113e:	90 93 9d 01 	sts	0x019D, r25	; 0x80019d <timestamp+0x1>
    1142:	a0 93 9e 01 	sts	0x019E, r26	; 0x80019e <timestamp+0x2>
    1146:	b0 93 9f 01 	sts	0x019F, r27	; 0x80019f <timestamp+0x3>
    114a:	e0 91 4a 02 	lds	r30, 0x024A	; 0x80024a <mtable+0xe>
    114e:	f0 91 4b 02 	lds	r31, 0x024B	; 0x80024b <mtable+0xf>
    1152:	30 97       	sbiw	r30, 0x00	; 0
    1154:	39 f0       	breq	.+14     	; 0x1164 <__vector_12+0xb4>
    1156:	67 e0       	ldi	r22, 0x07	; 7
    1158:	70 e0       	ldi	r23, 0x00	; 0
    115a:	80 91 b2 01 	lds	r24, 0x01B2	; 0x8001b2 <otable+0xe>
    115e:	90 91 b3 01 	lds	r25, 0x01B3	; 0x8001b3 <otable+0xf>
    1162:	09 95       	icall
    1164:	0e 94 1b 05 	call	0xa36	; 0xa36 <schedule>
    1168:	ff 91       	pop	r31
    116a:	ef 91       	pop	r30
    116c:	bf 91       	pop	r27
    116e:	af 91       	pop	r26
    1170:	9f 91       	pop	r25
    1172:	8f 91       	pop	r24
    1174:	7f 91       	pop	r23
    1176:	6f 91       	pop	r22
    1178:	5f 91       	pop	r21
    117a:	4f 91       	pop	r20
    117c:	3f 91       	pop	r19
    117e:	2f 91       	pop	r18
    1180:	1f 91       	pop	r17
    1182:	0f 91       	pop	r16
    1184:	0f 90       	pop	r0
    1186:	0f be       	out	0x3f, r0	; 63
    1188:	0f 90       	pop	r0
    118a:	1f 90       	pop	r1
    118c:	18 95       	reti

0000118e <__vector_13>:
    118e:	1f 92       	push	r1
    1190:	0f 92       	push	r0
    1192:	0f b6       	in	r0, 0x3f	; 63
    1194:	0f 92       	push	r0
    1196:	11 24       	eor	r1, r1
    1198:	0f 93       	push	r16
    119a:	1f 93       	push	r17
    119c:	2f 93       	push	r18
    119e:	3f 93       	push	r19
    11a0:	4f 93       	push	r20
    11a2:	5f 93       	push	r21
    11a4:	6f 93       	push	r22
    11a6:	7f 93       	push	r23
    11a8:	8f 93       	push	r24
    11aa:	9f 93       	push	r25
    11ac:	af 93       	push	r26
    11ae:	bf 93       	push	r27
    11b0:	ef 93       	push	r30
    11b2:	ff 93       	push	r31
    11b4:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <overflows>
    11b8:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <overflows+0x1>
    11bc:	ac 01       	movw	r20, r24
    11be:	09 2e       	mov	r0, r25
    11c0:	00 0c       	add	r0, r0
    11c2:	66 0b       	sbc	r22, r22
    11c4:	77 0b       	sbc	r23, r23
    11c6:	9a 01       	movw	r18, r20
    11c8:	11 27       	eor	r17, r17
    11ca:	00 27       	eor	r16, r16
    11cc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    11d0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    11d4:	60 e0       	ldi	r22, 0x00	; 0
    11d6:	70 e0       	ldi	r23, 0x00	; 0
    11d8:	40 2b       	or	r20, r16
    11da:	51 2b       	or	r21, r17
    11dc:	62 2b       	or	r22, r18
    11de:	73 2b       	or	r23, r19
    11e0:	40 93 9c 01 	sts	0x019C, r20	; 0x80019c <timestamp>
    11e4:	50 93 9d 01 	sts	0x019D, r21	; 0x80019d <timestamp+0x1>
    11e8:	60 93 9e 01 	sts	0x019E, r22	; 0x80019e <timestamp+0x2>
    11ec:	70 93 9f 01 	sts	0x019F, r23	; 0x80019f <timestamp+0x3>
    11f0:	b0 9b       	sbis	0x16, 0	; 22
    11f2:	1a c0       	rjmp	.+52     	; 0x1228 <__vector_13+0x9a>
    11f4:	01 96       	adiw	r24, 0x01	; 1
    11f6:	09 2e       	mov	r0, r25
    11f8:	00 0c       	add	r0, r0
    11fa:	aa 0b       	sbc	r26, r26
    11fc:	bb 0b       	sbc	r27, r27
    11fe:	bc 01       	movw	r22, r24
    1200:	55 27       	eor	r21, r21
    1202:	44 27       	eor	r20, r20
    1204:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1208:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    120c:	a0 e0       	ldi	r26, 0x00	; 0
    120e:	b0 e0       	ldi	r27, 0x00	; 0
    1210:	84 2b       	or	r24, r20
    1212:	95 2b       	or	r25, r21
    1214:	a6 2b       	or	r26, r22
    1216:	b7 2b       	or	r27, r23
    1218:	80 93 9c 01 	sts	0x019C, r24	; 0x80019c <timestamp>
    121c:	90 93 9d 01 	sts	0x019D, r25	; 0x80019d <timestamp+0x1>
    1220:	a0 93 9e 01 	sts	0x019E, r26	; 0x80019e <timestamp+0x2>
    1224:	b0 93 9f 01 	sts	0x019F, r27	; 0x80019f <timestamp+0x3>
    1228:	e0 91 4c 02 	lds	r30, 0x024C	; 0x80024c <mtable+0x10>
    122c:	f0 91 4d 02 	lds	r31, 0x024D	; 0x80024d <mtable+0x11>
    1230:	30 97       	sbiw	r30, 0x00	; 0
    1232:	39 f0       	breq	.+14     	; 0x1242 <__vector_13+0xb4>
    1234:	68 e0       	ldi	r22, 0x08	; 8
    1236:	70 e0       	ldi	r23, 0x00	; 0
    1238:	80 91 b4 01 	lds	r24, 0x01B4	; 0x8001b4 <otable+0x10>
    123c:	90 91 b5 01 	lds	r25, 0x01B5	; 0x8001b5 <otable+0x11>
    1240:	09 95       	icall
    1242:	0e 94 1b 05 	call	0xa36	; 0xa36 <schedule>
    1246:	ff 91       	pop	r31
    1248:	ef 91       	pop	r30
    124a:	bf 91       	pop	r27
    124c:	af 91       	pop	r26
    124e:	9f 91       	pop	r25
    1250:	8f 91       	pop	r24
    1252:	7f 91       	pop	r23
    1254:	6f 91       	pop	r22
    1256:	5f 91       	pop	r21
    1258:	4f 91       	pop	r20
    125a:	3f 91       	pop	r19
    125c:	2f 91       	pop	r18
    125e:	1f 91       	pop	r17
    1260:	0f 91       	pop	r16
    1262:	0f 90       	pop	r0
    1264:	0f be       	out	0x3f, r0	; 63
    1266:	0f 90       	pop	r0
    1268:	1f 90       	pop	r1
    126a:	18 95       	reti

0000126c <__vector_14>:
    126c:	1f 92       	push	r1
    126e:	0f 92       	push	r0
    1270:	0f b6       	in	r0, 0x3f	; 63
    1272:	0f 92       	push	r0
    1274:	11 24       	eor	r1, r1
    1276:	0f 93       	push	r16
    1278:	1f 93       	push	r17
    127a:	2f 93       	push	r18
    127c:	3f 93       	push	r19
    127e:	4f 93       	push	r20
    1280:	5f 93       	push	r21
    1282:	6f 93       	push	r22
    1284:	7f 93       	push	r23
    1286:	8f 93       	push	r24
    1288:	9f 93       	push	r25
    128a:	af 93       	push	r26
    128c:	bf 93       	push	r27
    128e:	ef 93       	push	r30
    1290:	ff 93       	push	r31
    1292:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <overflows>
    1296:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <overflows+0x1>
    129a:	ac 01       	movw	r20, r24
    129c:	09 2e       	mov	r0, r25
    129e:	00 0c       	add	r0, r0
    12a0:	66 0b       	sbc	r22, r22
    12a2:	77 0b       	sbc	r23, r23
    12a4:	9a 01       	movw	r18, r20
    12a6:	11 27       	eor	r17, r17
    12a8:	00 27       	eor	r16, r16
    12aa:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    12ae:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    12b2:	60 e0       	ldi	r22, 0x00	; 0
    12b4:	70 e0       	ldi	r23, 0x00	; 0
    12b6:	40 2b       	or	r20, r16
    12b8:	51 2b       	or	r21, r17
    12ba:	62 2b       	or	r22, r18
    12bc:	73 2b       	or	r23, r19
    12be:	40 93 9c 01 	sts	0x019C, r20	; 0x80019c <timestamp>
    12c2:	50 93 9d 01 	sts	0x019D, r21	; 0x80019d <timestamp+0x1>
    12c6:	60 93 9e 01 	sts	0x019E, r22	; 0x80019e <timestamp+0x2>
    12ca:	70 93 9f 01 	sts	0x019F, r23	; 0x80019f <timestamp+0x3>
    12ce:	b0 9b       	sbis	0x16, 0	; 22
    12d0:	1a c0       	rjmp	.+52     	; 0x1306 <__vector_14+0x9a>
    12d2:	01 96       	adiw	r24, 0x01	; 1
    12d4:	09 2e       	mov	r0, r25
    12d6:	00 0c       	add	r0, r0
    12d8:	aa 0b       	sbc	r26, r26
    12da:	bb 0b       	sbc	r27, r27
    12dc:	bc 01       	movw	r22, r24
    12de:	55 27       	eor	r21, r21
    12e0:	44 27       	eor	r20, r20
    12e2:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    12e6:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    12ea:	a0 e0       	ldi	r26, 0x00	; 0
    12ec:	b0 e0       	ldi	r27, 0x00	; 0
    12ee:	84 2b       	or	r24, r20
    12f0:	95 2b       	or	r25, r21
    12f2:	a6 2b       	or	r26, r22
    12f4:	b7 2b       	or	r27, r23
    12f6:	80 93 9c 01 	sts	0x019C, r24	; 0x80019c <timestamp>
    12fa:	90 93 9d 01 	sts	0x019D, r25	; 0x80019d <timestamp+0x1>
    12fe:	a0 93 9e 01 	sts	0x019E, r26	; 0x80019e <timestamp+0x2>
    1302:	b0 93 9f 01 	sts	0x019F, r27	; 0x80019f <timestamp+0x3>
    1306:	e0 91 4e 02 	lds	r30, 0x024E	; 0x80024e <mtable+0x12>
    130a:	f0 91 4f 02 	lds	r31, 0x024F	; 0x80024f <mtable+0x13>
    130e:	30 97       	sbiw	r30, 0x00	; 0
    1310:	39 f0       	breq	.+14     	; 0x1320 <__vector_14+0xb4>
    1312:	69 e0       	ldi	r22, 0x09	; 9
    1314:	70 e0       	ldi	r23, 0x00	; 0
    1316:	80 91 b6 01 	lds	r24, 0x01B6	; 0x8001b6 <otable+0x12>
    131a:	90 91 b7 01 	lds	r25, 0x01B7	; 0x8001b7 <otable+0x13>
    131e:	09 95       	icall
    1320:	0e 94 1b 05 	call	0xa36	; 0xa36 <schedule>
    1324:	ff 91       	pop	r31
    1326:	ef 91       	pop	r30
    1328:	bf 91       	pop	r27
    132a:	af 91       	pop	r26
    132c:	9f 91       	pop	r25
    132e:	8f 91       	pop	r24
    1330:	7f 91       	pop	r23
    1332:	6f 91       	pop	r22
    1334:	5f 91       	pop	r21
    1336:	4f 91       	pop	r20
    1338:	3f 91       	pop	r19
    133a:	2f 91       	pop	r18
    133c:	1f 91       	pop	r17
    133e:	0f 91       	pop	r16
    1340:	0f 90       	pop	r0
    1342:	0f be       	out	0x3f, r0	; 63
    1344:	0f 90       	pop	r0
    1346:	1f 90       	pop	r1
    1348:	18 95       	reti

0000134a <__vector_15>:
    134a:	1f 92       	push	r1
    134c:	0f 92       	push	r0
    134e:	0f b6       	in	r0, 0x3f	; 63
    1350:	0f 92       	push	r0
    1352:	11 24       	eor	r1, r1
    1354:	0f 93       	push	r16
    1356:	1f 93       	push	r17
    1358:	2f 93       	push	r18
    135a:	3f 93       	push	r19
    135c:	4f 93       	push	r20
    135e:	5f 93       	push	r21
    1360:	6f 93       	push	r22
    1362:	7f 93       	push	r23
    1364:	8f 93       	push	r24
    1366:	9f 93       	push	r25
    1368:	af 93       	push	r26
    136a:	bf 93       	push	r27
    136c:	ef 93       	push	r30
    136e:	ff 93       	push	r31
    1370:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <overflows>
    1374:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <overflows+0x1>
    1378:	ac 01       	movw	r20, r24
    137a:	09 2e       	mov	r0, r25
    137c:	00 0c       	add	r0, r0
    137e:	66 0b       	sbc	r22, r22
    1380:	77 0b       	sbc	r23, r23
    1382:	9a 01       	movw	r18, r20
    1384:	11 27       	eor	r17, r17
    1386:	00 27       	eor	r16, r16
    1388:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    138c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1390:	60 e0       	ldi	r22, 0x00	; 0
    1392:	70 e0       	ldi	r23, 0x00	; 0
    1394:	40 2b       	or	r20, r16
    1396:	51 2b       	or	r21, r17
    1398:	62 2b       	or	r22, r18
    139a:	73 2b       	or	r23, r19
    139c:	40 93 9c 01 	sts	0x019C, r20	; 0x80019c <timestamp>
    13a0:	50 93 9d 01 	sts	0x019D, r21	; 0x80019d <timestamp+0x1>
    13a4:	60 93 9e 01 	sts	0x019E, r22	; 0x80019e <timestamp+0x2>
    13a8:	70 93 9f 01 	sts	0x019F, r23	; 0x80019f <timestamp+0x3>
    13ac:	b0 9b       	sbis	0x16, 0	; 22
    13ae:	1a c0       	rjmp	.+52     	; 0x13e4 <__vector_15+0x9a>
    13b0:	01 96       	adiw	r24, 0x01	; 1
    13b2:	09 2e       	mov	r0, r25
    13b4:	00 0c       	add	r0, r0
    13b6:	aa 0b       	sbc	r26, r26
    13b8:	bb 0b       	sbc	r27, r27
    13ba:	bc 01       	movw	r22, r24
    13bc:	55 27       	eor	r21, r21
    13be:	44 27       	eor	r20, r20
    13c0:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    13c4:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    13c8:	a0 e0       	ldi	r26, 0x00	; 0
    13ca:	b0 e0       	ldi	r27, 0x00	; 0
    13cc:	84 2b       	or	r24, r20
    13ce:	95 2b       	or	r25, r21
    13d0:	a6 2b       	or	r26, r22
    13d2:	b7 2b       	or	r27, r23
    13d4:	80 93 9c 01 	sts	0x019C, r24	; 0x80019c <timestamp>
    13d8:	90 93 9d 01 	sts	0x019D, r25	; 0x80019d <timestamp+0x1>
    13dc:	a0 93 9e 01 	sts	0x019E, r26	; 0x80019e <timestamp+0x2>
    13e0:	b0 93 9f 01 	sts	0x019F, r27	; 0x80019f <timestamp+0x3>
    13e4:	e0 91 50 02 	lds	r30, 0x0250	; 0x800250 <mtable+0x14>
    13e8:	f0 91 51 02 	lds	r31, 0x0251	; 0x800251 <mtable+0x15>
    13ec:	30 97       	sbiw	r30, 0x00	; 0
    13ee:	39 f0       	breq	.+14     	; 0x13fe <__vector_15+0xb4>
    13f0:	6a e0       	ldi	r22, 0x0A	; 10
    13f2:	70 e0       	ldi	r23, 0x00	; 0
    13f4:	80 91 b8 01 	lds	r24, 0x01B8	; 0x8001b8 <otable+0x14>
    13f8:	90 91 b9 01 	lds	r25, 0x01B9	; 0x8001b9 <otable+0x15>
    13fc:	09 95       	icall
    13fe:	0e 94 1b 05 	call	0xa36	; 0xa36 <schedule>
    1402:	ff 91       	pop	r31
    1404:	ef 91       	pop	r30
    1406:	bf 91       	pop	r27
    1408:	af 91       	pop	r26
    140a:	9f 91       	pop	r25
    140c:	8f 91       	pop	r24
    140e:	7f 91       	pop	r23
    1410:	6f 91       	pop	r22
    1412:	5f 91       	pop	r21
    1414:	4f 91       	pop	r20
    1416:	3f 91       	pop	r19
    1418:	2f 91       	pop	r18
    141a:	1f 91       	pop	r17
    141c:	0f 91       	pop	r16
    141e:	0f 90       	pop	r0
    1420:	0f be       	out	0x3f, r0	; 63
    1422:	0f 90       	pop	r0
    1424:	1f 90       	pop	r1
    1426:	18 95       	reti

00001428 <__vector_16>:
    1428:	1f 92       	push	r1
    142a:	0f 92       	push	r0
    142c:	0f b6       	in	r0, 0x3f	; 63
    142e:	0f 92       	push	r0
    1430:	11 24       	eor	r1, r1
    1432:	0f 93       	push	r16
    1434:	1f 93       	push	r17
    1436:	2f 93       	push	r18
    1438:	3f 93       	push	r19
    143a:	4f 93       	push	r20
    143c:	5f 93       	push	r21
    143e:	6f 93       	push	r22
    1440:	7f 93       	push	r23
    1442:	8f 93       	push	r24
    1444:	9f 93       	push	r25
    1446:	af 93       	push	r26
    1448:	bf 93       	push	r27
    144a:	ef 93       	push	r30
    144c:	ff 93       	push	r31
    144e:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <overflows>
    1452:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <overflows+0x1>
    1456:	ac 01       	movw	r20, r24
    1458:	09 2e       	mov	r0, r25
    145a:	00 0c       	add	r0, r0
    145c:	66 0b       	sbc	r22, r22
    145e:	77 0b       	sbc	r23, r23
    1460:	9a 01       	movw	r18, r20
    1462:	11 27       	eor	r17, r17
    1464:	00 27       	eor	r16, r16
    1466:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    146a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    146e:	60 e0       	ldi	r22, 0x00	; 0
    1470:	70 e0       	ldi	r23, 0x00	; 0
    1472:	40 2b       	or	r20, r16
    1474:	51 2b       	or	r21, r17
    1476:	62 2b       	or	r22, r18
    1478:	73 2b       	or	r23, r19
    147a:	40 93 9c 01 	sts	0x019C, r20	; 0x80019c <timestamp>
    147e:	50 93 9d 01 	sts	0x019D, r21	; 0x80019d <timestamp+0x1>
    1482:	60 93 9e 01 	sts	0x019E, r22	; 0x80019e <timestamp+0x2>
    1486:	70 93 9f 01 	sts	0x019F, r23	; 0x80019f <timestamp+0x3>
    148a:	b0 9b       	sbis	0x16, 0	; 22
    148c:	1a c0       	rjmp	.+52     	; 0x14c2 <__vector_16+0x9a>
    148e:	01 96       	adiw	r24, 0x01	; 1
    1490:	09 2e       	mov	r0, r25
    1492:	00 0c       	add	r0, r0
    1494:	aa 0b       	sbc	r26, r26
    1496:	bb 0b       	sbc	r27, r27
    1498:	bc 01       	movw	r22, r24
    149a:	55 27       	eor	r21, r21
    149c:	44 27       	eor	r20, r20
    149e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    14a2:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    14a6:	a0 e0       	ldi	r26, 0x00	; 0
    14a8:	b0 e0       	ldi	r27, 0x00	; 0
    14aa:	84 2b       	or	r24, r20
    14ac:	95 2b       	or	r25, r21
    14ae:	a6 2b       	or	r26, r22
    14b0:	b7 2b       	or	r27, r23
    14b2:	80 93 9c 01 	sts	0x019C, r24	; 0x80019c <timestamp>
    14b6:	90 93 9d 01 	sts	0x019D, r25	; 0x80019d <timestamp+0x1>
    14ba:	a0 93 9e 01 	sts	0x019E, r26	; 0x80019e <timestamp+0x2>
    14be:	b0 93 9f 01 	sts	0x019F, r27	; 0x80019f <timestamp+0x3>
    14c2:	e0 91 52 02 	lds	r30, 0x0252	; 0x800252 <mtable+0x16>
    14c6:	f0 91 53 02 	lds	r31, 0x0253	; 0x800253 <mtable+0x17>
    14ca:	30 97       	sbiw	r30, 0x00	; 0
    14cc:	39 f0       	breq	.+14     	; 0x14dc <__vector_16+0xb4>
    14ce:	6b e0       	ldi	r22, 0x0B	; 11
    14d0:	70 e0       	ldi	r23, 0x00	; 0
    14d2:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <otable+0x16>
    14d6:	90 91 bb 01 	lds	r25, 0x01BB	; 0x8001bb <otable+0x17>
    14da:	09 95       	icall
    14dc:	0e 94 1b 05 	call	0xa36	; 0xa36 <schedule>
    14e0:	ff 91       	pop	r31
    14e2:	ef 91       	pop	r30
    14e4:	bf 91       	pop	r27
    14e6:	af 91       	pop	r26
    14e8:	9f 91       	pop	r25
    14ea:	8f 91       	pop	r24
    14ec:	7f 91       	pop	r23
    14ee:	6f 91       	pop	r22
    14f0:	5f 91       	pop	r21
    14f2:	4f 91       	pop	r20
    14f4:	3f 91       	pop	r19
    14f6:	2f 91       	pop	r18
    14f8:	1f 91       	pop	r17
    14fa:	0f 91       	pop	r16
    14fc:	0f 90       	pop	r0
    14fe:	0f be       	out	0x3f, r0	; 63
    1500:	0f 90       	pop	r0
    1502:	1f 90       	pop	r1
    1504:	18 95       	reti

00001506 <__vector_17>:
    1506:	1f 92       	push	r1
    1508:	0f 92       	push	r0
    150a:	0f b6       	in	r0, 0x3f	; 63
    150c:	0f 92       	push	r0
    150e:	11 24       	eor	r1, r1
    1510:	0f 93       	push	r16
    1512:	1f 93       	push	r17
    1514:	2f 93       	push	r18
    1516:	3f 93       	push	r19
    1518:	4f 93       	push	r20
    151a:	5f 93       	push	r21
    151c:	6f 93       	push	r22
    151e:	7f 93       	push	r23
    1520:	8f 93       	push	r24
    1522:	9f 93       	push	r25
    1524:	af 93       	push	r26
    1526:	bf 93       	push	r27
    1528:	ef 93       	push	r30
    152a:	ff 93       	push	r31
    152c:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <overflows>
    1530:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <overflows+0x1>
    1534:	ac 01       	movw	r20, r24
    1536:	09 2e       	mov	r0, r25
    1538:	00 0c       	add	r0, r0
    153a:	66 0b       	sbc	r22, r22
    153c:	77 0b       	sbc	r23, r23
    153e:	9a 01       	movw	r18, r20
    1540:	11 27       	eor	r17, r17
    1542:	00 27       	eor	r16, r16
    1544:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1548:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    154c:	60 e0       	ldi	r22, 0x00	; 0
    154e:	70 e0       	ldi	r23, 0x00	; 0
    1550:	40 2b       	or	r20, r16
    1552:	51 2b       	or	r21, r17
    1554:	62 2b       	or	r22, r18
    1556:	73 2b       	or	r23, r19
    1558:	40 93 9c 01 	sts	0x019C, r20	; 0x80019c <timestamp>
    155c:	50 93 9d 01 	sts	0x019D, r21	; 0x80019d <timestamp+0x1>
    1560:	60 93 9e 01 	sts	0x019E, r22	; 0x80019e <timestamp+0x2>
    1564:	70 93 9f 01 	sts	0x019F, r23	; 0x80019f <timestamp+0x3>
    1568:	b0 9b       	sbis	0x16, 0	; 22
    156a:	1a c0       	rjmp	.+52     	; 0x15a0 <__vector_17+0x9a>
    156c:	01 96       	adiw	r24, 0x01	; 1
    156e:	09 2e       	mov	r0, r25
    1570:	00 0c       	add	r0, r0
    1572:	aa 0b       	sbc	r26, r26
    1574:	bb 0b       	sbc	r27, r27
    1576:	bc 01       	movw	r22, r24
    1578:	55 27       	eor	r21, r21
    157a:	44 27       	eor	r20, r20
    157c:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1580:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1584:	a0 e0       	ldi	r26, 0x00	; 0
    1586:	b0 e0       	ldi	r27, 0x00	; 0
    1588:	84 2b       	or	r24, r20
    158a:	95 2b       	or	r25, r21
    158c:	a6 2b       	or	r26, r22
    158e:	b7 2b       	or	r27, r23
    1590:	80 93 9c 01 	sts	0x019C, r24	; 0x80019c <timestamp>
    1594:	90 93 9d 01 	sts	0x019D, r25	; 0x80019d <timestamp+0x1>
    1598:	a0 93 9e 01 	sts	0x019E, r26	; 0x80019e <timestamp+0x2>
    159c:	b0 93 9f 01 	sts	0x019F, r27	; 0x80019f <timestamp+0x3>
    15a0:	e0 91 54 02 	lds	r30, 0x0254	; 0x800254 <mtable+0x18>
    15a4:	f0 91 55 02 	lds	r31, 0x0255	; 0x800255 <mtable+0x19>
    15a8:	30 97       	sbiw	r30, 0x00	; 0
    15aa:	39 f0       	breq	.+14     	; 0x15ba <__vector_17+0xb4>
    15ac:	6c e0       	ldi	r22, 0x0C	; 12
    15ae:	70 e0       	ldi	r23, 0x00	; 0
    15b0:	80 91 bc 01 	lds	r24, 0x01BC	; 0x8001bc <otable+0x18>
    15b4:	90 91 bd 01 	lds	r25, 0x01BD	; 0x8001bd <otable+0x19>
    15b8:	09 95       	icall
    15ba:	0e 94 1b 05 	call	0xa36	; 0xa36 <schedule>
    15be:	ff 91       	pop	r31
    15c0:	ef 91       	pop	r30
    15c2:	bf 91       	pop	r27
    15c4:	af 91       	pop	r26
    15c6:	9f 91       	pop	r25
    15c8:	8f 91       	pop	r24
    15ca:	7f 91       	pop	r23
    15cc:	6f 91       	pop	r22
    15ce:	5f 91       	pop	r21
    15d0:	4f 91       	pop	r20
    15d2:	3f 91       	pop	r19
    15d4:	2f 91       	pop	r18
    15d6:	1f 91       	pop	r17
    15d8:	0f 91       	pop	r16
    15da:	0f 90       	pop	r0
    15dc:	0f be       	out	0x3f, r0	; 63
    15de:	0f 90       	pop	r0
    15e0:	1f 90       	pop	r1
    15e2:	18 95       	reti

000015e4 <__vector_18>:
    15e4:	1f 92       	push	r1
    15e6:	0f 92       	push	r0
    15e8:	0f b6       	in	r0, 0x3f	; 63
    15ea:	0f 92       	push	r0
    15ec:	11 24       	eor	r1, r1
    15ee:	0f 93       	push	r16
    15f0:	1f 93       	push	r17
    15f2:	2f 93       	push	r18
    15f4:	3f 93       	push	r19
    15f6:	4f 93       	push	r20
    15f8:	5f 93       	push	r21
    15fa:	6f 93       	push	r22
    15fc:	7f 93       	push	r23
    15fe:	8f 93       	push	r24
    1600:	9f 93       	push	r25
    1602:	af 93       	push	r26
    1604:	bf 93       	push	r27
    1606:	ef 93       	push	r30
    1608:	ff 93       	push	r31
    160a:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <overflows>
    160e:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <overflows+0x1>
    1612:	ac 01       	movw	r20, r24
    1614:	09 2e       	mov	r0, r25
    1616:	00 0c       	add	r0, r0
    1618:	66 0b       	sbc	r22, r22
    161a:	77 0b       	sbc	r23, r23
    161c:	9a 01       	movw	r18, r20
    161e:	11 27       	eor	r17, r17
    1620:	00 27       	eor	r16, r16
    1622:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1626:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    162a:	60 e0       	ldi	r22, 0x00	; 0
    162c:	70 e0       	ldi	r23, 0x00	; 0
    162e:	40 2b       	or	r20, r16
    1630:	51 2b       	or	r21, r17
    1632:	62 2b       	or	r22, r18
    1634:	73 2b       	or	r23, r19
    1636:	40 93 9c 01 	sts	0x019C, r20	; 0x80019c <timestamp>
    163a:	50 93 9d 01 	sts	0x019D, r21	; 0x80019d <timestamp+0x1>
    163e:	60 93 9e 01 	sts	0x019E, r22	; 0x80019e <timestamp+0x2>
    1642:	70 93 9f 01 	sts	0x019F, r23	; 0x80019f <timestamp+0x3>
    1646:	b0 9b       	sbis	0x16, 0	; 22
    1648:	1a c0       	rjmp	.+52     	; 0x167e <__vector_18+0x9a>
    164a:	01 96       	adiw	r24, 0x01	; 1
    164c:	09 2e       	mov	r0, r25
    164e:	00 0c       	add	r0, r0
    1650:	aa 0b       	sbc	r26, r26
    1652:	bb 0b       	sbc	r27, r27
    1654:	bc 01       	movw	r22, r24
    1656:	55 27       	eor	r21, r21
    1658:	44 27       	eor	r20, r20
    165a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    165e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1662:	a0 e0       	ldi	r26, 0x00	; 0
    1664:	b0 e0       	ldi	r27, 0x00	; 0
    1666:	84 2b       	or	r24, r20
    1668:	95 2b       	or	r25, r21
    166a:	a6 2b       	or	r26, r22
    166c:	b7 2b       	or	r27, r23
    166e:	80 93 9c 01 	sts	0x019C, r24	; 0x80019c <timestamp>
    1672:	90 93 9d 01 	sts	0x019D, r25	; 0x80019d <timestamp+0x1>
    1676:	a0 93 9e 01 	sts	0x019E, r26	; 0x80019e <timestamp+0x2>
    167a:	b0 93 9f 01 	sts	0x019F, r27	; 0x80019f <timestamp+0x3>
    167e:	e0 91 56 02 	lds	r30, 0x0256	; 0x800256 <mtable+0x1a>
    1682:	f0 91 57 02 	lds	r31, 0x0257	; 0x800257 <mtable+0x1b>
    1686:	30 97       	sbiw	r30, 0x00	; 0
    1688:	39 f0       	breq	.+14     	; 0x1698 <__vector_18+0xb4>
    168a:	6d e0       	ldi	r22, 0x0D	; 13
    168c:	70 e0       	ldi	r23, 0x00	; 0
    168e:	80 91 be 01 	lds	r24, 0x01BE	; 0x8001be <otable+0x1a>
    1692:	90 91 bf 01 	lds	r25, 0x01BF	; 0x8001bf <otable+0x1b>
    1696:	09 95       	icall
    1698:	0e 94 1b 05 	call	0xa36	; 0xa36 <schedule>
    169c:	ff 91       	pop	r31
    169e:	ef 91       	pop	r30
    16a0:	bf 91       	pop	r27
    16a2:	af 91       	pop	r26
    16a4:	9f 91       	pop	r25
    16a6:	8f 91       	pop	r24
    16a8:	7f 91       	pop	r23
    16aa:	6f 91       	pop	r22
    16ac:	5f 91       	pop	r21
    16ae:	4f 91       	pop	r20
    16b0:	3f 91       	pop	r19
    16b2:	2f 91       	pop	r18
    16b4:	1f 91       	pop	r17
    16b6:	0f 91       	pop	r16
    16b8:	0f 90       	pop	r0
    16ba:	0f be       	out	0x3f, r0	; 63
    16bc:	0f 90       	pop	r0
    16be:	1f 90       	pop	r1
    16c0:	18 95       	reti

000016c2 <__vector_19>:
    16c2:	1f 92       	push	r1
    16c4:	0f 92       	push	r0
    16c6:	0f b6       	in	r0, 0x3f	; 63
    16c8:	0f 92       	push	r0
    16ca:	11 24       	eor	r1, r1
    16cc:	0f 93       	push	r16
    16ce:	1f 93       	push	r17
    16d0:	2f 93       	push	r18
    16d2:	3f 93       	push	r19
    16d4:	4f 93       	push	r20
    16d6:	5f 93       	push	r21
    16d8:	6f 93       	push	r22
    16da:	7f 93       	push	r23
    16dc:	8f 93       	push	r24
    16de:	9f 93       	push	r25
    16e0:	af 93       	push	r26
    16e2:	bf 93       	push	r27
    16e4:	ef 93       	push	r30
    16e6:	ff 93       	push	r31
    16e8:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <overflows>
    16ec:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <overflows+0x1>
    16f0:	ac 01       	movw	r20, r24
    16f2:	09 2e       	mov	r0, r25
    16f4:	00 0c       	add	r0, r0
    16f6:	66 0b       	sbc	r22, r22
    16f8:	77 0b       	sbc	r23, r23
    16fa:	9a 01       	movw	r18, r20
    16fc:	11 27       	eor	r17, r17
    16fe:	00 27       	eor	r16, r16
    1700:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1704:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1708:	60 e0       	ldi	r22, 0x00	; 0
    170a:	70 e0       	ldi	r23, 0x00	; 0
    170c:	40 2b       	or	r20, r16
    170e:	51 2b       	or	r21, r17
    1710:	62 2b       	or	r22, r18
    1712:	73 2b       	or	r23, r19
    1714:	40 93 9c 01 	sts	0x019C, r20	; 0x80019c <timestamp>
    1718:	50 93 9d 01 	sts	0x019D, r21	; 0x80019d <timestamp+0x1>
    171c:	60 93 9e 01 	sts	0x019E, r22	; 0x80019e <timestamp+0x2>
    1720:	70 93 9f 01 	sts	0x019F, r23	; 0x80019f <timestamp+0x3>
    1724:	b0 9b       	sbis	0x16, 0	; 22
    1726:	1a c0       	rjmp	.+52     	; 0x175c <__vector_19+0x9a>
    1728:	01 96       	adiw	r24, 0x01	; 1
    172a:	09 2e       	mov	r0, r25
    172c:	00 0c       	add	r0, r0
    172e:	aa 0b       	sbc	r26, r26
    1730:	bb 0b       	sbc	r27, r27
    1732:	bc 01       	movw	r22, r24
    1734:	55 27       	eor	r21, r21
    1736:	44 27       	eor	r20, r20
    1738:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    173c:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1740:	a0 e0       	ldi	r26, 0x00	; 0
    1742:	b0 e0       	ldi	r27, 0x00	; 0
    1744:	84 2b       	or	r24, r20
    1746:	95 2b       	or	r25, r21
    1748:	a6 2b       	or	r26, r22
    174a:	b7 2b       	or	r27, r23
    174c:	80 93 9c 01 	sts	0x019C, r24	; 0x80019c <timestamp>
    1750:	90 93 9d 01 	sts	0x019D, r25	; 0x80019d <timestamp+0x1>
    1754:	a0 93 9e 01 	sts	0x019E, r26	; 0x80019e <timestamp+0x2>
    1758:	b0 93 9f 01 	sts	0x019F, r27	; 0x80019f <timestamp+0x3>
    175c:	e0 91 58 02 	lds	r30, 0x0258	; 0x800258 <mtable+0x1c>
    1760:	f0 91 59 02 	lds	r31, 0x0259	; 0x800259 <mtable+0x1d>
    1764:	30 97       	sbiw	r30, 0x00	; 0
    1766:	39 f0       	breq	.+14     	; 0x1776 <__vector_19+0xb4>
    1768:	6e e0       	ldi	r22, 0x0E	; 14
    176a:	70 e0       	ldi	r23, 0x00	; 0
    176c:	80 91 c0 01 	lds	r24, 0x01C0	; 0x8001c0 <otable+0x1c>
    1770:	90 91 c1 01 	lds	r25, 0x01C1	; 0x8001c1 <otable+0x1d>
    1774:	09 95       	icall
    1776:	0e 94 1b 05 	call	0xa36	; 0xa36 <schedule>
    177a:	ff 91       	pop	r31
    177c:	ef 91       	pop	r30
    177e:	bf 91       	pop	r27
    1780:	af 91       	pop	r26
    1782:	9f 91       	pop	r25
    1784:	8f 91       	pop	r24
    1786:	7f 91       	pop	r23
    1788:	6f 91       	pop	r22
    178a:	5f 91       	pop	r21
    178c:	4f 91       	pop	r20
    178e:	3f 91       	pop	r19
    1790:	2f 91       	pop	r18
    1792:	1f 91       	pop	r17
    1794:	0f 91       	pop	r16
    1796:	0f 90       	pop	r0
    1798:	0f be       	out	0x3f, r0	; 63
    179a:	0f 90       	pop	r0
    179c:	1f 90       	pop	r1
    179e:	18 95       	reti

000017a0 <__vector_20>:
    17a0:	1f 92       	push	r1
    17a2:	0f 92       	push	r0
    17a4:	0f b6       	in	r0, 0x3f	; 63
    17a6:	0f 92       	push	r0
    17a8:	11 24       	eor	r1, r1
    17aa:	0f 93       	push	r16
    17ac:	1f 93       	push	r17
    17ae:	2f 93       	push	r18
    17b0:	3f 93       	push	r19
    17b2:	4f 93       	push	r20
    17b4:	5f 93       	push	r21
    17b6:	6f 93       	push	r22
    17b8:	7f 93       	push	r23
    17ba:	8f 93       	push	r24
    17bc:	9f 93       	push	r25
    17be:	af 93       	push	r26
    17c0:	bf 93       	push	r27
    17c2:	ef 93       	push	r30
    17c4:	ff 93       	push	r31
    17c6:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <overflows>
    17ca:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <overflows+0x1>
    17ce:	ac 01       	movw	r20, r24
    17d0:	09 2e       	mov	r0, r25
    17d2:	00 0c       	add	r0, r0
    17d4:	66 0b       	sbc	r22, r22
    17d6:	77 0b       	sbc	r23, r23
    17d8:	9a 01       	movw	r18, r20
    17da:	11 27       	eor	r17, r17
    17dc:	00 27       	eor	r16, r16
    17de:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    17e2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    17e6:	60 e0       	ldi	r22, 0x00	; 0
    17e8:	70 e0       	ldi	r23, 0x00	; 0
    17ea:	40 2b       	or	r20, r16
    17ec:	51 2b       	or	r21, r17
    17ee:	62 2b       	or	r22, r18
    17f0:	73 2b       	or	r23, r19
    17f2:	40 93 9c 01 	sts	0x019C, r20	; 0x80019c <timestamp>
    17f6:	50 93 9d 01 	sts	0x019D, r21	; 0x80019d <timestamp+0x1>
    17fa:	60 93 9e 01 	sts	0x019E, r22	; 0x80019e <timestamp+0x2>
    17fe:	70 93 9f 01 	sts	0x019F, r23	; 0x80019f <timestamp+0x3>
    1802:	b0 9b       	sbis	0x16, 0	; 22
    1804:	1a c0       	rjmp	.+52     	; 0x183a <__vector_20+0x9a>
    1806:	01 96       	adiw	r24, 0x01	; 1
    1808:	09 2e       	mov	r0, r25
    180a:	00 0c       	add	r0, r0
    180c:	aa 0b       	sbc	r26, r26
    180e:	bb 0b       	sbc	r27, r27
    1810:	bc 01       	movw	r22, r24
    1812:	55 27       	eor	r21, r21
    1814:	44 27       	eor	r20, r20
    1816:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    181a:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    181e:	a0 e0       	ldi	r26, 0x00	; 0
    1820:	b0 e0       	ldi	r27, 0x00	; 0
    1822:	84 2b       	or	r24, r20
    1824:	95 2b       	or	r25, r21
    1826:	a6 2b       	or	r26, r22
    1828:	b7 2b       	or	r27, r23
    182a:	80 93 9c 01 	sts	0x019C, r24	; 0x80019c <timestamp>
    182e:	90 93 9d 01 	sts	0x019D, r25	; 0x80019d <timestamp+0x1>
    1832:	a0 93 9e 01 	sts	0x019E, r26	; 0x80019e <timestamp+0x2>
    1836:	b0 93 9f 01 	sts	0x019F, r27	; 0x80019f <timestamp+0x3>
    183a:	e0 91 5a 02 	lds	r30, 0x025A	; 0x80025a <mtable+0x1e>
    183e:	f0 91 5b 02 	lds	r31, 0x025B	; 0x80025b <mtable+0x1f>
    1842:	30 97       	sbiw	r30, 0x00	; 0
    1844:	39 f0       	breq	.+14     	; 0x1854 <__vector_20+0xb4>
    1846:	6f e0       	ldi	r22, 0x0F	; 15
    1848:	70 e0       	ldi	r23, 0x00	; 0
    184a:	80 91 c2 01 	lds	r24, 0x01C2	; 0x8001c2 <otable+0x1e>
    184e:	90 91 c3 01 	lds	r25, 0x01C3	; 0x8001c3 <otable+0x1f>
    1852:	09 95       	icall
    1854:	0e 94 1b 05 	call	0xa36	; 0xa36 <schedule>
    1858:	ff 91       	pop	r31
    185a:	ef 91       	pop	r30
    185c:	bf 91       	pop	r27
    185e:	af 91       	pop	r26
    1860:	9f 91       	pop	r25
    1862:	8f 91       	pop	r24
    1864:	7f 91       	pop	r23
    1866:	6f 91       	pop	r22
    1868:	5f 91       	pop	r21
    186a:	4f 91       	pop	r20
    186c:	3f 91       	pop	r19
    186e:	2f 91       	pop	r18
    1870:	1f 91       	pop	r17
    1872:	0f 91       	pop	r16
    1874:	0f 90       	pop	r0
    1876:	0f be       	out	0x3f, r0	; 63
    1878:	0f 90       	pop	r0
    187a:	1f 90       	pop	r1
    187c:	18 95       	reti

0000187e <__vector_21>:
    187e:	1f 92       	push	r1
    1880:	0f 92       	push	r0
    1882:	0f b6       	in	r0, 0x3f	; 63
    1884:	0f 92       	push	r0
    1886:	11 24       	eor	r1, r1
    1888:	0f 93       	push	r16
    188a:	1f 93       	push	r17
    188c:	2f 93       	push	r18
    188e:	3f 93       	push	r19
    1890:	4f 93       	push	r20
    1892:	5f 93       	push	r21
    1894:	6f 93       	push	r22
    1896:	7f 93       	push	r23
    1898:	8f 93       	push	r24
    189a:	9f 93       	push	r25
    189c:	af 93       	push	r26
    189e:	bf 93       	push	r27
    18a0:	ef 93       	push	r30
    18a2:	ff 93       	push	r31
    18a4:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <overflows>
    18a8:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <overflows+0x1>
    18ac:	ac 01       	movw	r20, r24
    18ae:	09 2e       	mov	r0, r25
    18b0:	00 0c       	add	r0, r0
    18b2:	66 0b       	sbc	r22, r22
    18b4:	77 0b       	sbc	r23, r23
    18b6:	9a 01       	movw	r18, r20
    18b8:	11 27       	eor	r17, r17
    18ba:	00 27       	eor	r16, r16
    18bc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    18c0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    18c4:	60 e0       	ldi	r22, 0x00	; 0
    18c6:	70 e0       	ldi	r23, 0x00	; 0
    18c8:	40 2b       	or	r20, r16
    18ca:	51 2b       	or	r21, r17
    18cc:	62 2b       	or	r22, r18
    18ce:	73 2b       	or	r23, r19
    18d0:	40 93 9c 01 	sts	0x019C, r20	; 0x80019c <timestamp>
    18d4:	50 93 9d 01 	sts	0x019D, r21	; 0x80019d <timestamp+0x1>
    18d8:	60 93 9e 01 	sts	0x019E, r22	; 0x80019e <timestamp+0x2>
    18dc:	70 93 9f 01 	sts	0x019F, r23	; 0x80019f <timestamp+0x3>
    18e0:	b0 9b       	sbis	0x16, 0	; 22
    18e2:	1a c0       	rjmp	.+52     	; 0x1918 <__vector_21+0x9a>
    18e4:	01 96       	adiw	r24, 0x01	; 1
    18e6:	09 2e       	mov	r0, r25
    18e8:	00 0c       	add	r0, r0
    18ea:	aa 0b       	sbc	r26, r26
    18ec:	bb 0b       	sbc	r27, r27
    18ee:	bc 01       	movw	r22, r24
    18f0:	55 27       	eor	r21, r21
    18f2:	44 27       	eor	r20, r20
    18f4:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    18f8:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    18fc:	a0 e0       	ldi	r26, 0x00	; 0
    18fe:	b0 e0       	ldi	r27, 0x00	; 0
    1900:	84 2b       	or	r24, r20
    1902:	95 2b       	or	r25, r21
    1904:	a6 2b       	or	r26, r22
    1906:	b7 2b       	or	r27, r23
    1908:	80 93 9c 01 	sts	0x019C, r24	; 0x80019c <timestamp>
    190c:	90 93 9d 01 	sts	0x019D, r25	; 0x80019d <timestamp+0x1>
    1910:	a0 93 9e 01 	sts	0x019E, r26	; 0x80019e <timestamp+0x2>
    1914:	b0 93 9f 01 	sts	0x019F, r27	; 0x80019f <timestamp+0x3>
    1918:	e0 91 5c 02 	lds	r30, 0x025C	; 0x80025c <mtable+0x20>
    191c:	f0 91 5d 02 	lds	r31, 0x025D	; 0x80025d <mtable+0x21>
    1920:	30 97       	sbiw	r30, 0x00	; 0
    1922:	39 f0       	breq	.+14     	; 0x1932 <__vector_21+0xb4>
    1924:	60 e1       	ldi	r22, 0x10	; 16
    1926:	70 e0       	ldi	r23, 0x00	; 0
    1928:	80 91 c4 01 	lds	r24, 0x01C4	; 0x8001c4 <otable+0x20>
    192c:	90 91 c5 01 	lds	r25, 0x01C5	; 0x8001c5 <otable+0x21>
    1930:	09 95       	icall
    1932:	0e 94 1b 05 	call	0xa36	; 0xa36 <schedule>
    1936:	ff 91       	pop	r31
    1938:	ef 91       	pop	r30
    193a:	bf 91       	pop	r27
    193c:	af 91       	pop	r26
    193e:	9f 91       	pop	r25
    1940:	8f 91       	pop	r24
    1942:	7f 91       	pop	r23
    1944:	6f 91       	pop	r22
    1946:	5f 91       	pop	r21
    1948:	4f 91       	pop	r20
    194a:	3f 91       	pop	r19
    194c:	2f 91       	pop	r18
    194e:	1f 91       	pop	r17
    1950:	0f 91       	pop	r16
    1952:	0f 90       	pop	r0
    1954:	0f be       	out	0x3f, r0	; 63
    1956:	0f 90       	pop	r0
    1958:	1f 90       	pop	r1
    195a:	18 95       	reti

0000195c <__vector_22>:
    195c:	1f 92       	push	r1
    195e:	0f 92       	push	r0
    1960:	0f b6       	in	r0, 0x3f	; 63
    1962:	0f 92       	push	r0
    1964:	11 24       	eor	r1, r1
    1966:	0f 93       	push	r16
    1968:	1f 93       	push	r17
    196a:	2f 93       	push	r18
    196c:	3f 93       	push	r19
    196e:	4f 93       	push	r20
    1970:	5f 93       	push	r21
    1972:	6f 93       	push	r22
    1974:	7f 93       	push	r23
    1976:	8f 93       	push	r24
    1978:	9f 93       	push	r25
    197a:	af 93       	push	r26
    197c:	bf 93       	push	r27
    197e:	ef 93       	push	r30
    1980:	ff 93       	push	r31
    1982:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <overflows>
    1986:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <overflows+0x1>
    198a:	ac 01       	movw	r20, r24
    198c:	09 2e       	mov	r0, r25
    198e:	00 0c       	add	r0, r0
    1990:	66 0b       	sbc	r22, r22
    1992:	77 0b       	sbc	r23, r23
    1994:	9a 01       	movw	r18, r20
    1996:	11 27       	eor	r17, r17
    1998:	00 27       	eor	r16, r16
    199a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    199e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    19a2:	60 e0       	ldi	r22, 0x00	; 0
    19a4:	70 e0       	ldi	r23, 0x00	; 0
    19a6:	40 2b       	or	r20, r16
    19a8:	51 2b       	or	r21, r17
    19aa:	62 2b       	or	r22, r18
    19ac:	73 2b       	or	r23, r19
    19ae:	40 93 9c 01 	sts	0x019C, r20	; 0x80019c <timestamp>
    19b2:	50 93 9d 01 	sts	0x019D, r21	; 0x80019d <timestamp+0x1>
    19b6:	60 93 9e 01 	sts	0x019E, r22	; 0x80019e <timestamp+0x2>
    19ba:	70 93 9f 01 	sts	0x019F, r23	; 0x80019f <timestamp+0x3>
    19be:	b0 9b       	sbis	0x16, 0	; 22
    19c0:	1a c0       	rjmp	.+52     	; 0x19f6 <__vector_22+0x9a>
    19c2:	01 96       	adiw	r24, 0x01	; 1
    19c4:	09 2e       	mov	r0, r25
    19c6:	00 0c       	add	r0, r0
    19c8:	aa 0b       	sbc	r26, r26
    19ca:	bb 0b       	sbc	r27, r27
    19cc:	bc 01       	movw	r22, r24
    19ce:	55 27       	eor	r21, r21
    19d0:	44 27       	eor	r20, r20
    19d2:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    19d6:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    19da:	a0 e0       	ldi	r26, 0x00	; 0
    19dc:	b0 e0       	ldi	r27, 0x00	; 0
    19de:	84 2b       	or	r24, r20
    19e0:	95 2b       	or	r25, r21
    19e2:	a6 2b       	or	r26, r22
    19e4:	b7 2b       	or	r27, r23
    19e6:	80 93 9c 01 	sts	0x019C, r24	; 0x80019c <timestamp>
    19ea:	90 93 9d 01 	sts	0x019D, r25	; 0x80019d <timestamp+0x1>
    19ee:	a0 93 9e 01 	sts	0x019E, r26	; 0x80019e <timestamp+0x2>
    19f2:	b0 93 9f 01 	sts	0x019F, r27	; 0x80019f <timestamp+0x3>
    19f6:	e0 91 5e 02 	lds	r30, 0x025E	; 0x80025e <mtable+0x22>
    19fa:	f0 91 5f 02 	lds	r31, 0x025F	; 0x80025f <mtable+0x23>
    19fe:	30 97       	sbiw	r30, 0x00	; 0
    1a00:	39 f0       	breq	.+14     	; 0x1a10 <__vector_22+0xb4>
    1a02:	61 e1       	ldi	r22, 0x11	; 17
    1a04:	70 e0       	ldi	r23, 0x00	; 0
    1a06:	80 91 c6 01 	lds	r24, 0x01C6	; 0x8001c6 <otable+0x22>
    1a0a:	90 91 c7 01 	lds	r25, 0x01C7	; 0x8001c7 <otable+0x23>
    1a0e:	09 95       	icall
    1a10:	0e 94 1b 05 	call	0xa36	; 0xa36 <schedule>
    1a14:	ff 91       	pop	r31
    1a16:	ef 91       	pop	r30
    1a18:	bf 91       	pop	r27
    1a1a:	af 91       	pop	r26
    1a1c:	9f 91       	pop	r25
    1a1e:	8f 91       	pop	r24
    1a20:	7f 91       	pop	r23
    1a22:	6f 91       	pop	r22
    1a24:	5f 91       	pop	r21
    1a26:	4f 91       	pop	r20
    1a28:	3f 91       	pop	r19
    1a2a:	2f 91       	pop	r18
    1a2c:	1f 91       	pop	r17
    1a2e:	0f 91       	pop	r16
    1a30:	0f 90       	pop	r0
    1a32:	0f be       	out	0x3f, r0	; 63
    1a34:	0f 90       	pop	r0
    1a36:	1f 90       	pop	r1
    1a38:	18 95       	reti

00001a3a <idle>:
    1a3a:	0e 94 1b 05 	call	0xa36	; 0xa36 <schedule>
    1a3e:	78 94       	sei
    1a40:	81 e0       	ldi	r24, 0x01	; 1
    1a42:	83 bf       	out	0x33, r24	; 51
    1a44:	88 95       	sleep
    1a46:	fc cf       	rjmp	.-8      	; 0x1a40 <idle+0x6>

00001a48 <__vector_9>:
    1a48:	1f 92       	push	r1
    1a4a:	0f 92       	push	r0
    1a4c:	0f b6       	in	r0, 0x3f	; 63
    1a4e:	0f 92       	push	r0
    1a50:	11 24       	eor	r1, r1
    1a52:	2f 93       	push	r18
    1a54:	3f 93       	push	r19
    1a56:	4f 93       	push	r20
    1a58:	5f 93       	push	r21
    1a5a:	6f 93       	push	r22
    1a5c:	7f 93       	push	r23
    1a5e:	8f 93       	push	r24
    1a60:	9f 93       	push	r25
    1a62:	ef 93       	push	r30
    1a64:	ff 93       	push	r31
    1a66:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <overflows>
    1a6a:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <overflows+0x1>
    1a6e:	01 96       	adiw	r24, 0x01	; 1
    1a70:	90 93 9b 01 	sts	0x019B, r25	; 0x80019b <overflows+0x1>
    1a74:	80 93 9a 01 	sts	0x019A, r24	; 0x80019a <overflows>
    1a78:	e0 91 a0 01 	lds	r30, 0x01A0	; 0x8001a0 <timerQ>
    1a7c:	f0 91 a1 01 	lds	r31, 0x01A1	; 0x8001a1 <timerQ+0x1>
    1a80:	30 97       	sbiw	r30, 0x00	; 0
    1a82:	01 f1       	breq	.+64     	; 0x1ac4 <__vector_9+0x7c>
    1a84:	42 81       	ldd	r20, Z+2	; 0x02
    1a86:	53 81       	ldd	r21, Z+3	; 0x03
    1a88:	64 81       	ldd	r22, Z+4	; 0x04
    1a8a:	75 81       	ldd	r23, Z+5	; 0x05
    1a8c:	86 17       	cp	r24, r22
    1a8e:	97 07       	cpc	r25, r23
    1a90:	c9 f4       	brne	.+50     	; 0x1ac4 <__vector_9+0x7c>
    1a92:	ca 01       	movw	r24, r20
    1a94:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1a98:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1a9c:	42 1b       	sub	r20, r18
    1a9e:	53 0b       	sbc	r21, r19
    1aa0:	41 30       	cpi	r20, 0x01	; 1
    1aa2:	51 05       	cpc	r21, r1
    1aa4:	29 f4       	brne	.+10     	; 0x1ab0 <__vector_9+0x68>
    1aa6:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1aaa:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1aae:	01 96       	adiw	r24, 0x01	; 1
    1ab0:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1ab4:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1ab8:	ef e6       	ldi	r30, 0x6F	; 111
    1aba:	f0 e0       	ldi	r31, 0x00	; 0
    1abc:	80 81       	ld	r24, Z
    1abe:	82 60       	ori	r24, 0x02	; 2
    1ac0:	80 83       	st	Z, r24
    1ac2:	05 c0       	rjmp	.+10     	; 0x1ace <__vector_9+0x86>
    1ac4:	ef e6       	ldi	r30, 0x6F	; 111
    1ac6:	f0 e0       	ldi	r31, 0x00	; 0
    1ac8:	80 81       	ld	r24, Z
    1aca:	8d 7f       	andi	r24, 0xFD	; 253
    1acc:	80 83       	st	Z, r24
    1ace:	ff 91       	pop	r31
    1ad0:	ef 91       	pop	r30
    1ad2:	9f 91       	pop	r25
    1ad4:	8f 91       	pop	r24
    1ad6:	7f 91       	pop	r23
    1ad8:	6f 91       	pop	r22
    1ada:	5f 91       	pop	r21
    1adc:	4f 91       	pop	r20
    1ade:	3f 91       	pop	r19
    1ae0:	2f 91       	pop	r18
    1ae2:	0f 90       	pop	r0
    1ae4:	0f be       	out	0x3f, r0	; 63
    1ae6:	0f 90       	pop	r0
    1ae8:	1f 90       	pop	r1
    1aea:	18 95       	reti

00001aec <__vector_7>:
    1aec:	1f 92       	push	r1
    1aee:	0f 92       	push	r0
    1af0:	0f b6       	in	r0, 0x3f	; 63
    1af2:	0f 92       	push	r0
    1af4:	11 24       	eor	r1, r1
    1af6:	cf 92       	push	r12
    1af8:	df 92       	push	r13
    1afa:	ef 92       	push	r14
    1afc:	ff 92       	push	r15
    1afe:	2f 93       	push	r18
    1b00:	3f 93       	push	r19
    1b02:	4f 93       	push	r20
    1b04:	5f 93       	push	r21
    1b06:	6f 93       	push	r22
    1b08:	7f 93       	push	r23
    1b0a:	8f 93       	push	r24
    1b0c:	9f 93       	push	r25
    1b0e:	af 93       	push	r26
    1b10:	bf 93       	push	r27
    1b12:	ef 93       	push	r30
    1b14:	ff 93       	push	r31
    1b16:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <overflows>
    1b1a:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <overflows+0x1>
    1b1e:	6c 01       	movw	r12, r24
    1b20:	09 2e       	mov	r0, r25
    1b22:	00 0c       	add	r0, r0
    1b24:	ee 08       	sbc	r14, r14
    1b26:	ff 08       	sbc	r15, r15
    1b28:	76 01       	movw	r14, r12
    1b2a:	dd 24       	eor	r13, r13
    1b2c:	cc 24       	eor	r12, r12
    1b2e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1b32:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b36:	60 e0       	ldi	r22, 0x00	; 0
    1b38:	70 e0       	ldi	r23, 0x00	; 0
    1b3a:	c4 2a       	or	r12, r20
    1b3c:	d5 2a       	or	r13, r21
    1b3e:	e6 2a       	or	r14, r22
    1b40:	f7 2a       	or	r15, r23
    1b42:	b0 9b       	sbis	0x16, 0	; 22
    1b44:	1e c0       	rjmp	.+60     	; 0x1b82 <__vector_7+0x96>
    1b46:	6c 01       	movw	r12, r24
    1b48:	2f ef       	ldi	r18, 0xFF	; 255
    1b4a:	c2 1a       	sub	r12, r18
    1b4c:	d2 0a       	sbc	r13, r18
    1b4e:	0d 2c       	mov	r0, r13
    1b50:	00 0c       	add	r0, r0
    1b52:	ee 08       	sbc	r14, r14
    1b54:	ff 08       	sbc	r15, r15
    1b56:	d6 01       	movw	r26, r12
    1b58:	99 27       	eor	r25, r25
    1b5a:	88 27       	eor	r24, r24
    1b5c:	c0 90 84 00 	lds	r12, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1b60:	d0 90 85 00 	lds	r13, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b64:	e1 2c       	mov	r14, r1
    1b66:	f1 2c       	mov	r15, r1
    1b68:	c8 2a       	or	r12, r24
    1b6a:	d9 2a       	or	r13, r25
    1b6c:	ea 2a       	or	r14, r26
    1b6e:	fb 2a       	or	r15, r27
    1b70:	08 c0       	rjmp	.+16     	; 0x1b82 <__vector_7+0x96>
    1b72:	80 ea       	ldi	r24, 0xA0	; 160
    1b74:	91 e0       	ldi	r25, 0x01	; 1
    1b76:	0e 94 e6 04 	call	0x9cc	; 0x9cc <dequeue>
    1b7a:	62 ea       	ldi	r22, 0xA2	; 162
    1b7c:	71 e0       	ldi	r23, 0x01	; 1
    1b7e:	0e 94 84 04 	call	0x908	; 0x908 <enqueueByDeadline>
    1b82:	e0 91 a0 01 	lds	r30, 0x01A0	; 0x8001a0 <timerQ>
    1b86:	f0 91 a1 01 	lds	r31, 0x01A1	; 0x8001a1 <timerQ+0x1>
    1b8a:	30 97       	sbiw	r30, 0x00	; 0
    1b8c:	69 f0       	breq	.+26     	; 0x1ba8 <__vector_7+0xbc>
    1b8e:	82 81       	ldd	r24, Z+2	; 0x02
    1b90:	93 81       	ldd	r25, Z+3	; 0x03
    1b92:	a4 81       	ldd	r26, Z+4	; 0x04
    1b94:	b5 81       	ldd	r27, Z+5	; 0x05
    1b96:	8c 19       	sub	r24, r12
    1b98:	9d 09       	sbc	r25, r13
    1b9a:	ae 09       	sbc	r26, r14
    1b9c:	bf 09       	sbc	r27, r15
    1b9e:	18 16       	cp	r1, r24
    1ba0:	19 06       	cpc	r1, r25
    1ba2:	1a 06       	cpc	r1, r26
    1ba4:	1b 06       	cpc	r1, r27
    1ba6:	2c f7       	brge	.-54     	; 0x1b72 <__vector_7+0x86>
    1ba8:	30 97       	sbiw	r30, 0x00	; 0
    1baa:	21 f1       	breq	.+72     	; 0x1bf4 <__vector_7+0x108>
    1bac:	82 81       	ldd	r24, Z+2	; 0x02
    1bae:	93 81       	ldd	r25, Z+3	; 0x03
    1bb0:	a4 81       	ldd	r26, Z+4	; 0x04
    1bb2:	b5 81       	ldd	r27, Z+5	; 0x05
    1bb4:	20 91 9a 01 	lds	r18, 0x019A	; 0x80019a <overflows>
    1bb8:	30 91 9b 01 	lds	r19, 0x019B	; 0x80019b <overflows+0x1>
    1bbc:	2a 17       	cp	r18, r26
    1bbe:	3b 07       	cpc	r19, r27
    1bc0:	c9 f4       	brne	.+50     	; 0x1bf4 <__vector_7+0x108>
    1bc2:	9c 01       	movw	r18, r24
    1bc4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1bc8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1bcc:	84 1b       	sub	r24, r20
    1bce:	95 0b       	sbc	r25, r21
    1bd0:	01 97       	sbiw	r24, 0x01	; 1
    1bd2:	31 f4       	brne	.+12     	; 0x1be0 <__vector_7+0xf4>
    1bd4:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1bd8:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1bdc:	2f 5f       	subi	r18, 0xFF	; 255
    1bde:	3f 4f       	sbci	r19, 0xFF	; 255
    1be0:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1be4:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1be8:	ef e6       	ldi	r30, 0x6F	; 111
    1bea:	f0 e0       	ldi	r31, 0x00	; 0
    1bec:	80 81       	ld	r24, Z
    1bee:	82 60       	ori	r24, 0x02	; 2
    1bf0:	80 83       	st	Z, r24
    1bf2:	05 c0       	rjmp	.+10     	; 0x1bfe <__vector_7+0x112>
    1bf4:	ef e6       	ldi	r30, 0x6F	; 111
    1bf6:	f0 e0       	ldi	r31, 0x00	; 0
    1bf8:	80 81       	ld	r24, Z
    1bfa:	8d 7f       	andi	r24, 0xFD	; 253
    1bfc:	80 83       	st	Z, r24
    1bfe:	0e 94 1b 05 	call	0xa36	; 0xa36 <schedule>
    1c02:	ff 91       	pop	r31
    1c04:	ef 91       	pop	r30
    1c06:	bf 91       	pop	r27
    1c08:	af 91       	pop	r26
    1c0a:	9f 91       	pop	r25
    1c0c:	8f 91       	pop	r24
    1c0e:	7f 91       	pop	r23
    1c10:	6f 91       	pop	r22
    1c12:	5f 91       	pop	r21
    1c14:	4f 91       	pop	r20
    1c16:	3f 91       	pop	r19
    1c18:	2f 91       	pop	r18
    1c1a:	ff 90       	pop	r15
    1c1c:	ef 90       	pop	r14
    1c1e:	df 90       	pop	r13
    1c20:	cf 90       	pop	r12
    1c22:	0f 90       	pop	r0
    1c24:	0f be       	out	0x3f, r0	; 63
    1c26:	0f 90       	pop	r0
    1c28:	1f 90       	pop	r1
    1c2a:	18 95       	reti

00001c2c <async>:
    1c2c:	3f 92       	push	r3
    1c2e:	4f 92       	push	r4
    1c30:	5f 92       	push	r5
    1c32:	6f 92       	push	r6
    1c34:	7f 92       	push	r7
    1c36:	8f 92       	push	r8
    1c38:	9f 92       	push	r9
    1c3a:	af 92       	push	r10
    1c3c:	bf 92       	push	r11
    1c3e:	cf 92       	push	r12
    1c40:	df 92       	push	r13
    1c42:	ef 92       	push	r14
    1c44:	ff 92       	push	r15
    1c46:	0f 93       	push	r16
    1c48:	1f 93       	push	r17
    1c4a:	cf 93       	push	r28
    1c4c:	df 93       	push	r29
    1c4e:	2b 01       	movw	r4, r22
    1c50:	3c 01       	movw	r6, r24
    1c52:	49 01       	movw	r8, r18
    1c54:	5a 01       	movw	r10, r20
    1c56:	8f b7       	in	r24, 0x3f	; 63
    1c58:	80 78       	andi	r24, 0x80	; 128
    1c5a:	38 2e       	mov	r3, r24
    1c5c:	f8 94       	cli
    1c5e:	88 e7       	ldi	r24, 0x78	; 120
    1c60:	91 e0       	ldi	r25, 0x01	; 1
    1c62:	0e 94 e6 04 	call	0x9cc	; 0x9cc <dequeue>
    1c66:	ec 01       	movw	r28, r24
    1c68:	1b 87       	std	Y+11, r17	; 0x0b
    1c6a:	0a 87       	std	Y+10, r16	; 0x0a
    1c6c:	fd 86       	std	Y+13, r15	; 0x0d
    1c6e:	ec 86       	std	Y+12, r14	; 0x0c
    1c70:	df 86       	std	Y+15, r13	; 0x0f
    1c72:	ce 86       	std	Y+14, r12	; 0x0e
    1c74:	33 20       	and	r3, r3
    1c76:	61 f0       	breq	.+24     	; 0x1c90 <async+0x64>
    1c78:	e0 91 72 01 	lds	r30, 0x0172	; 0x800172 <current>
    1c7c:	f0 91 73 01 	lds	r31, 0x0173	; 0x800173 <current+0x1>
    1c80:	02 80       	ldd	r0, Z+2	; 0x02
    1c82:	f3 81       	ldd	r31, Z+3	; 0x03
    1c84:	e0 2d       	mov	r30, r0
    1c86:	82 81       	ldd	r24, Z+2	; 0x02
    1c88:	93 81       	ldd	r25, Z+3	; 0x03
    1c8a:	a4 81       	ldd	r26, Z+4	; 0x04
    1c8c:	b5 81       	ldd	r27, Z+5	; 0x05
    1c8e:	08 c0       	rjmp	.+16     	; 0x1ca0 <async+0x74>
    1c90:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <timestamp>
    1c94:	90 91 9d 01 	lds	r25, 0x019D	; 0x80019d <timestamp+0x1>
    1c98:	a0 91 9e 01 	lds	r26, 0x019E	; 0x80019e <timestamp+0x2>
    1c9c:	b0 91 9f 01 	lds	r27, 0x019F	; 0x80019f <timestamp+0x3>
    1ca0:	48 0e       	add	r4, r24
    1ca2:	59 1e       	adc	r5, r25
    1ca4:	6a 1e       	adc	r6, r26
    1ca6:	7b 1e       	adc	r7, r27
    1ca8:	4a 82       	std	Y+2, r4	; 0x02
    1caa:	5b 82       	std	Y+3, r5	; 0x03
    1cac:	6c 82       	std	Y+4, r6	; 0x04
    1cae:	7d 82       	std	Y+5, r7	; 0x05
    1cb0:	18 14       	cp	r1, r8
    1cb2:	19 04       	cpc	r1, r9
    1cb4:	1a 04       	cpc	r1, r10
    1cb6:	1b 04       	cpc	r1, r11
    1cb8:	44 f0       	brlt	.+16     	; 0x1cca <async+0x9e>
    1cba:	0f 2e       	mov	r0, r31
    1cbc:	88 24       	eor	r8, r8
    1cbe:	8a 94       	dec	r8
    1cc0:	98 2c       	mov	r9, r8
    1cc2:	a8 2c       	mov	r10, r8
    1cc4:	ff e7       	ldi	r31, 0x7F	; 127
    1cc6:	bf 2e       	mov	r11, r31
    1cc8:	f0 2d       	mov	r31, r0
    1cca:	84 0c       	add	r8, r4
    1ccc:	95 1c       	adc	r9, r5
    1cce:	a6 1c       	adc	r10, r6
    1cd0:	b7 1c       	adc	r11, r7
    1cd2:	8e 82       	std	Y+6, r8	; 0x06
    1cd4:	9f 82       	std	Y+7, r9	; 0x07
    1cd6:	a8 86       	std	Y+8, r10	; 0x08
    1cd8:	b9 86       	std	Y+9, r11	; 0x09
    1cda:	20 91 9a 01 	lds	r18, 0x019A	; 0x80019a <overflows>
    1cde:	30 91 9b 01 	lds	r19, 0x019B	; 0x80019b <overflows+0x1>
    1ce2:	c9 01       	movw	r24, r18
    1ce4:	03 2e       	mov	r0, r19
    1ce6:	00 0c       	add	r0, r0
    1ce8:	aa 0b       	sbc	r26, r26
    1cea:	bb 0b       	sbc	r27, r27
    1cec:	dc 01       	movw	r26, r24
    1cee:	99 27       	eor	r25, r25
    1cf0:	88 27       	eor	r24, r24
    1cf2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1cf6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1cfa:	60 e0       	ldi	r22, 0x00	; 0
    1cfc:	70 e0       	ldi	r23, 0x00	; 0
    1cfe:	84 2b       	or	r24, r20
    1d00:	95 2b       	or	r25, r21
    1d02:	a6 2b       	or	r26, r22
    1d04:	b7 2b       	or	r27, r23
    1d06:	b0 9b       	sbis	0x16, 0	; 22
    1d08:	13 c0       	rjmp	.+38     	; 0x1d30 <async+0x104>
    1d0a:	c9 01       	movw	r24, r18
    1d0c:	01 96       	adiw	r24, 0x01	; 1
    1d0e:	09 2e       	mov	r0, r25
    1d10:	00 0c       	add	r0, r0
    1d12:	aa 0b       	sbc	r26, r26
    1d14:	bb 0b       	sbc	r27, r27
    1d16:	dc 01       	movw	r26, r24
    1d18:	99 27       	eor	r25, r25
    1d1a:	88 27       	eor	r24, r24
    1d1c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1d20:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1d24:	60 e0       	ldi	r22, 0x00	; 0
    1d26:	70 e0       	ldi	r23, 0x00	; 0
    1d28:	84 2b       	or	r24, r20
    1d2a:	95 2b       	or	r25, r21
    1d2c:	a6 2b       	or	r26, r22
    1d2e:	b7 2b       	or	r27, r23
    1d30:	48 1a       	sub	r4, r24
    1d32:	59 0a       	sbc	r5, r25
    1d34:	6a 0a       	sbc	r6, r26
    1d36:	7b 0a       	sbc	r7, r27
    1d38:	14 14       	cp	r1, r4
    1d3a:	15 04       	cpc	r1, r5
    1d3c:	16 04       	cpc	r1, r6
    1d3e:	17 04       	cpc	r1, r7
    1d40:	ac f5       	brge	.+106    	; 0x1dac <async+0x180>
    1d42:	60 ea       	ldi	r22, 0xA0	; 160
    1d44:	71 e0       	ldi	r23, 0x01	; 1
    1d46:	ce 01       	movw	r24, r28
    1d48:	0e 94 b5 04 	call	0x96a	; 0x96a <enqueueByBaseline>
    1d4c:	e0 91 a0 01 	lds	r30, 0x01A0	; 0x8001a0 <timerQ>
    1d50:	f0 91 a1 01 	lds	r31, 0x01A1	; 0x8001a1 <timerQ+0x1>
    1d54:	30 97       	sbiw	r30, 0x00	; 0
    1d56:	21 f1       	breq	.+72     	; 0x1da0 <async+0x174>
    1d58:	82 81       	ldd	r24, Z+2	; 0x02
    1d5a:	93 81       	ldd	r25, Z+3	; 0x03
    1d5c:	a4 81       	ldd	r26, Z+4	; 0x04
    1d5e:	b5 81       	ldd	r27, Z+5	; 0x05
    1d60:	20 91 9a 01 	lds	r18, 0x019A	; 0x80019a <overflows>
    1d64:	30 91 9b 01 	lds	r19, 0x019B	; 0x80019b <overflows+0x1>
    1d68:	2a 17       	cp	r18, r26
    1d6a:	3b 07       	cpc	r19, r27
    1d6c:	c9 f4       	brne	.+50     	; 0x1da0 <async+0x174>
    1d6e:	9c 01       	movw	r18, r24
    1d70:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1d74:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1d78:	84 1b       	sub	r24, r20
    1d7a:	95 0b       	sbc	r25, r21
    1d7c:	01 97       	sbiw	r24, 0x01	; 1
    1d7e:	31 f4       	brne	.+12     	; 0x1d8c <async+0x160>
    1d80:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1d84:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1d88:	2f 5f       	subi	r18, 0xFF	; 255
    1d8a:	3f 4f       	sbci	r19, 0xFF	; 255
    1d8c:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1d90:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1d94:	ef e6       	ldi	r30, 0x6F	; 111
    1d96:	f0 e0       	ldi	r31, 0x00	; 0
    1d98:	80 81       	ld	r24, Z
    1d9a:	82 60       	ori	r24, 0x02	; 2
    1d9c:	80 83       	st	Z, r24
    1d9e:	39 c0       	rjmp	.+114    	; 0x1e12 <async+0x1e6>
    1da0:	ef e6       	ldi	r30, 0x6F	; 111
    1da2:	f0 e0       	ldi	r31, 0x00	; 0
    1da4:	80 81       	ld	r24, Z
    1da6:	8d 7f       	andi	r24, 0xFD	; 253
    1da8:	80 83       	st	Z, r24
    1daa:	33 c0       	rjmp	.+102    	; 0x1e12 <async+0x1e6>
    1dac:	62 ea       	ldi	r22, 0xA2	; 162
    1dae:	71 e0       	ldi	r23, 0x01	; 1
    1db0:	ce 01       	movw	r24, r28
    1db2:	0e 94 84 04 	call	0x908	; 0x908 <enqueueByDeadline>
    1db6:	33 20       	and	r3, r3
    1db8:	61 f1       	breq	.+88     	; 0x1e12 <async+0x1e6>
    1dba:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <threadPool>
    1dbe:	90 91 77 01 	lds	r25, 0x0177	; 0x800177 <threadPool+0x1>
    1dc2:	89 2b       	or	r24, r25
    1dc4:	31 f1       	breq	.+76     	; 0x1e12 <async+0x1e6>
    1dc6:	e0 91 a2 01 	lds	r30, 0x01A2	; 0x8001a2 <msgQ>
    1dca:	f0 91 a3 01 	lds	r31, 0x01A3	; 0x8001a3 <msgQ+0x1>
    1dce:	86 81       	ldd	r24, Z+6	; 0x06
    1dd0:	97 81       	ldd	r25, Z+7	; 0x07
    1dd2:	a0 85       	ldd	r26, Z+8	; 0x08
    1dd4:	b1 85       	ldd	r27, Z+9	; 0x09
    1dd6:	e0 91 74 01 	lds	r30, 0x0174	; 0x800174 <activeStack>
    1dda:	f0 91 75 01 	lds	r31, 0x0175	; 0x800175 <activeStack+0x1>
    1dde:	02 80       	ldd	r0, Z+2	; 0x02
    1de0:	f3 81       	ldd	r31, Z+3	; 0x03
    1de2:	e0 2d       	mov	r30, r0
    1de4:	46 81       	ldd	r20, Z+6	; 0x06
    1de6:	57 81       	ldd	r21, Z+7	; 0x07
    1de8:	60 85       	ldd	r22, Z+8	; 0x08
    1dea:	71 85       	ldd	r23, Z+9	; 0x09
    1dec:	84 1b       	sub	r24, r20
    1dee:	95 0b       	sbc	r25, r21
    1df0:	a6 0b       	sbc	r26, r22
    1df2:	b7 0b       	sbc	r27, r23
    1df4:	72 f4       	brpl	.+28     	; 0x1e12 <async+0x1e6>
    1df6:	86 e7       	ldi	r24, 0x76	; 118
    1df8:	91 e0       	ldi	r25, 0x01	; 1
    1dfa:	0e 94 11 05 	call	0xa22	; 0xa22 <pop>
    1dfe:	64 e7       	ldi	r22, 0x74	; 116
    1e00:	71 e0       	ldi	r23, 0x01	; 1
    1e02:	0e 94 07 05 	call	0xa0e	; 0xa0e <push>
    1e06:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <activeStack>
    1e0a:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <activeStack+0x1>
    1e0e:	0e 94 64 04 	call	0x8c8	; 0x8c8 <dispatch>
    1e12:	33 20       	and	r3, r3
    1e14:	09 f0       	breq	.+2      	; 0x1e18 <async+0x1ec>
    1e16:	78 94       	sei
    1e18:	ce 01       	movw	r24, r28
    1e1a:	df 91       	pop	r29
    1e1c:	cf 91       	pop	r28
    1e1e:	1f 91       	pop	r17
    1e20:	0f 91       	pop	r16
    1e22:	ff 90       	pop	r15
    1e24:	ef 90       	pop	r14
    1e26:	df 90       	pop	r13
    1e28:	cf 90       	pop	r12
    1e2a:	bf 90       	pop	r11
    1e2c:	af 90       	pop	r10
    1e2e:	9f 90       	pop	r9
    1e30:	8f 90       	pop	r8
    1e32:	7f 90       	pop	r7
    1e34:	6f 90       	pop	r6
    1e36:	5f 90       	pop	r5
    1e38:	4f 90       	pop	r4
    1e3a:	3f 90       	pop	r3
    1e3c:	08 95       	ret

00001e3e <sync>:
    1e3e:	cf 92       	push	r12
    1e40:	df 92       	push	r13
    1e42:	ef 92       	push	r14
    1e44:	ff 92       	push	r15
    1e46:	0f 93       	push	r16
    1e48:	1f 93       	push	r17
    1e4a:	cf 93       	push	r28
    1e4c:	df 93       	push	r29
    1e4e:	ec 01       	movw	r28, r24
    1e50:	7b 01       	movw	r14, r22
    1e52:	6a 01       	movw	r12, r20
    1e54:	1f b7       	in	r17, 0x3f	; 63
    1e56:	10 78       	andi	r17, 0x80	; 128
    1e58:	f8 94       	cli
    1e5a:	a8 81       	ld	r26, Y
    1e5c:	b9 81       	ldd	r27, Y+1	; 0x01
    1e5e:	10 97       	sbiw	r26, 0x00	; 0
    1e60:	19 f4       	brne	.+6      	; 0x1e68 <sync+0x2a>
    1e62:	35 c0       	rjmp	.+106    	; 0x1ece <sync+0x90>
    1e64:	a0 81       	ld	r26, Z
    1e66:	b1 81       	ldd	r27, Z+1	; 0x01
    1e68:	14 96       	adiw	r26, 0x04	; 4
    1e6a:	ed 91       	ld	r30, X+
    1e6c:	fc 91       	ld	r31, X
    1e6e:	15 97       	sbiw	r26, 0x05	; 5
    1e70:	30 97       	sbiw	r30, 0x00	; 0
    1e72:	c1 f7       	brne	.-16     	; 0x1e64 <sync+0x26>
    1e74:	20 91 72 01 	lds	r18, 0x0172	; 0x800172 <current>
    1e78:	30 91 73 01 	lds	r19, 0x0173	; 0x800173 <current+0x1>
    1e7c:	a2 17       	cp	r26, r18
    1e7e:	b3 07       	cpc	r27, r19
    1e80:	11 f0       	breq	.+4      	; 0x1e86 <sync+0x48>
    1e82:	11 11       	cpse	r17, r1
    1e84:	07 c0       	rjmp	.+14     	; 0x1e94 <sync+0x56>
    1e86:	11 23       	and	r17, r17
    1e88:	09 f4       	brne	.+2      	; 0x1e8c <sync+0x4e>
    1e8a:	4a c0       	rjmp	.+148    	; 0x1f20 <sync+0xe2>
    1e8c:	78 94       	sei
    1e8e:	8f ef       	ldi	r24, 0xFF	; 255
    1e90:	9f ef       	ldi	r25, 0xFF	; 255
    1e92:	4e c0       	rjmp	.+156    	; 0x1f30 <sync+0xf2>
    1e94:	8a 81       	ldd	r24, Y+2	; 0x02
    1e96:	9b 81       	ldd	r25, Y+3	; 0x03
    1e98:	00 97       	sbiw	r24, 0x00	; 0
    1e9a:	19 f0       	breq	.+6      	; 0x1ea2 <sync+0x64>
    1e9c:	fc 01       	movw	r30, r24
    1e9e:	15 82       	std	Z+5, r1	; 0x05
    1ea0:	14 82       	std	Z+4, r1	; 0x04
    1ea2:	3b 83       	std	Y+3, r19	; 0x03
    1ea4:	2a 83       	std	Y+2, r18	; 0x02
    1ea6:	f9 01       	movw	r30, r18
    1ea8:	d5 83       	std	Z+5, r29	; 0x05
    1eaa:	c4 83       	std	Z+4, r28	; 0x04
    1eac:	cd 01       	movw	r24, r26
    1eae:	0e 94 64 04 	call	0x8c8	; 0x8c8 <dispatch>
    1eb2:	e0 91 72 01 	lds	r30, 0x0172	; 0x800172 <current>
    1eb6:	f0 91 73 01 	lds	r31, 0x0173	; 0x800173 <current+0x1>
    1eba:	82 81       	ldd	r24, Z+2	; 0x02
    1ebc:	93 81       	ldd	r25, Z+3	; 0x03
    1ebe:	89 2b       	or	r24, r25
    1ec0:	31 f4       	brne	.+12     	; 0x1ece <sync+0x90>
    1ec2:	11 23       	and	r17, r17
    1ec4:	81 f1       	breq	.+96     	; 0x1f26 <sync+0xe8>
    1ec6:	78 94       	sei
    1ec8:	80 e0       	ldi	r24, 0x00	; 0
    1eca:	90 e0       	ldi	r25, 0x00	; 0
    1ecc:	31 c0       	rjmp	.+98     	; 0x1f30 <sync+0xf2>
    1ece:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <current>
    1ed2:	90 91 73 01 	lds	r25, 0x0173	; 0x800173 <current+0x1>
    1ed6:	99 83       	std	Y+1, r25	; 0x01
    1ed8:	88 83       	st	Y, r24
    1eda:	11 23       	and	r17, r17
    1edc:	29 f0       	breq	.+10     	; 0x1ee8 <sync+0xaa>
    1ede:	8a 81       	ldd	r24, Y+2	; 0x02
    1ee0:	9b 81       	ldd	r25, Y+3	; 0x03
    1ee2:	01 97       	sbiw	r24, 0x01	; 1
    1ee4:	09 f0       	breq	.+2      	; 0x1ee8 <sync+0xaa>
    1ee6:	78 94       	sei
    1ee8:	b6 01       	movw	r22, r12
    1eea:	ce 01       	movw	r24, r28
    1eec:	f7 01       	movw	r30, r14
    1eee:	09 95       	icall
    1ef0:	f8 2e       	mov	r15, r24
    1ef2:	09 2f       	mov	r16, r25
    1ef4:	8f b7       	in	r24, 0x3f	; 63
    1ef6:	f8 94       	cli
    1ef8:	19 82       	std	Y+1, r1	; 0x01
    1efa:	18 82       	st	Y, r1
    1efc:	8a 81       	ldd	r24, Y+2	; 0x02
    1efe:	9b 81       	ldd	r25, Y+3	; 0x03
    1f00:	82 30       	cpi	r24, 0x02	; 2
    1f02:	91 05       	cpc	r25, r1
    1f04:	38 f0       	brcs	.+14     	; 0x1f14 <sync+0xd6>
    1f06:	1b 82       	std	Y+3, r1	; 0x03
    1f08:	1a 82       	std	Y+2, r1	; 0x02
    1f0a:	fc 01       	movw	r30, r24
    1f0c:	15 82       	std	Z+5, r1	; 0x05
    1f0e:	14 82       	std	Z+4, r1	; 0x04
    1f10:	0e 94 64 04 	call	0x8c8	; 0x8c8 <dispatch>
    1f14:	11 23       	and	r17, r17
    1f16:	51 f0       	breq	.+20     	; 0x1f2c <sync+0xee>
    1f18:	78 94       	sei
    1f1a:	8f 2d       	mov	r24, r15
    1f1c:	90 2f       	mov	r25, r16
    1f1e:	08 c0       	rjmp	.+16     	; 0x1f30 <sync+0xf2>
    1f20:	8f ef       	ldi	r24, 0xFF	; 255
    1f22:	9f ef       	ldi	r25, 0xFF	; 255
    1f24:	05 c0       	rjmp	.+10     	; 0x1f30 <sync+0xf2>
    1f26:	80 e0       	ldi	r24, 0x00	; 0
    1f28:	90 e0       	ldi	r25, 0x00	; 0
    1f2a:	02 c0       	rjmp	.+4      	; 0x1f30 <sync+0xf2>
    1f2c:	8f 2d       	mov	r24, r15
    1f2e:	90 2f       	mov	r25, r16
    1f30:	df 91       	pop	r29
    1f32:	cf 91       	pop	r28
    1f34:	1f 91       	pop	r17
    1f36:	0f 91       	pop	r16
    1f38:	ff 90       	pop	r15
    1f3a:	ef 90       	pop	r14
    1f3c:	df 90       	pop	r13
    1f3e:	cf 90       	pop	r12
    1f40:	08 95       	ret

00001f42 <run>:
    1f42:	00 91 72 01 	lds	r16, 0x0172	; 0x800172 <current>
    1f46:	10 91 73 01 	lds	r17, 0x0173	; 0x800173 <current+0x1>
    1f4a:	82 ea       	ldi	r24, 0xA2	; 162
    1f4c:	91 e0       	ldi	r25, 0x01	; 1
    1f4e:	0e 94 e6 04 	call	0x9cc	; 0x9cc <dequeue>
    1f52:	ec 01       	movw	r28, r24
    1f54:	f8 01       	movw	r30, r16
    1f56:	93 83       	std	Z+3, r25	; 0x03
    1f58:	82 83       	std	Z+2, r24	; 0x02
    1f5a:	78 94       	sei
    1f5c:	6c 85       	ldd	r22, Y+12	; 0x0c
    1f5e:	7d 85       	ldd	r23, Y+13	; 0x0d
    1f60:	4e 85       	ldd	r20, Y+14	; 0x0e
    1f62:	5f 85       	ldd	r21, Y+15	; 0x0f
    1f64:	8a 85       	ldd	r24, Y+10	; 0x0a
    1f66:	9b 85       	ldd	r25, Y+11	; 0x0b
    1f68:	0e 94 1f 0f 	call	0x1e3e	; 0x1e3e <sync>
    1f6c:	8f b7       	in	r24, 0x3f	; 63
    1f6e:	f8 94       	cli
    1f70:	68 e7       	ldi	r22, 0x78	; 120
    1f72:	71 e0       	ldi	r23, 0x01	; 1
    1f74:	ce 01       	movw	r24, r28
    1f76:	0e 94 fd 04 	call	0x9fa	; 0x9fa <insert>
    1f7a:	e0 91 74 01 	lds	r30, 0x0174	; 0x800174 <activeStack>
    1f7e:	f0 91 75 01 	lds	r31, 0x0175	; 0x800175 <activeStack+0x1>
    1f82:	01 90       	ld	r0, Z+
    1f84:	f0 81       	ld	r31, Z
    1f86:	e0 2d       	mov	r30, r0
    1f88:	c2 81       	ldd	r28, Z+2	; 0x02
    1f8a:	d3 81       	ldd	r29, Z+3	; 0x03
    1f8c:	e0 91 a2 01 	lds	r30, 0x01A2	; 0x8001a2 <msgQ>
    1f90:	f0 91 a3 01 	lds	r31, 0x01A3	; 0x8001a3 <msgQ+0x1>
    1f94:	30 97       	sbiw	r30, 0x00	; 0
    1f96:	a1 f0       	breq	.+40     	; 0x1fc0 <run+0x7e>
    1f98:	20 97       	sbiw	r28, 0x00	; 0
    1f9a:	99 f2       	breq	.-90     	; 0x1f42 <run>
    1f9c:	86 81       	ldd	r24, Z+6	; 0x06
    1f9e:	97 81       	ldd	r25, Z+7	; 0x07
    1fa0:	a0 85       	ldd	r26, Z+8	; 0x08
    1fa2:	b1 85       	ldd	r27, Z+9	; 0x09
    1fa4:	4e 81       	ldd	r20, Y+6	; 0x06
    1fa6:	5f 81       	ldd	r21, Y+7	; 0x07
    1fa8:	68 85       	ldd	r22, Y+8	; 0x08
    1faa:	79 85       	ldd	r23, Y+9	; 0x09
    1fac:	84 1b       	sub	r24, r20
    1fae:	95 0b       	sbc	r25, r21
    1fb0:	a6 0b       	sbc	r26, r22
    1fb2:	b7 0b       	sbc	r27, r23
    1fb4:	18 16       	cp	r1, r24
    1fb6:	19 06       	cpc	r1, r25
    1fb8:	1a 06       	cpc	r1, r26
    1fba:	1b 06       	cpc	r1, r27
    1fbc:	0c f0       	brlt	.+2      	; 0x1fc0 <run+0x7e>
    1fbe:	c1 cf       	rjmp	.-126    	; 0x1f42 <run>
    1fc0:	84 e7       	ldi	r24, 0x74	; 116
    1fc2:	91 e0       	ldi	r25, 0x01	; 1
    1fc4:	0e 94 11 05 	call	0xa22	; 0xa22 <pop>
    1fc8:	66 e7       	ldi	r22, 0x76	; 118
    1fca:	71 e0       	ldi	r23, 0x01	; 1
    1fcc:	0e 94 07 05 	call	0xa0e	; 0xa0e <push>
    1fd0:	a0 91 74 01 	lds	r26, 0x0174	; 0x800174 <activeStack>
    1fd4:	b0 91 75 01 	lds	r27, 0x0175	; 0x800175 <activeStack+0x1>
    1fd8:	02 c0       	rjmp	.+4      	; 0x1fde <run+0x9c>
    1fda:	a0 81       	ld	r26, Z
    1fdc:	b1 81       	ldd	r27, Z+1	; 0x01
    1fde:	14 96       	adiw	r26, 0x04	; 4
    1fe0:	ed 91       	ld	r30, X+
    1fe2:	fc 91       	ld	r31, X
    1fe4:	15 97       	sbiw	r26, 0x05	; 5
    1fe6:	30 97       	sbiw	r30, 0x00	; 0
    1fe8:	c1 f7       	brne	.-16     	; 0x1fda <run+0x98>
    1fea:	cd 01       	movw	r24, r26
    1fec:	0e 94 64 04 	call	0x8c8	; 0x8c8 <dispatch>
    1ff0:	a8 cf       	rjmp	.-176    	; 0x1f42 <run>

00001ff2 <install>:
    thread0.msg = NULL;
    
    TIMER_INIT();
}

void install(Object *obj, Method m, enum Vector i) {
    1ff2:	fc 01       	movw	r30, r24
    if (i >= 0 && i < N_VECTORS) {
    1ff4:	42 31       	cpi	r20, 0x12	; 18
    1ff6:	b8 f4       	brcc	.+46     	; 0x2026 <install+0x34>
        char status;
        DISABLE(status);
    1ff8:	9f b7       	in	r25, 0x3f	; 63
    1ffa:	90 78       	andi	r25, 0x80	; 128
    1ffc:	f8 94       	cli
        otable[i] = obj;
    1ffe:	50 e0       	ldi	r21, 0x00	; 0
    2000:	44 0f       	add	r20, r20
    2002:	55 1f       	adc	r21, r21
    2004:	da 01       	movw	r26, r20
    2006:	ac 55       	subi	r26, 0x5C	; 92
    2008:	be 4f       	sbci	r27, 0xFE	; 254
    200a:	ed 93       	st	X+, r30
    200c:	fc 93       	st	X, r31
        mtable[i] = m;
    200e:	da 01       	movw	r26, r20
    2010:	a4 5c       	subi	r26, 0xC4	; 196
    2012:	bd 4f       	sbci	r27, 0xFD	; 253
    2014:	6d 93       	st	X+, r22
    2016:	7c 93       	st	X, r23
        obj->wantedBy = INSTALLED_TAG;  // Mark object as subject to synchronization by interrupt disabling
    2018:	21 e0       	ldi	r18, 0x01	; 1
    201a:	30 e0       	ldi	r19, 0x00	; 0
    201c:	33 83       	std	Z+3, r19	; 0x03
    201e:	22 83       	std	Z+2, r18	; 0x02
        ENABLE(status);
    2020:	99 23       	and	r25, r25
    2022:	09 f0       	breq	.+2      	; 0x2026 <install+0x34>
    2024:	78 94       	sei
    2026:	08 95       	ret

00002028 <tinytimber>:
    }
}

int tinytimber(Object *obj, Method m, int arg) {
    2028:	8c 01       	movw	r16, r24
    202a:	7b 01       	movw	r14, r22
    202c:	6a 01       	movw	r12, r20
    char status;
    DISABLE(status);
    202e:	8f b7       	in	r24, 0x3f	; 63
    2030:	f8 94       	cli
    initialize();
    2032:	0e 94 c5 03 	call	0x78a	; 0x78a <initialize>
    ENABLE(1);
    2036:	78 94       	sei
    if (m != NULL)
    2038:	e1 14       	cp	r14, r1
    203a:	f1 04       	cpc	r15, r1
    203c:	41 f0       	breq	.+16     	; 0x204e <tinytimber+0x26>
        //m(obj, arg);
		ASYNC(obj,m,arg);
    203e:	20 e0       	ldi	r18, 0x00	; 0
    2040:	30 e0       	ldi	r19, 0x00	; 0
    2042:	a9 01       	movw	r20, r18
    2044:	60 e0       	ldi	r22, 0x00	; 0
    2046:	70 e0       	ldi	r23, 0x00	; 0
    2048:	cb 01       	movw	r24, r22
    204a:	0e 94 16 0e 	call	0x1c2c	; 0x1c2c <async>
    DISABLE(status);
    204e:	8f b7       	in	r24, 0x3f	; 63
    2050:	f8 94       	cli
    idle();
    2052:	0e 94 1d 0d 	call	0x1a3a	; 0x1a3a <idle>

00002056 <__subsf3>:
    2056:	50 58       	subi	r21, 0x80	; 128

00002058 <__addsf3>:
    2058:	bb 27       	eor	r27, r27
    205a:	aa 27       	eor	r26, r26
    205c:	0e 94 43 10 	call	0x2086	; 0x2086 <__addsf3x>
    2060:	0c 94 62 11 	jmp	0x22c4	; 0x22c4 <__fp_round>
    2064:	0e 94 54 11 	call	0x22a8	; 0x22a8 <__fp_pscA>
    2068:	38 f0       	brcs	.+14     	; 0x2078 <__addsf3+0x20>
    206a:	0e 94 5b 11 	call	0x22b6	; 0x22b6 <__fp_pscB>
    206e:	20 f0       	brcs	.+8      	; 0x2078 <__addsf3+0x20>
    2070:	39 f4       	brne	.+14     	; 0x2080 <__addsf3+0x28>
    2072:	9f 3f       	cpi	r25, 0xFF	; 255
    2074:	19 f4       	brne	.+6      	; 0x207c <__addsf3+0x24>
    2076:	26 f4       	brtc	.+8      	; 0x2080 <__addsf3+0x28>
    2078:	0c 94 51 11 	jmp	0x22a2	; 0x22a2 <__fp_nan>
    207c:	0e f4       	brtc	.+2      	; 0x2080 <__addsf3+0x28>
    207e:	e0 95       	com	r30
    2080:	e7 fb       	bst	r30, 7
    2082:	0c 94 22 11 	jmp	0x2244	; 0x2244 <__fp_inf>

00002086 <__addsf3x>:
    2086:	e9 2f       	mov	r30, r25
    2088:	0e 94 73 11 	call	0x22e6	; 0x22e6 <__fp_split3>
    208c:	58 f3       	brcs	.-42     	; 0x2064 <__addsf3+0xc>
    208e:	ba 17       	cp	r27, r26
    2090:	62 07       	cpc	r22, r18
    2092:	73 07       	cpc	r23, r19
    2094:	84 07       	cpc	r24, r20
    2096:	95 07       	cpc	r25, r21
    2098:	20 f0       	brcs	.+8      	; 0x20a2 <__addsf3x+0x1c>
    209a:	79 f4       	brne	.+30     	; 0x20ba <__addsf3x+0x34>
    209c:	a6 f5       	brtc	.+104    	; 0x2106 <__addsf3x+0x80>
    209e:	0c 94 ad 11 	jmp	0x235a	; 0x235a <__fp_zero>
    20a2:	0e f4       	brtc	.+2      	; 0x20a6 <__addsf3x+0x20>
    20a4:	e0 95       	com	r30
    20a6:	0b 2e       	mov	r0, r27
    20a8:	ba 2f       	mov	r27, r26
    20aa:	a0 2d       	mov	r26, r0
    20ac:	0b 01       	movw	r0, r22
    20ae:	b9 01       	movw	r22, r18
    20b0:	90 01       	movw	r18, r0
    20b2:	0c 01       	movw	r0, r24
    20b4:	ca 01       	movw	r24, r20
    20b6:	a0 01       	movw	r20, r0
    20b8:	11 24       	eor	r1, r1
    20ba:	ff 27       	eor	r31, r31
    20bc:	59 1b       	sub	r21, r25
    20be:	99 f0       	breq	.+38     	; 0x20e6 <__addsf3x+0x60>
    20c0:	59 3f       	cpi	r21, 0xF9	; 249
    20c2:	50 f4       	brcc	.+20     	; 0x20d8 <__addsf3x+0x52>
    20c4:	50 3e       	cpi	r21, 0xE0	; 224
    20c6:	68 f1       	brcs	.+90     	; 0x2122 <__addsf3x+0x9c>
    20c8:	1a 16       	cp	r1, r26
    20ca:	f0 40       	sbci	r31, 0x00	; 0
    20cc:	a2 2f       	mov	r26, r18
    20ce:	23 2f       	mov	r18, r19
    20d0:	34 2f       	mov	r19, r20
    20d2:	44 27       	eor	r20, r20
    20d4:	58 5f       	subi	r21, 0xF8	; 248
    20d6:	f3 cf       	rjmp	.-26     	; 0x20be <__addsf3x+0x38>
    20d8:	46 95       	lsr	r20
    20da:	37 95       	ror	r19
    20dc:	27 95       	ror	r18
    20de:	a7 95       	ror	r26
    20e0:	f0 40       	sbci	r31, 0x00	; 0
    20e2:	53 95       	inc	r21
    20e4:	c9 f7       	brne	.-14     	; 0x20d8 <__addsf3x+0x52>
    20e6:	7e f4       	brtc	.+30     	; 0x2106 <__addsf3x+0x80>
    20e8:	1f 16       	cp	r1, r31
    20ea:	ba 0b       	sbc	r27, r26
    20ec:	62 0b       	sbc	r22, r18
    20ee:	73 0b       	sbc	r23, r19
    20f0:	84 0b       	sbc	r24, r20
    20f2:	ba f0       	brmi	.+46     	; 0x2122 <__addsf3x+0x9c>
    20f4:	91 50       	subi	r25, 0x01	; 1
    20f6:	a1 f0       	breq	.+40     	; 0x2120 <__addsf3x+0x9a>
    20f8:	ff 0f       	add	r31, r31
    20fa:	bb 1f       	adc	r27, r27
    20fc:	66 1f       	adc	r22, r22
    20fe:	77 1f       	adc	r23, r23
    2100:	88 1f       	adc	r24, r24
    2102:	c2 f7       	brpl	.-16     	; 0x20f4 <__addsf3x+0x6e>
    2104:	0e c0       	rjmp	.+28     	; 0x2122 <__addsf3x+0x9c>
    2106:	ba 0f       	add	r27, r26
    2108:	62 1f       	adc	r22, r18
    210a:	73 1f       	adc	r23, r19
    210c:	84 1f       	adc	r24, r20
    210e:	48 f4       	brcc	.+18     	; 0x2122 <__addsf3x+0x9c>
    2110:	87 95       	ror	r24
    2112:	77 95       	ror	r23
    2114:	67 95       	ror	r22
    2116:	b7 95       	ror	r27
    2118:	f7 95       	ror	r31
    211a:	9e 3f       	cpi	r25, 0xFE	; 254
    211c:	08 f0       	brcs	.+2      	; 0x2120 <__addsf3x+0x9a>
    211e:	b0 cf       	rjmp	.-160    	; 0x2080 <__addsf3+0x28>
    2120:	93 95       	inc	r25
    2122:	88 0f       	add	r24, r24
    2124:	08 f0       	brcs	.+2      	; 0x2128 <__addsf3x+0xa2>
    2126:	99 27       	eor	r25, r25
    2128:	ee 0f       	add	r30, r30
    212a:	97 95       	ror	r25
    212c:	87 95       	ror	r24
    212e:	08 95       	ret

00002130 <__fixsfsi>:
    2130:	0e 94 9f 10 	call	0x213e	; 0x213e <__fixunssfsi>
    2134:	68 94       	set
    2136:	b1 11       	cpse	r27, r1
    2138:	0c 94 ae 11 	jmp	0x235c	; 0x235c <__fp_szero>
    213c:	08 95       	ret

0000213e <__fixunssfsi>:
    213e:	0e 94 7b 11 	call	0x22f6	; 0x22f6 <__fp_splitA>
    2142:	88 f0       	brcs	.+34     	; 0x2166 <__fixunssfsi+0x28>
    2144:	9f 57       	subi	r25, 0x7F	; 127
    2146:	98 f0       	brcs	.+38     	; 0x216e <__fixunssfsi+0x30>
    2148:	b9 2f       	mov	r27, r25
    214a:	99 27       	eor	r25, r25
    214c:	b7 51       	subi	r27, 0x17	; 23
    214e:	b0 f0       	brcs	.+44     	; 0x217c <__fixunssfsi+0x3e>
    2150:	e1 f0       	breq	.+56     	; 0x218a <__fixunssfsi+0x4c>
    2152:	66 0f       	add	r22, r22
    2154:	77 1f       	adc	r23, r23
    2156:	88 1f       	adc	r24, r24
    2158:	99 1f       	adc	r25, r25
    215a:	1a f0       	brmi	.+6      	; 0x2162 <__fixunssfsi+0x24>
    215c:	ba 95       	dec	r27
    215e:	c9 f7       	brne	.-14     	; 0x2152 <__fixunssfsi+0x14>
    2160:	14 c0       	rjmp	.+40     	; 0x218a <__fixunssfsi+0x4c>
    2162:	b1 30       	cpi	r27, 0x01	; 1
    2164:	91 f0       	breq	.+36     	; 0x218a <__fixunssfsi+0x4c>
    2166:	0e 94 ad 11 	call	0x235a	; 0x235a <__fp_zero>
    216a:	b1 e0       	ldi	r27, 0x01	; 1
    216c:	08 95       	ret
    216e:	0c 94 ad 11 	jmp	0x235a	; 0x235a <__fp_zero>
    2172:	67 2f       	mov	r22, r23
    2174:	78 2f       	mov	r23, r24
    2176:	88 27       	eor	r24, r24
    2178:	b8 5f       	subi	r27, 0xF8	; 248
    217a:	39 f0       	breq	.+14     	; 0x218a <__fixunssfsi+0x4c>
    217c:	b9 3f       	cpi	r27, 0xF9	; 249
    217e:	cc f3       	brlt	.-14     	; 0x2172 <__fixunssfsi+0x34>
    2180:	86 95       	lsr	r24
    2182:	77 95       	ror	r23
    2184:	67 95       	ror	r22
    2186:	b3 95       	inc	r27
    2188:	d9 f7       	brne	.-10     	; 0x2180 <__fixunssfsi+0x42>
    218a:	3e f4       	brtc	.+14     	; 0x219a <__fixunssfsi+0x5c>
    218c:	90 95       	com	r25
    218e:	80 95       	com	r24
    2190:	70 95       	com	r23
    2192:	61 95       	neg	r22
    2194:	7f 4f       	sbci	r23, 0xFF	; 255
    2196:	8f 4f       	sbci	r24, 0xFF	; 255
    2198:	9f 4f       	sbci	r25, 0xFF	; 255
    219a:	08 95       	ret

0000219c <__floatunsisf>:
    219c:	e8 94       	clt
    219e:	09 c0       	rjmp	.+18     	; 0x21b2 <__floatsisf+0x12>

000021a0 <__floatsisf>:
    21a0:	97 fb       	bst	r25, 7
    21a2:	3e f4       	brtc	.+14     	; 0x21b2 <__floatsisf+0x12>
    21a4:	90 95       	com	r25
    21a6:	80 95       	com	r24
    21a8:	70 95       	com	r23
    21aa:	61 95       	neg	r22
    21ac:	7f 4f       	sbci	r23, 0xFF	; 255
    21ae:	8f 4f       	sbci	r24, 0xFF	; 255
    21b0:	9f 4f       	sbci	r25, 0xFF	; 255
    21b2:	99 23       	and	r25, r25
    21b4:	a9 f0       	breq	.+42     	; 0x21e0 <__floatsisf+0x40>
    21b6:	f9 2f       	mov	r31, r25
    21b8:	96 e9       	ldi	r25, 0x96	; 150
    21ba:	bb 27       	eor	r27, r27
    21bc:	93 95       	inc	r25
    21be:	f6 95       	lsr	r31
    21c0:	87 95       	ror	r24
    21c2:	77 95       	ror	r23
    21c4:	67 95       	ror	r22
    21c6:	b7 95       	ror	r27
    21c8:	f1 11       	cpse	r31, r1
    21ca:	f8 cf       	rjmp	.-16     	; 0x21bc <__floatsisf+0x1c>
    21cc:	fa f4       	brpl	.+62     	; 0x220c <__floatsisf+0x6c>
    21ce:	bb 0f       	add	r27, r27
    21d0:	11 f4       	brne	.+4      	; 0x21d6 <__floatsisf+0x36>
    21d2:	60 ff       	sbrs	r22, 0
    21d4:	1b c0       	rjmp	.+54     	; 0x220c <__floatsisf+0x6c>
    21d6:	6f 5f       	subi	r22, 0xFF	; 255
    21d8:	7f 4f       	sbci	r23, 0xFF	; 255
    21da:	8f 4f       	sbci	r24, 0xFF	; 255
    21dc:	9f 4f       	sbci	r25, 0xFF	; 255
    21de:	16 c0       	rjmp	.+44     	; 0x220c <__floatsisf+0x6c>
    21e0:	88 23       	and	r24, r24
    21e2:	11 f0       	breq	.+4      	; 0x21e8 <__floatsisf+0x48>
    21e4:	96 e9       	ldi	r25, 0x96	; 150
    21e6:	11 c0       	rjmp	.+34     	; 0x220a <__floatsisf+0x6a>
    21e8:	77 23       	and	r23, r23
    21ea:	21 f0       	breq	.+8      	; 0x21f4 <__floatsisf+0x54>
    21ec:	9e e8       	ldi	r25, 0x8E	; 142
    21ee:	87 2f       	mov	r24, r23
    21f0:	76 2f       	mov	r23, r22
    21f2:	05 c0       	rjmp	.+10     	; 0x21fe <__floatsisf+0x5e>
    21f4:	66 23       	and	r22, r22
    21f6:	71 f0       	breq	.+28     	; 0x2214 <__floatsisf+0x74>
    21f8:	96 e8       	ldi	r25, 0x86	; 134
    21fa:	86 2f       	mov	r24, r22
    21fc:	70 e0       	ldi	r23, 0x00	; 0
    21fe:	60 e0       	ldi	r22, 0x00	; 0
    2200:	2a f0       	brmi	.+10     	; 0x220c <__floatsisf+0x6c>
    2202:	9a 95       	dec	r25
    2204:	66 0f       	add	r22, r22
    2206:	77 1f       	adc	r23, r23
    2208:	88 1f       	adc	r24, r24
    220a:	da f7       	brpl	.-10     	; 0x2202 <__floatsisf+0x62>
    220c:	88 0f       	add	r24, r24
    220e:	96 95       	lsr	r25
    2210:	87 95       	ror	r24
    2212:	97 f9       	bld	r25, 7
    2214:	08 95       	ret

00002216 <floor>:
    2216:	0e 94 95 11 	call	0x232a	; 0x232a <__fp_trunc>
    221a:	90 f0       	brcs	.+36     	; 0x2240 <floor+0x2a>
    221c:	9f 37       	cpi	r25, 0x7F	; 127
    221e:	48 f4       	brcc	.+18     	; 0x2232 <floor+0x1c>
    2220:	91 11       	cpse	r25, r1
    2222:	16 f0       	brts	.+4      	; 0x2228 <floor+0x12>
    2224:	0c 94 ae 11 	jmp	0x235c	; 0x235c <__fp_szero>
    2228:	60 e0       	ldi	r22, 0x00	; 0
    222a:	70 e0       	ldi	r23, 0x00	; 0
    222c:	80 e8       	ldi	r24, 0x80	; 128
    222e:	9f eb       	ldi	r25, 0xBF	; 191
    2230:	08 95       	ret
    2232:	26 f4       	brtc	.+8      	; 0x223c <floor+0x26>
    2234:	1b 16       	cp	r1, r27
    2236:	61 1d       	adc	r22, r1
    2238:	71 1d       	adc	r23, r1
    223a:	81 1d       	adc	r24, r1
    223c:	0c 94 28 11 	jmp	0x2250	; 0x2250 <__fp_mintl>
    2240:	0c 94 43 11 	jmp	0x2286	; 0x2286 <__fp_mpack>

00002244 <__fp_inf>:
    2244:	97 f9       	bld	r25, 7
    2246:	9f 67       	ori	r25, 0x7F	; 127
    2248:	80 e8       	ldi	r24, 0x80	; 128
    224a:	70 e0       	ldi	r23, 0x00	; 0
    224c:	60 e0       	ldi	r22, 0x00	; 0
    224e:	08 95       	ret

00002250 <__fp_mintl>:
    2250:	88 23       	and	r24, r24
    2252:	71 f4       	brne	.+28     	; 0x2270 <__fp_mintl+0x20>
    2254:	77 23       	and	r23, r23
    2256:	21 f0       	breq	.+8      	; 0x2260 <__fp_mintl+0x10>
    2258:	98 50       	subi	r25, 0x08	; 8
    225a:	87 2b       	or	r24, r23
    225c:	76 2f       	mov	r23, r22
    225e:	07 c0       	rjmp	.+14     	; 0x226e <__fp_mintl+0x1e>
    2260:	66 23       	and	r22, r22
    2262:	11 f4       	brne	.+4      	; 0x2268 <__fp_mintl+0x18>
    2264:	99 27       	eor	r25, r25
    2266:	0d c0       	rjmp	.+26     	; 0x2282 <__fp_mintl+0x32>
    2268:	90 51       	subi	r25, 0x10	; 16
    226a:	86 2b       	or	r24, r22
    226c:	70 e0       	ldi	r23, 0x00	; 0
    226e:	60 e0       	ldi	r22, 0x00	; 0
    2270:	2a f0       	brmi	.+10     	; 0x227c <__fp_mintl+0x2c>
    2272:	9a 95       	dec	r25
    2274:	66 0f       	add	r22, r22
    2276:	77 1f       	adc	r23, r23
    2278:	88 1f       	adc	r24, r24
    227a:	da f7       	brpl	.-10     	; 0x2272 <__fp_mintl+0x22>
    227c:	88 0f       	add	r24, r24
    227e:	96 95       	lsr	r25
    2280:	87 95       	ror	r24
    2282:	97 f9       	bld	r25, 7
    2284:	08 95       	ret

00002286 <__fp_mpack>:
    2286:	9f 3f       	cpi	r25, 0xFF	; 255
    2288:	31 f0       	breq	.+12     	; 0x2296 <__fp_mpack_finite+0xc>

0000228a <__fp_mpack_finite>:
    228a:	91 50       	subi	r25, 0x01	; 1
    228c:	20 f4       	brcc	.+8      	; 0x2296 <__fp_mpack_finite+0xc>
    228e:	87 95       	ror	r24
    2290:	77 95       	ror	r23
    2292:	67 95       	ror	r22
    2294:	b7 95       	ror	r27
    2296:	88 0f       	add	r24, r24
    2298:	91 1d       	adc	r25, r1
    229a:	96 95       	lsr	r25
    229c:	87 95       	ror	r24
    229e:	97 f9       	bld	r25, 7
    22a0:	08 95       	ret

000022a2 <__fp_nan>:
    22a2:	9f ef       	ldi	r25, 0xFF	; 255
    22a4:	80 ec       	ldi	r24, 0xC0	; 192
    22a6:	08 95       	ret

000022a8 <__fp_pscA>:
    22a8:	00 24       	eor	r0, r0
    22aa:	0a 94       	dec	r0
    22ac:	16 16       	cp	r1, r22
    22ae:	17 06       	cpc	r1, r23
    22b0:	18 06       	cpc	r1, r24
    22b2:	09 06       	cpc	r0, r25
    22b4:	08 95       	ret

000022b6 <__fp_pscB>:
    22b6:	00 24       	eor	r0, r0
    22b8:	0a 94       	dec	r0
    22ba:	12 16       	cp	r1, r18
    22bc:	13 06       	cpc	r1, r19
    22be:	14 06       	cpc	r1, r20
    22c0:	05 06       	cpc	r0, r21
    22c2:	08 95       	ret

000022c4 <__fp_round>:
    22c4:	09 2e       	mov	r0, r25
    22c6:	03 94       	inc	r0
    22c8:	00 0c       	add	r0, r0
    22ca:	11 f4       	brne	.+4      	; 0x22d0 <__fp_round+0xc>
    22cc:	88 23       	and	r24, r24
    22ce:	52 f0       	brmi	.+20     	; 0x22e4 <__fp_round+0x20>
    22d0:	bb 0f       	add	r27, r27
    22d2:	40 f4       	brcc	.+16     	; 0x22e4 <__fp_round+0x20>
    22d4:	bf 2b       	or	r27, r31
    22d6:	11 f4       	brne	.+4      	; 0x22dc <__fp_round+0x18>
    22d8:	60 ff       	sbrs	r22, 0
    22da:	04 c0       	rjmp	.+8      	; 0x22e4 <__fp_round+0x20>
    22dc:	6f 5f       	subi	r22, 0xFF	; 255
    22de:	7f 4f       	sbci	r23, 0xFF	; 255
    22e0:	8f 4f       	sbci	r24, 0xFF	; 255
    22e2:	9f 4f       	sbci	r25, 0xFF	; 255
    22e4:	08 95       	ret

000022e6 <__fp_split3>:
    22e6:	57 fd       	sbrc	r21, 7
    22e8:	90 58       	subi	r25, 0x80	; 128
    22ea:	44 0f       	add	r20, r20
    22ec:	55 1f       	adc	r21, r21
    22ee:	59 f0       	breq	.+22     	; 0x2306 <__fp_splitA+0x10>
    22f0:	5f 3f       	cpi	r21, 0xFF	; 255
    22f2:	71 f0       	breq	.+28     	; 0x2310 <__fp_splitA+0x1a>
    22f4:	47 95       	ror	r20

000022f6 <__fp_splitA>:
    22f6:	88 0f       	add	r24, r24
    22f8:	97 fb       	bst	r25, 7
    22fa:	99 1f       	adc	r25, r25
    22fc:	61 f0       	breq	.+24     	; 0x2316 <__fp_splitA+0x20>
    22fe:	9f 3f       	cpi	r25, 0xFF	; 255
    2300:	79 f0       	breq	.+30     	; 0x2320 <__fp_splitA+0x2a>
    2302:	87 95       	ror	r24
    2304:	08 95       	ret
    2306:	12 16       	cp	r1, r18
    2308:	13 06       	cpc	r1, r19
    230a:	14 06       	cpc	r1, r20
    230c:	55 1f       	adc	r21, r21
    230e:	f2 cf       	rjmp	.-28     	; 0x22f4 <__fp_split3+0xe>
    2310:	46 95       	lsr	r20
    2312:	f1 df       	rcall	.-30     	; 0x22f6 <__fp_splitA>
    2314:	08 c0       	rjmp	.+16     	; 0x2326 <__fp_splitA+0x30>
    2316:	16 16       	cp	r1, r22
    2318:	17 06       	cpc	r1, r23
    231a:	18 06       	cpc	r1, r24
    231c:	99 1f       	adc	r25, r25
    231e:	f1 cf       	rjmp	.-30     	; 0x2302 <__fp_splitA+0xc>
    2320:	86 95       	lsr	r24
    2322:	71 05       	cpc	r23, r1
    2324:	61 05       	cpc	r22, r1
    2326:	08 94       	sec
    2328:	08 95       	ret

0000232a <__fp_trunc>:
    232a:	0e 94 7b 11 	call	0x22f6	; 0x22f6 <__fp_splitA>
    232e:	a0 f0       	brcs	.+40     	; 0x2358 <__fp_trunc+0x2e>
    2330:	be e7       	ldi	r27, 0x7E	; 126
    2332:	b9 17       	cp	r27, r25
    2334:	88 f4       	brcc	.+34     	; 0x2358 <__fp_trunc+0x2e>
    2336:	bb 27       	eor	r27, r27
    2338:	9f 38       	cpi	r25, 0x8F	; 143
    233a:	60 f4       	brcc	.+24     	; 0x2354 <__fp_trunc+0x2a>
    233c:	16 16       	cp	r1, r22
    233e:	b1 1d       	adc	r27, r1
    2340:	67 2f       	mov	r22, r23
    2342:	78 2f       	mov	r23, r24
    2344:	88 27       	eor	r24, r24
    2346:	98 5f       	subi	r25, 0xF8	; 248
    2348:	f7 cf       	rjmp	.-18     	; 0x2338 <__fp_trunc+0xe>
    234a:	86 95       	lsr	r24
    234c:	77 95       	ror	r23
    234e:	67 95       	ror	r22
    2350:	b1 1d       	adc	r27, r1
    2352:	93 95       	inc	r25
    2354:	96 39       	cpi	r25, 0x96	; 150
    2356:	c8 f3       	brcs	.-14     	; 0x234a <__fp_trunc+0x20>
    2358:	08 95       	ret

0000235a <__fp_zero>:
    235a:	e8 94       	clt

0000235c <__fp_szero>:
    235c:	bb 27       	eor	r27, r27
    235e:	66 27       	eor	r22, r22
    2360:	77 27       	eor	r23, r23
    2362:	cb 01       	movw	r24, r22
    2364:	97 f9       	bld	r25, 7
    2366:	08 95       	ret

00002368 <__divmodsi4>:
    2368:	05 2e       	mov	r0, r21
    236a:	97 fb       	bst	r25, 7
    236c:	1e f4       	brtc	.+6      	; 0x2374 <__divmodsi4+0xc>
    236e:	00 94       	com	r0
    2370:	0e 94 cb 11 	call	0x2396	; 0x2396 <__negsi2>
    2374:	57 fd       	sbrc	r21, 7
    2376:	07 d0       	rcall	.+14     	; 0x2386 <__divmodsi4_neg2>
    2378:	0e 94 d3 11 	call	0x23a6	; 0x23a6 <__udivmodsi4>
    237c:	07 fc       	sbrc	r0, 7
    237e:	03 d0       	rcall	.+6      	; 0x2386 <__divmodsi4_neg2>
    2380:	4e f4       	brtc	.+18     	; 0x2394 <__divmodsi4_exit>
    2382:	0c 94 cb 11 	jmp	0x2396	; 0x2396 <__negsi2>

00002386 <__divmodsi4_neg2>:
    2386:	50 95       	com	r21
    2388:	40 95       	com	r20
    238a:	30 95       	com	r19
    238c:	21 95       	neg	r18
    238e:	3f 4f       	sbci	r19, 0xFF	; 255
    2390:	4f 4f       	sbci	r20, 0xFF	; 255
    2392:	5f 4f       	sbci	r21, 0xFF	; 255

00002394 <__divmodsi4_exit>:
    2394:	08 95       	ret

00002396 <__negsi2>:
    2396:	90 95       	com	r25
    2398:	80 95       	com	r24
    239a:	70 95       	com	r23
    239c:	61 95       	neg	r22
    239e:	7f 4f       	sbci	r23, 0xFF	; 255
    23a0:	8f 4f       	sbci	r24, 0xFF	; 255
    23a2:	9f 4f       	sbci	r25, 0xFF	; 255
    23a4:	08 95       	ret

000023a6 <__udivmodsi4>:
    23a6:	a1 e2       	ldi	r26, 0x21	; 33
    23a8:	1a 2e       	mov	r1, r26
    23aa:	aa 1b       	sub	r26, r26
    23ac:	bb 1b       	sub	r27, r27
    23ae:	fd 01       	movw	r30, r26
    23b0:	0d c0       	rjmp	.+26     	; 0x23cc <__udivmodsi4_ep>

000023b2 <__udivmodsi4_loop>:
    23b2:	aa 1f       	adc	r26, r26
    23b4:	bb 1f       	adc	r27, r27
    23b6:	ee 1f       	adc	r30, r30
    23b8:	ff 1f       	adc	r31, r31
    23ba:	a2 17       	cp	r26, r18
    23bc:	b3 07       	cpc	r27, r19
    23be:	e4 07       	cpc	r30, r20
    23c0:	f5 07       	cpc	r31, r21
    23c2:	20 f0       	brcs	.+8      	; 0x23cc <__udivmodsi4_ep>
    23c4:	a2 1b       	sub	r26, r18
    23c6:	b3 0b       	sbc	r27, r19
    23c8:	e4 0b       	sbc	r30, r20
    23ca:	f5 0b       	sbc	r31, r21

000023cc <__udivmodsi4_ep>:
    23cc:	66 1f       	adc	r22, r22
    23ce:	77 1f       	adc	r23, r23
    23d0:	88 1f       	adc	r24, r24
    23d2:	99 1f       	adc	r25, r25
    23d4:	1a 94       	dec	r1
    23d6:	69 f7       	brne	.-38     	; 0x23b2 <__udivmodsi4_loop>
    23d8:	60 95       	com	r22
    23da:	70 95       	com	r23
    23dc:	80 95       	com	r24
    23de:	90 95       	com	r25
    23e0:	9b 01       	movw	r18, r22
    23e2:	ac 01       	movw	r20, r24
    23e4:	bd 01       	movw	r22, r26
    23e6:	cf 01       	movw	r24, r30
    23e8:	08 95       	ret

000023ea <setjmp>:
    23ea:	dc 01       	movw	r26, r24
    23ec:	2d 92       	st	X+, r2
    23ee:	3d 92       	st	X+, r3
    23f0:	4d 92       	st	X+, r4
    23f2:	5d 92       	st	X+, r5
    23f4:	6d 92       	st	X+, r6
    23f6:	7d 92       	st	X+, r7
    23f8:	8d 92       	st	X+, r8
    23fa:	9d 92       	st	X+, r9
    23fc:	ad 92       	st	X+, r10
    23fe:	bd 92       	st	X+, r11
    2400:	cd 92       	st	X+, r12
    2402:	dd 92       	st	X+, r13
    2404:	ed 92       	st	X+, r14
    2406:	fd 92       	st	X+, r15
    2408:	0d 93       	st	X+, r16
    240a:	1d 93       	st	X+, r17
    240c:	cd 93       	st	X+, r28
    240e:	dd 93       	st	X+, r29
    2410:	ff 91       	pop	r31
    2412:	ef 91       	pop	r30
    2414:	8d b7       	in	r24, 0x3d	; 61
    2416:	8d 93       	st	X+, r24
    2418:	8e b7       	in	r24, 0x3e	; 62
    241a:	8d 93       	st	X+, r24
    241c:	8f b7       	in	r24, 0x3f	; 63
    241e:	8d 93       	st	X+, r24
    2420:	ed 93       	st	X+, r30
    2422:	fd 93       	st	X+, r31
    2424:	88 27       	eor	r24, r24
    2426:	99 27       	eor	r25, r25
    2428:	09 94       	ijmp

0000242a <longjmp>:
    242a:	dc 01       	movw	r26, r24
    242c:	cb 01       	movw	r24, r22
    242e:	81 30       	cpi	r24, 0x01	; 1
    2430:	91 05       	cpc	r25, r1
    2432:	81 1d       	adc	r24, r1
    2434:	2d 90       	ld	r2, X+
    2436:	3d 90       	ld	r3, X+
    2438:	4d 90       	ld	r4, X+
    243a:	5d 90       	ld	r5, X+
    243c:	6d 90       	ld	r6, X+
    243e:	7d 90       	ld	r7, X+
    2440:	8d 90       	ld	r8, X+
    2442:	9d 90       	ld	r9, X+
    2444:	ad 90       	ld	r10, X+
    2446:	bd 90       	ld	r11, X+
    2448:	cd 90       	ld	r12, X+
    244a:	dd 90       	ld	r13, X+
    244c:	ed 90       	ld	r14, X+
    244e:	fd 90       	ld	r15, X+
    2450:	0d 91       	ld	r16, X+
    2452:	1d 91       	ld	r17, X+
    2454:	cd 91       	ld	r28, X+
    2456:	dd 91       	ld	r29, X+
    2458:	ed 91       	ld	r30, X+
    245a:	fd 91       	ld	r31, X+
    245c:	0d 90       	ld	r0, X+
    245e:	f8 94       	cli
    2460:	fe bf       	out	0x3e, r31	; 62
    2462:	0f be       	out	0x3f, r0	; 63
    2464:	ed bf       	out	0x3d, r30	; 61
    2466:	ed 91       	ld	r30, X+
    2468:	fd 91       	ld	r31, X+
    246a:	09 94       	ijmp

0000246c <_exit>:
    246c:	f8 94       	cli

0000246e <__stop_program>:
    246e:	ff cf       	rjmp	.-2      	; 0x246e <__stop_program>
