
Lab 4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  00001dfe  00001e92  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001dfe  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000359  0080010a  0080010a  00001e9c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001e9c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001ecc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000210  00000000  00000000  00001f0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002472  00000000  00000000  0000211c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000edb  00000000  00000000  0000458e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000138a  00000000  00000000  00005469  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000b50  00000000  00000000  000067f4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000008aa  00000000  00000000  00007344  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000217c  00000000  00000000  00007bee  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001c0  00000000  00000000  00009d6a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
       4:	0c 94 9f 03 	jmp	0x73e	; 0x73e <__vector_1>
       8:	0c 94 0e 04 	jmp	0x81c	; 0x81c <__vector_2>
       c:	0c 94 7d 04 	jmp	0x8fa	; 0x8fa <__vector_3>
      10:	0c 94 ec 04 	jmp	0x9d8	; 0x9d8 <__vector_4>
      14:	0c 94 5b 05 	jmp	0xab6	; 0xab6 <__vector_5>
      18:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      1c:	0c 94 c6 0b 	jmp	0x178c	; 0x178c <__vector_7>
      20:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      24:	0c 94 74 0b 	jmp	0x16e8	; 0x16e8 <__vector_9>
      28:	0c 94 ca 05 	jmp	0xb94	; 0xb94 <__vector_10>
      2c:	0c 94 39 06 	jmp	0xc72	; 0xc72 <__vector_11>
      30:	0c 94 a8 06 	jmp	0xd50	; 0xd50 <__vector_12>
      34:	0c 94 17 07 	jmp	0xe2e	; 0xe2e <__vector_13>
      38:	0c 94 86 07 	jmp	0xf0c	; 0xf0c <__vector_14>
      3c:	0c 94 f5 07 	jmp	0xfea	; 0xfea <__vector_15>
      40:	0c 94 64 08 	jmp	0x10c8	; 0x10c8 <__vector_16>
      44:	0c 94 d3 08 	jmp	0x11a6	; 0x11a6 <__vector_17>
      48:	0c 94 42 09 	jmp	0x1284	; 0x1284 <__vector_18>
      4c:	0c 94 b1 09 	jmp	0x1362	; 0x1362 <__vector_19>
      50:	0c 94 20 0a 	jmp	0x1440	; 0x1440 <__vector_20>
      54:	0c 94 8f 0a 	jmp	0x151e	; 0x151e <__vector_21>
      58:	0c 94 fe 0a 	jmp	0x15fc	; 0x15fc <__vector_22>

0000005c <__ctors_end>:
      5c:	11 24       	eor	r1, r1
      5e:	1f be       	out	0x3f, r1	; 63
      60:	cf ef       	ldi	r28, 0xFF	; 255
      62:	d4 e0       	ldi	r29, 0x04	; 4
      64:	de bf       	out	0x3e, r29	; 62
      66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
      68:	11 e0       	ldi	r17, 0x01	; 1
      6a:	a0 e0       	ldi	r26, 0x00	; 0
      6c:	b1 e0       	ldi	r27, 0x01	; 1
      6e:	ee ef       	ldi	r30, 0xFE	; 254
      70:	fd e1       	ldi	r31, 0x1D	; 29
      72:	02 c0       	rjmp	.+4      	; 0x78 <__do_copy_data+0x10>
      74:	05 90       	lpm	r0, Z+
      76:	0d 92       	st	X+, r0
      78:	aa 30       	cpi	r26, 0x0A	; 10
      7a:	b1 07       	cpc	r27, r17
      7c:	d9 f7       	brne	.-10     	; 0x74 <__do_copy_data+0xc>

0000007e <__do_clear_bss>:
      7e:	24 e0       	ldi	r18, 0x04	; 4
      80:	aa e0       	ldi	r26, 0x0A	; 10
      82:	b1 e0       	ldi	r27, 0x01	; 1
      84:	01 c0       	rjmp	.+2      	; 0x88 <.do_clear_bss_start>

00000086 <.do_clear_bss_loop>:
      86:	1d 92       	st	X+, r1

00000088 <.do_clear_bss_start>:
      88:	a3 36       	cpi	r26, 0x63	; 99
      8a:	b2 07       	cpc	r27, r18
      8c:	e1 f7       	brne	.-8      	; 0x86 <.do_clear_bss_loop>
      8e:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <main>
      92:	0c 94 fd 0e 	jmp	0x1dfa	; 0x1dfa <_exit>

00000096 <__bad_interrupt>:
      96:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009a <UpDownPushBuffer>:
void switchSides(General *self){
	if (ActiveObj == self->pg1)
		ActiveObj = self->pg2;
	
	else if	(ActiveObj ==self->pg2)
		ActiveObj = self->pg1;
      9a:	cf 92       	push	r12
      9c:	df 92       	push	r13
      9e:	ef 92       	push	r14
      a0:	ff 92       	push	r15
      a2:	0f 93       	push	r16
      a4:	1f 93       	push	r17
      a6:	1e 99       	sbic	0x03, 6	; 3
      a8:	15 c0       	rjmp	.+42     	; 0xd4 <UpDownPushBuffer+0x3a>
      aa:	00 91 18 01 	lds	r16, 0x0118	; 0x800118 <ActiveObj>
      ae:	10 91 19 01 	lds	r17, 0x0119	; 0x800119 <ActiveObj+0x1>
      b2:	c1 2c       	mov	r12, r1
      b4:	d1 2c       	mov	r13, r1
      b6:	0f 2e       	mov	r0, r31
      b8:	f9 ec       	ldi	r31, 0xC9	; 201
      ba:	ef 2e       	mov	r14, r31
      bc:	f1 e0       	ldi	r31, 0x01	; 1
      be:	ff 2e       	mov	r15, r31
      c0:	f0 2d       	mov	r31, r0
      c2:	20 e0       	ldi	r18, 0x00	; 0
      c4:	30 e0       	ldi	r19, 0x00	; 0
      c6:	a9 01       	movw	r20, r18
      c8:	60 e0       	ldi	r22, 0x00	; 0
      ca:	70 e0       	ldi	r23, 0x00	; 0
      cc:	cb 01       	movw	r24, r22
      ce:	0e 94 66 0c 	call	0x18cc	; 0x18cc <async>
      d2:	2d c0       	rjmp	.+90     	; 0x12e <UpDownPushBuffer+0x94>
      d4:	1f 99       	sbic	0x03, 7	; 3
      d6:	15 c0       	rjmp	.+42     	; 0x102 <UpDownPushBuffer+0x68>
      d8:	00 91 18 01 	lds	r16, 0x0118	; 0x800118 <ActiveObj>
      dc:	10 91 19 01 	lds	r17, 0x0119	; 0x800119 <ActiveObj+0x1>
      e0:	c1 2c       	mov	r12, r1
      e2:	d1 2c       	mov	r13, r1
      e4:	0f 2e       	mov	r0, r31
      e6:	f5 ee       	ldi	r31, 0xE5	; 229
      e8:	ef 2e       	mov	r14, r31
      ea:	f1 e0       	ldi	r31, 0x01	; 1
      ec:	ff 2e       	mov	r15, r31
      ee:	f0 2d       	mov	r31, r0
      f0:	20 e0       	ldi	r18, 0x00	; 0
      f2:	30 e0       	ldi	r19, 0x00	; 0
      f4:	a9 01       	movw	r20, r18
      f6:	60 e0       	ldi	r22, 0x00	; 0
      f8:	70 e0       	ldi	r23, 0x00	; 0
      fa:	cb 01       	movw	r24, r22
      fc:	0e 94 66 0c 	call	0x18cc	; 0x18cc <async>
     100:	16 c0       	rjmp	.+44     	; 0x12e <UpDownPushBuffer+0x94>
     102:	1c 99       	sbic	0x03, 4	; 3
     104:	14 c0       	rjmp	.+40     	; 0x12e <UpDownPushBuffer+0x94>
     106:	00 91 18 01 	lds	r16, 0x0118	; 0x800118 <ActiveObj>
     10a:	10 91 19 01 	lds	r17, 0x0119	; 0x800119 <ActiveObj+0x1>
     10e:	c1 2c       	mov	r12, r1
     110:	d1 2c       	mov	r13, r1
     112:	0f 2e       	mov	r0, r31
     114:	f4 e0       	ldi	r31, 0x04	; 4
     116:	ef 2e       	mov	r14, r31
     118:	f2 e0       	ldi	r31, 0x02	; 2
     11a:	ff 2e       	mov	r15, r31
     11c:	f0 2d       	mov	r31, r0
     11e:	20 e0       	ldi	r18, 0x00	; 0
     120:	30 e0       	ldi	r19, 0x00	; 0
     122:	a9 01       	movw	r20, r18
     124:	60 e0       	ldi	r22, 0x00	; 0
     126:	70 e0       	ldi	r23, 0x00	; 0
     128:	cb 01       	movw	r24, r22
     12a:	0e 94 66 0c 	call	0x18cc	; 0x18cc <async>
     12e:	1f 91       	pop	r17
     130:	0f 91       	pop	r16
     132:	ff 90       	pop	r15
     134:	ef 90       	pop	r14
     136:	df 90       	pop	r13
     138:	cf 90       	pop	r12
     13a:	08 95       	ret

0000013c <LRBuffer>:
}

void LRBuffer(General *self){
		if (!(PINE & (1 << 2)))
     13c:	62 99       	sbic	0x0c, 2	; 12
     13e:	08 c0       	rjmp	.+16     	; 0x150 <LRBuffer+0x14>
		{
				ActiveObj = self->pg2;
     140:	fc 01       	movw	r30, r24
     142:	86 81       	ldd	r24, Z+6	; 0x06
     144:	97 81       	ldd	r25, Z+7	; 0x07
     146:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <ActiveObj+0x1>
     14a:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <ActiveObj>
     14e:	08 95       	ret
		}
		else if (!(PINE & (1 << 3)))
     150:	63 99       	sbic	0x0c, 3	; 12
     152:	07 c0       	rjmp	.+14     	; 0x162 <LRBuffer+0x26>
		{
				ActiveObj = self->pg1;
     154:	fc 01       	movw	r30, r24
     156:	84 81       	ldd	r24, Z+4	; 0x04
     158:	95 81       	ldd	r25, Z+5	; 0x05
     15a:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <ActiveObj+0x1>
     15e:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <ActiveObj>
     162:	08 95       	ret

00000164 <start>:
		}
			
}

void start(General *self){
     164:	cf 92       	push	r12
     166:	df 92       	push	r13
     168:	ef 92       	push	r14
     16a:	ff 92       	push	r15
     16c:	0f 93       	push	r16
     16e:	1f 93       	push	r17
     170:	cf 93       	push	r28
     172:	df 93       	push	r29
     174:	ec 01       	movw	r28, r24
	ActiveObj = self->pg1;
     176:	0c 81       	ldd	r16, Y+4	; 0x04
     178:	1d 81       	ldd	r17, Y+5	; 0x05
     17a:	10 93 19 01 	sts	0x0119, r17	; 0x800119 <ActiveObj+0x1>
     17e:	00 93 18 01 	sts	0x0118, r16	; 0x800118 <ActiveObj>
	ASYNC(self->pg1, outputPulse, 0);
     182:	c1 2c       	mov	r12, r1
     184:	d1 2c       	mov	r13, r1
     186:	0f 2e       	mov	r0, r31
     188:	f7 e7       	ldi	r31, 0x77	; 119
     18a:	ef 2e       	mov	r14, r31
     18c:	f1 e0       	ldi	r31, 0x01	; 1
     18e:	ff 2e       	mov	r15, r31
     190:	f0 2d       	mov	r31, r0
     192:	20 e0       	ldi	r18, 0x00	; 0
     194:	30 e0       	ldi	r19, 0x00	; 0
     196:	a9 01       	movw	r20, r18
     198:	60 e0       	ldi	r22, 0x00	; 0
     19a:	70 e0       	ldi	r23, 0x00	; 0
     19c:	cb 01       	movw	r24, r22
     19e:	0e 94 66 0c 	call	0x18cc	; 0x18cc <async>
	ASYNC(self->pg2, outputPulse, 0);
     1a2:	0e 81       	ldd	r16, Y+6	; 0x06
     1a4:	1f 81       	ldd	r17, Y+7	; 0x07
     1a6:	20 e0       	ldi	r18, 0x00	; 0
     1a8:	30 e0       	ldi	r19, 0x00	; 0
     1aa:	a9 01       	movw	r20, r18
     1ac:	60 e0       	ldi	r22, 0x00	; 0
     1ae:	70 e0       	ldi	r23, 0x00	; 0
     1b0:	cb 01       	movw	r24, r22
     1b2:	0e 94 66 0c 	call	0x18cc	; 0x18cc <async>
     1b6:	df 91       	pop	r29
     1b8:	cf 91       	pop	r28
     1ba:	1f 91       	pop	r17
     1bc:	0f 91       	pop	r16
     1be:	ff 90       	pop	r15
     1c0:	ef 90       	pop	r14
     1c2:	df 90       	pop	r13
     1c4:	cf 90       	pop	r12
     1c6:	08 95       	ret

000001c8 <main>:
#include "output.h"
#include "pulseGen.h"
#include "General.h"


int main(void){
     1c8:	cf 93       	push	r28
     1ca:	df 93       	push	r29
     1cc:	cd b7       	in	r28, 0x3d	; 61
     1ce:	de b7       	in	r29, 0x3e	; 62
     1d0:	a6 97       	sbiw	r28, 0x26	; 38
     1d2:	0f b6       	in	r0, 0x3f	; 63
     1d4:	f8 94       	cli
     1d6:	de bf       	out	0x3e, r29	; 62
     1d8:	0f be       	out	0x3f, r0	; 63
     1da:	cd bf       	out	0x3d, r28	; 61
	
PORTB = (1<<PB7 | 1<<PB6 | 1<<PB4 );																			//7down, 6up, 4push, 3
     1dc:	80 ed       	ldi	r24, 0xD0	; 208
     1de:	85 b9       	out	0x05, r24	; 5
PORTE = (1<<PE3 | 1<<PE2);																						//2left 3right
     1e0:	8c e0       	ldi	r24, 0x0C	; 12
     1e2:	8e b9       	out	0x0e, r24	; 14
PCMSK1 = (1<<PCINT15)|(1<<PCINT14)|(1<<PCINT13)|(1<<PCINT12)|(1<<PCINT11)|(1<<PCINT10)|(1<<PCINT9)|(1<<PCINT8); //carpet bombing with interrupts
     1e4:	8f ef       	ldi	r24, 0xFF	; 255
     1e6:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <__TEXT_REGION_LENGTH__+0x7fc06c>
PCMSK0 =(1<<PCINT7)|(1<<PCINT6)|(1<<PCINT5)|(1<<PCINT4)|(1<<PCINT3)|(1<<PCINT2)|(1<<PCINT1)|(1<<PCINT0);
     1ea:	80 93 6b 00 	sts	0x006B, r24	; 0x80006b <__TEXT_REGION_LENGTH__+0x7fc06b>
EIMSK |= (1 << PCIE1) | (1 << PCIE0);
     1ee:	8d b3       	in	r24, 0x1d	; 29
     1f0:	80 6c       	ori	r24, 0xC0	; 192
     1f2:	8d bb       	out	0x1d, r24	; 29


output op = initOutput(0);				//initialize output with state 0
     1f4:	1a 82       	std	Y+2, r1	; 0x02
     1f6:	19 82       	std	Y+1, r1	; 0x01
     1f8:	1c 82       	std	Y+4, r1	; 0x04
     1fa:	1b 82       	std	Y+3, r1	; 0x03
     1fc:	1e 82       	std	Y+6, r1	; 0x06
     1fe:	1d 82       	std	Y+5, r1	; 0x05
pulseGen pg1 = initpulseGen(0, 1, &op);
     200:	18 86       	std	Y+8, r1	; 0x08
     202:	1f 82       	std	Y+7, r1	; 0x07
     204:	1a 86       	std	Y+10, r1	; 0x0a
     206:	19 86       	std	Y+9, r1	; 0x09
     208:	1c 86       	std	Y+12, r1	; 0x0c
     20a:	1b 86       	std	Y+11, r1	; 0x0b
     20c:	81 e0       	ldi	r24, 0x01	; 1
     20e:	90 e0       	ldi	r25, 0x00	; 0
     210:	9e 87       	std	Y+14, r25	; 0x0e
     212:	8d 87       	std	Y+13, r24	; 0x0d
     214:	98 8b       	std	Y+16, r25	; 0x10
     216:	8f 87       	std	Y+15, r24	; 0x0f
     218:	9e 01       	movw	r18, r28
     21a:	2f 5f       	subi	r18, 0xFF	; 255
     21c:	3f 4f       	sbci	r19, 0xFF	; 255
     21e:	3a 8b       	std	Y+18, r19	; 0x12
     220:	29 8b       	std	Y+17, r18	; 0x11
pulseGen pg2 = initpulseGen(1, 4, &op);
     222:	1c 8a       	std	Y+20, r1	; 0x14
     224:	1b 8a       	std	Y+19, r1	; 0x13
     226:	1e 8a       	std	Y+22, r1	; 0x16
     228:	1d 8a       	std	Y+21, r1	; 0x15
     22a:	98 8f       	std	Y+24, r25	; 0x18
     22c:	8f 8b       	std	Y+23, r24	; 0x17
     22e:	44 e0       	ldi	r20, 0x04	; 4
     230:	50 e0       	ldi	r21, 0x00	; 0
     232:	5a 8f       	std	Y+26, r21	; 0x1a
     234:	49 8f       	std	Y+25, r20	; 0x19
     236:	9c 8f       	std	Y+28, r25	; 0x1c
     238:	8b 8f       	std	Y+27, r24	; 0x1b
     23a:	3e 8f       	std	Y+30, r19	; 0x1e
     23c:	2d 8f       	std	Y+29, r18	; 0x1d
General G = initGeneral(&pg1, &pg2);
     23e:	18 a2       	std	Y+32, r1	; 0x20
     240:	1f 8e       	std	Y+31, r1	; 0x1f
     242:	1a a2       	std	Y+34, r1	; 0x22
     244:	19 a2       	std	Y+33, r1	; 0x21
     246:	ce 01       	movw	r24, r28
     248:	07 96       	adiw	r24, 0x07	; 7
     24a:	9c a3       	std	Y+36, r25	; 0x24
     24c:	8b a3       	std	Y+35, r24	; 0x23
     24e:	0c 96       	adiw	r24, 0x0c	; 12
     250:	9e a3       	std	Y+38, r25	; 0x26
     252:	8d a3       	std	Y+37, r24	; 0x25

INSTALL(&G, LRBuffer, IRQ_PCINT0);
     254:	41 e0       	ldi	r20, 0x01	; 1
     256:	6e e9       	ldi	r22, 0x9E	; 158
     258:	70 e0       	ldi	r23, 0x00	; 0
     25a:	0c 96       	adiw	r24, 0x0c	; 12
     25c:	0e 94 49 0e 	call	0x1c92	; 0x1c92 <install>
INSTALL(&G, UpDownPushBuffer, IRQ_PCINT1);
     260:	42 e0       	ldi	r20, 0x02	; 2
     262:	6d e4       	ldi	r22, 0x4D	; 77
     264:	70 e0       	ldi	r23, 0x00	; 0
     266:	ce 01       	movw	r24, r28
     268:	4f 96       	adiw	r24, 0x1f	; 31
     26a:	0e 94 49 0e 	call	0x1c92	; 0x1c92 <install>
return TINYTIMBER(&G, start, 0);
     26e:	40 e0       	ldi	r20, 0x00	; 0
     270:	50 e0       	ldi	r21, 0x00	; 0
     272:	62 eb       	ldi	r22, 0xB2	; 178
     274:	70 e0       	ldi	r23, 0x00	; 0
     276:	ce 01       	movw	r24, r28
     278:	4f 96       	adiw	r24, 0x1f	; 31
     27a:	0e 94 64 0e 	call	0x1cc8	; 0x1cc8 <tinytimber>
     27e:	a6 96       	adiw	r28, 0x26	; 38
     280:	0f b6       	in	r0, 0x3f	; 63
     282:	f8 94       	cli
     284:	de bf       	out	0x3e, r29	; 62
     286:	0f be       	out	0x3f, r0	; 63
     288:	cd bf       	out	0x3d, r28	; 61
     28a:	df 91       	pop	r29
     28c:	cf 91       	pop	r28
     28e:	08 95       	ret

00000290 <pinPulse>:
#include "output.h"
#include <avr/io.h>

void pinPulse(output *self, int x)
{
	 if (self->state ==1)
     290:	fc 01       	movw	r30, r24
     292:	24 81       	ldd	r18, Z+4	; 0x04
     294:	35 81       	ldd	r19, Z+5	; 0x05
     296:	21 30       	cpi	r18, 0x01	; 1
     298:	31 05       	cpc	r19, r1
     29a:	69 f4       	brne	.+26     	; 0x2b6 <pinPulse+0x26>
	{
		if (x ==0)
     29c:	61 15       	cp	r22, r1
     29e:	71 05       	cpc	r23, r1
     2a0:	11 f4       	brne	.+4      	; 0x2a6 <pinPulse+0x16>
			PORTE = (0<<PE4);
     2a2:	1e b8       	out	0x0e, r1	; 14
     2a4:	04 c0       	rjmp	.+8      	; 0x2ae <pinPulse+0x1e>
		else if (x ==1)
     2a6:	61 30       	cpi	r22, 0x01	; 1
     2a8:	71 05       	cpc	r23, r1
     2aa:	09 f4       	brne	.+2      	; 0x2ae <pinPulse+0x1e>
			PORTE = (0<<PE6);
     2ac:	1e b8       	out	0x0e, r1	; 14
			
		self->state = 0;
     2ae:	fc 01       	movw	r30, r24
     2b0:	15 82       	std	Z+5, r1	; 0x05
     2b2:	14 82       	std	Z+4, r1	; 0x04
     2b4:	08 95       	ret
	}
	else if (self->state == 0)
     2b6:	23 2b       	or	r18, r19
     2b8:	79 f4       	brne	.+30     	; 0x2d8 <pinPulse+0x48>
	{
		if (x ==0){
     2ba:	61 15       	cp	r22, r1
     2bc:	71 05       	cpc	r23, r1
     2be:	11 f4       	brne	.+4      	; 0x2c4 <pinPulse+0x34>
			PORTE = (1<<PE4);
     2c0:	20 e1       	ldi	r18, 0x10	; 16
     2c2:	2e b9       	out	0x0e, r18	; 14
		}
		if (x ==1){
     2c4:	61 30       	cpi	r22, 0x01	; 1
     2c6:	71 05       	cpc	r23, r1
     2c8:	11 f4       	brne	.+4      	; 0x2ce <pinPulse+0x3e>
			PORTE = (1<<PE6);
     2ca:	20 e4       	ldi	r18, 0x40	; 64
     2cc:	2e b9       	out	0x0e, r18	; 14
		}
		self->state =1;
     2ce:	21 e0       	ldi	r18, 0x01	; 1
     2d0:	30 e0       	ldi	r19, 0x00	; 0
     2d2:	fc 01       	movw	r30, r24
     2d4:	35 83       	std	Z+5, r19	; 0x05
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	08 95       	ret

000002da <cutPulse>:
	}
}

void cutPulse(output *self, int x){
	if (x == 0){
     2da:	61 15       	cp	r22, r1
     2dc:	71 05       	cpc	r23, r1
     2de:	11 f4       	brne	.+4      	; 0x2e4 <cutPulse+0xa>
		PORTE = (0<<PE4);
     2e0:	1e b8       	out	0x0e, r1	; 14
     2e2:	08 95       	ret
	}
	else if (x == 1){
     2e4:	61 30       	cpi	r22, 0x01	; 1
     2e6:	71 05       	cpc	r23, r1
     2e8:	09 f4       	brne	.+2      	; 0x2ec <cutPulse+0x12>
		PORTE = (0<<PE6);
     2ea:	1e b8       	out	0x0e, r1	; 14
     2ec:	08 95       	ret

000002ee <outputPulse>:
		self->onOff =1;
	}
}


void  outputPulse(pulseGen *self){
     2ee:	cf 92       	push	r12
     2f0:	df 92       	push	r13
     2f2:	ef 92       	push	r14
     2f4:	ff 92       	push	r15
     2f6:	0f 93       	push	r16
     2f8:	1f 93       	push	r17
     2fa:	cf 93       	push	r28
     2fc:	df 93       	push	r29
     2fe:	ec 01       	movw	r28, r24
	if (self->onOff ==1){
     300:	88 85       	ldd	r24, Y+8	; 0x08
     302:	99 85       	ldd	r25, Y+9	; 0x09
     304:	81 30       	cpi	r24, 0x01	; 1
     306:	91 05       	cpc	r25, r1
     308:	39 f5       	brne	.+78     	; 0x358 <outputPulse+0x6a>
		j = self->target;
     30a:	6c 81       	ldd	r22, Y+4	; 0x04
     30c:	7d 81       	ldd	r23, Y+5	; 0x05
     30e:	70 93 0b 01 	sts	0x010B, r23	; 0x80010b <__data_end+0x1>
     312:	60 93 0a 01 	sts	0x010A, r22	; 0x80010a <__data_end>
		pinPulse(self->op, self->target);				 //output frequency to oscilloscope
     316:	8a 85       	ldd	r24, Y+10	; 0x0a
     318:	9b 85       	ldd	r25, Y+11	; 0x0b
     31a:	0e 94 48 01 	call	0x290	; 0x290 <pinPulse>
		AFTER(((SEC(1)) /(self->frequency) /2), self, outputPulse, 0); //waits for  frequency period before repeating output
     31e:	2e 81       	ldd	r18, Y+6	; 0x06
     320:	3f 81       	ldd	r19, Y+7	; 0x07
     322:	03 2e       	mov	r0, r19
     324:	00 0c       	add	r0, r0
     326:	44 0b       	sbc	r20, r20
     328:	55 0b       	sbc	r21, r21
     32a:	69 e0       	ldi	r22, 0x09	; 9
     32c:	7d e3       	ldi	r23, 0x3D	; 61
     32e:	80 e0       	ldi	r24, 0x00	; 0
     330:	90 e0       	ldi	r25, 0x00	; 0
     332:	0e 94 7b 0e 	call	0x1cf6	; 0x1cf6 <__divmodsi4>
     336:	ca 01       	movw	r24, r20
     338:	b9 01       	movw	r22, r18
     33a:	c1 2c       	mov	r12, r1
     33c:	d1 2c       	mov	r13, r1
     33e:	0f 2e       	mov	r0, r31
     340:	f7 e7       	ldi	r31, 0x77	; 119
     342:	ef 2e       	mov	r14, r31
     344:	f1 e0       	ldi	r31, 0x01	; 1
     346:	ff 2e       	mov	r15, r31
     348:	f0 2d       	mov	r31, r0
     34a:	8e 01       	movw	r16, r28
     34c:	20 e0       	ldi	r18, 0x00	; 0
     34e:	30 e0       	ldi	r19, 0x00	; 0
     350:	a9 01       	movw	r20, r18
     352:	0e 94 66 0c 	call	0x18cc	; 0x18cc <async>
     356:	14 c0       	rjmp	.+40     	; 0x380 <outputPulse+0x92>
	}
	else if (self->onOff == 0){
     358:	89 2b       	or	r24, r25
     35a:	91 f4       	brne	.+36     	; 0x380 <outputPulse+0x92>
		ASYNC(self->op, cutPulse, self->target);						//output 0 to oscilloscope
     35c:	0a 85       	ldd	r16, Y+10	; 0x0a
     35e:	1b 85       	ldd	r17, Y+11	; 0x0b
     360:	cc 80       	ldd	r12, Y+4	; 0x04
     362:	dd 80       	ldd	r13, Y+5	; 0x05
     364:	0f 2e       	mov	r0, r31
     366:	fd e6       	ldi	r31, 0x6D	; 109
     368:	ef 2e       	mov	r14, r31
     36a:	f1 e0       	ldi	r31, 0x01	; 1
     36c:	ff 2e       	mov	r15, r31
     36e:	f0 2d       	mov	r31, r0
     370:	20 e0       	ldi	r18, 0x00	; 0
     372:	30 e0       	ldi	r19, 0x00	; 0
     374:	a9 01       	movw	r20, r18
     376:	60 e0       	ldi	r22, 0x00	; 0
     378:	70 e0       	ldi	r23, 0x00	; 0
     37a:	cb 01       	movw	r24, r22
     37c:	0e 94 66 0c 	call	0x18cc	; 0x18cc <async>
		//AFTER(((SEC(1)) /(self->frequency) /2), self, outputPulse, 0);
		
	}
     380:	df 91       	pop	r29
     382:	cf 91       	pop	r28
     384:	1f 91       	pop	r17
     386:	0f 91       	pop	r16
     388:	ff 90       	pop	r15
     38a:	ef 90       	pop	r14
     38c:	df 90       	pop	r13
     38e:	cf 90       	pop	r12
     390:	08 95       	ret

00000392 <plusPulse>:
int j = 0;
int k = 1;


void  plusPulse(pulseGen *self){
	i++;
     392:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <i>
     396:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <i+0x1>
     39a:	2f 5f       	subi	r18, 0xFF	; 255
     39c:	3f 4f       	sbci	r19, 0xFF	; 255
     39e:	30 93 0d 01 	sts	0x010D, r19	; 0x80010d <i+0x1>
     3a2:	20 93 0c 01 	sts	0x010C, r18	; 0x80010c <i>
	k++;
     3a6:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     3aa:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     3ae:	2f 5f       	subi	r18, 0xFF	; 255
     3b0:	3f 4f       	sbci	r19, 0xFF	; 255
     3b2:	30 93 01 01 	sts	0x0101, r19	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     3b6:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <__DATA_REGION_ORIGIN__>
	self->frequency = self->frequency +1; 
     3ba:	fc 01       	movw	r30, r24
     3bc:	26 81       	ldd	r18, Z+6	; 0x06
     3be:	37 81       	ldd	r19, Z+7	; 0x07
     3c0:	2f 5f       	subi	r18, 0xFF	; 255
     3c2:	3f 4f       	sbci	r19, 0xFF	; 255
     3c4:	37 83       	std	Z+7, r19	; 0x07
     3c6:	26 83       	std	Z+6, r18	; 0x06
     3c8:	08 95       	ret

000003ca <minusPulse>:
}

void  minusPulse(pulseGen *self){
	j++;
     3ca:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
     3ce:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
     3d2:	2f 5f       	subi	r18, 0xFF	; 255
     3d4:	3f 4f       	sbci	r19, 0xFF	; 255
     3d6:	30 93 0b 01 	sts	0x010B, r19	; 0x80010b <__data_end+0x1>
     3da:	20 93 0a 01 	sts	0x010A, r18	; 0x80010a <__data_end>
	k--;
     3de:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     3e2:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     3e6:	21 50       	subi	r18, 0x01	; 1
     3e8:	31 09       	sbc	r19, r1
     3ea:	30 93 01 01 	sts	0x0101, r19	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     3ee:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <__DATA_REGION_ORIGIN__>
	if (self->frequency > 1){
     3f2:	fc 01       	movw	r30, r24
     3f4:	26 81       	ldd	r18, Z+6	; 0x06
     3f6:	37 81       	ldd	r19, Z+7	; 0x07
     3f8:	22 30       	cpi	r18, 0x02	; 2
     3fa:	31 05       	cpc	r19, r1
     3fc:	24 f0       	brlt	.+8      	; 0x406 <__DATA_REGION_LENGTH__+0x6>
		self->frequency = self->frequency -1;
     3fe:	21 50       	subi	r18, 0x01	; 1
     400:	31 09       	sbc	r19, r1
     402:	37 83       	std	Z+7, r19	; 0x07
     404:	26 83       	std	Z+6, r18	; 0x06
     406:	08 95       	ret

00000408 <toZero>:
	}
}

void  toZero( pulseGen *self){
	if (self->onOff ==1){
     408:	fc 01       	movw	r30, r24
     40a:	20 85       	ldd	r18, Z+8	; 0x08
     40c:	31 85       	ldd	r19, Z+9	; 0x09
     40e:	21 30       	cpi	r18, 0x01	; 1
     410:	31 05       	cpc	r19, r1
     412:	19 f4       	brne	.+6      	; 0x41a <toZero+0x12>
		self->onOff = 0;
     414:	11 86       	std	Z+9, r1	; 0x09
     416:	10 86       	std	Z+8, r1	; 0x08
     418:	08 95       	ret
	}
	else if (self->onOff ==0){
     41a:	23 2b       	or	r18, r19
     41c:	29 f4       	brne	.+10     	; 0x428 <toZero+0x20>
		self->onOff =1;
     41e:	21 e0       	ldi	r18, 0x01	; 1
     420:	30 e0       	ldi	r19, 0x00	; 0
     422:	fc 01       	movw	r30, r24
     424:	31 87       	std	Z+9, r19	; 0x09
     426:	20 87       	std	Z+8, r18	; 0x08
     428:	08 95       	ret

0000042a <initialize>:
    Time now;
    DISABLE(status);
    TIMERGET(now);
    ENABLE(status);
    return now - (status ? current->msg->baseline : timestamp);
}
     42a:	cf 93       	push	r28
     42c:	df 93       	push	r29
     42e:	00 d0       	rcall	.+0      	; 0x430 <initialize+0x6>
     430:	00 d0       	rcall	.+0      	; 0x432 <initialize+0x8>
     432:	cd b7       	in	r28, 0x3d	; 61
     434:	de b7       	in	r29, 0x3e	; 62
     436:	80 e0       	ldi	r24, 0x00	; 0
     438:	90 e0       	ldi	r25, 0x00	; 0
     43a:	18 c0       	rjmp	.+48     	; 0x46c <initialize+0x42>
     43c:	ac 01       	movw	r20, r24
     43e:	4f 5f       	subi	r20, 0xFF	; 255
     440:	5f 4f       	sbci	r21, 0xFF	; 255
     442:	9a 01       	movw	r18, r20
     444:	22 95       	swap	r18
     446:	32 95       	swap	r19
     448:	30 7f       	andi	r19, 0xF0	; 240
     44a:	32 27       	eor	r19, r18
     44c:	20 7f       	andi	r18, 0xF0	; 240
     44e:	32 27       	eor	r19, r18
     450:	2d 50       	subi	r18, 0x0D	; 13
     452:	3e 4f       	sbci	r19, 0xFE	; 254
     454:	82 95       	swap	r24
     456:	92 95       	swap	r25
     458:	90 7f       	andi	r25, 0xF0	; 240
     45a:	98 27       	eor	r25, r24
     45c:	80 7f       	andi	r24, 0xF0	; 240
     45e:	98 27       	eor	r25, r24
     460:	fc 01       	movw	r30, r24
     462:	ed 50       	subi	r30, 0x0D	; 13
     464:	fe 4f       	sbci	r31, 0xFE	; 254
     466:	31 83       	std	Z+1, r19	; 0x01
     468:	20 83       	st	Z, r18
     46a:	ca 01       	movw	r24, r20
     46c:	8e 30       	cpi	r24, 0x0E	; 14
     46e:	91 05       	cpc	r25, r1
     470:	2c f3       	brlt	.-54     	; 0x43c <initialize+0x12>
     472:	10 92 d4 02 	sts	0x02D4, r1	; 0x8002d4 <messages+0xe1>
     476:	10 92 d3 02 	sts	0x02D3, r1	; 0x8002d3 <messages+0xe0>
     47a:	80 e0       	ldi	r24, 0x00	; 0
     47c:	90 e0       	ldi	r25, 0x00	; 0
     47e:	15 c0       	rjmp	.+42     	; 0x4aa <initialize+0x80>
     480:	ac 01       	movw	r20, r24
     482:	4f 5f       	subi	r20, 0xFF	; 255
     484:	5f 4f       	sbci	r21, 0xFF	; 255
     486:	6d e1       	ldi	r22, 0x1D	; 29
     488:	64 9f       	mul	r22, r20
     48a:	90 01       	movw	r18, r0
     48c:	65 9f       	mul	r22, r21
     48e:	30 0d       	add	r19, r0
     490:	11 24       	eor	r1, r1
     492:	22 5c       	subi	r18, 0xC2	; 194
     494:	3e 4f       	sbci	r19, 0xFE	; 254
     496:	68 9f       	mul	r22, r24
     498:	f0 01       	movw	r30, r0
     49a:	69 9f       	mul	r22, r25
     49c:	f0 0d       	add	r31, r0
     49e:	11 24       	eor	r1, r1
     4a0:	e2 5c       	subi	r30, 0xC2	; 194
     4a2:	fe 4f       	sbci	r31, 0xFE	; 254
     4a4:	31 83       	std	Z+1, r19	; 0x01
     4a6:	20 83       	st	Z, r18
     4a8:	ca 01       	movw	r24, r20
     4aa:	83 30       	cpi	r24, 0x03	; 3
     4ac:	91 05       	cpc	r25, r1
     4ae:	44 f3       	brlt	.-48     	; 0x480 <initialize+0x56>
     4b0:	10 92 96 01 	sts	0x0196, r1	; 0x800196 <threads+0x58>
     4b4:	10 92 95 01 	sts	0x0195, r1	; 0x800195 <threads+0x57>
     4b8:	1a 82       	std	Y+2, r1	; 0x02
     4ba:	19 82       	std	Y+1, r1	; 0x01
     4bc:	32 c0       	rjmp	.+100    	; 0x522 <__stack+0x23>
     4be:	2d e1       	ldi	r18, 0x1D	; 29
     4c0:	49 81       	ldd	r20, Y+1	; 0x01
     4c2:	5a 81       	ldd	r21, Y+2	; 0x02
     4c4:	24 9f       	mul	r18, r20
     4c6:	c0 01       	movw	r24, r0
     4c8:	25 9f       	mul	r18, r21
     4ca:	90 0d       	add	r25, r0
     4cc:	11 24       	eor	r1, r1
     4ce:	fc 01       	movw	r30, r24
     4d0:	ec 5b       	subi	r30, 0xBC	; 188
     4d2:	fe 4f       	sbci	r31, 0xFE	; 254
     4d4:	fc 83       	std	Y+4, r31	; 0x04
     4d6:	eb 83       	std	Y+3, r30	; 0x03
     4d8:	cf 01       	movw	r24, r30
     4da:	0e 94 bc 0e 	call	0x1d78	; 0x1d78 <setjmp>
     4de:	20 e6       	ldi	r18, 0x60	; 96
     4e0:	49 81       	ldd	r20, Y+1	; 0x01
     4e2:	5a 81       	ldd	r21, Y+2	; 0x02
     4e4:	24 9f       	mul	r18, r20
     4e6:	c0 01       	movw	r24, r0
     4e8:	25 9f       	mul	r18, r21
     4ea:	90 0d       	add	r25, r0
     4ec:	11 24       	eor	r1, r1
     4ee:	81 5c       	subi	r24, 0xC1	; 193
     4f0:	9c 4f       	sbci	r25, 0xFC	; 252
     4f2:	eb 81       	ldd	r30, Y+3	; 0x03
     4f4:	fc 81       	ldd	r31, Y+4	; 0x04
     4f6:	91 8b       	std	Z+17, r25	; 0x11
     4f8:	80 8b       	std	Z+16, r24	; 0x10
     4fa:	93 8b       	std	Z+19, r25	; 0x13
     4fc:	82 8b       	std	Z+18, r24	; 0x12
     4fe:	81 ef       	ldi	r24, 0xF1	; 241
     500:	9d e0       	ldi	r25, 0x0D	; 13
     502:	96 8b       	std	Z+22, r25	; 0x16
     504:	85 8b       	std	Z+21, r24	; 0x15
     506:	8d e1       	ldi	r24, 0x1D	; 29
     508:	84 9f       	mul	r24, r20
     50a:	f0 01       	movw	r30, r0
     50c:	85 9f       	mul	r24, r21
     50e:	f0 0d       	add	r31, r0
     510:	11 24       	eor	r1, r1
     512:	e2 5c       	subi	r30, 0xC2	; 194
     514:	fe 4f       	sbci	r31, 0xFE	; 254
     516:	15 82       	std	Z+5, r1	; 0x05
     518:	14 82       	std	Z+4, r1	; 0x04
     51a:	4f 5f       	subi	r20, 0xFF	; 255
     51c:	5f 4f       	sbci	r21, 0xFF	; 255
     51e:	5a 83       	std	Y+2, r21	; 0x02
     520:	49 83       	std	Y+1, r20	; 0x01
     522:	29 81       	ldd	r18, Y+1	; 0x01
     524:	3a 81       	ldd	r19, Y+2	; 0x02
     526:	24 30       	cpi	r18, 0x04	; 4
     528:	31 05       	cpc	r19, r1
     52a:	4c f2       	brlt	.-110    	; 0x4be <initialize+0x94>
     52c:	e6 ed       	ldi	r30, 0xD6	; 214
     52e:	f1 e0       	ldi	r31, 0x01	; 1
     530:	11 82       	std	Z+1, r1	; 0x01
     532:	10 82       	st	Z, r1
     534:	15 82       	std	Z+5, r1	; 0x05
     536:	14 82       	std	Z+4, r1	; 0x04
     538:	13 82       	std	Z+3, r1	; 0x03
     53a:	12 82       	std	Z+2, r1	; 0x02
     53c:	e1 e6       	ldi	r30, 0x61	; 97
     53e:	f0 e0       	ldi	r31, 0x00	; 0
     540:	80 e8       	ldi	r24, 0x80	; 128
     542:	80 83       	st	Z, r24
     544:	10 82       	st	Z, r1
     546:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     54a:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     54e:	84 e0       	ldi	r24, 0x04	; 4
     550:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7fc081>
     554:	81 e0       	ldi	r24, 0x01	; 1
     556:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
     55a:	0f 90       	pop	r0
     55c:	0f 90       	pop	r0
     55e:	0f 90       	pop	r0
     560:	0f 90       	pop	r0
     562:	df 91       	pop	r29
     564:	cf 91       	pop	r28
     566:	08 95       	ret

00000568 <dispatch>:
     568:	cf 93       	push	r28
     56a:	df 93       	push	r29
     56c:	00 d0       	rcall	.+0      	; 0x56e <dispatch+0x6>
     56e:	cd b7       	in	r28, 0x3d	; 61
     570:	de b7       	in	r29, 0x3e	; 62
     572:	9a 83       	std	Y+2, r25	; 0x02
     574:	89 83       	std	Y+1, r24	; 0x01
     576:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <current>
     57a:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <current+0x1>
     57e:	06 96       	adiw	r24, 0x06	; 6
     580:	0e 94 bc 0e 	call	0x1d78	; 0x1d78 <setjmp>
     584:	89 2b       	or	r24, r25
     586:	59 f4       	brne	.+22     	; 0x59e <dispatch+0x36>
     588:	89 81       	ldd	r24, Y+1	; 0x01
     58a:	9a 81       	ldd	r25, Y+2	; 0x02
     58c:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <current+0x1>
     590:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <current>
     594:	61 e0       	ldi	r22, 0x01	; 1
     596:	70 e0       	ldi	r23, 0x00	; 0
     598:	06 96       	adiw	r24, 0x06	; 6
     59a:	0e 94 dc 0e 	call	0x1db8	; 0x1db8 <longjmp>
     59e:	0f 90       	pop	r0
     5a0:	0f 90       	pop	r0
     5a2:	df 91       	pop	r29
     5a4:	cf 91       	pop	r28
     5a6:	08 95       	ret

000005a8 <enqueueByDeadline>:
     5a8:	0f 93       	push	r16
     5aa:	1f 93       	push	r17
     5ac:	cf 93       	push	r28
     5ae:	df 93       	push	r29
     5b0:	dc 01       	movw	r26, r24
     5b2:	cb 01       	movw	r24, r22
     5b4:	eb 01       	movw	r28, r22
     5b6:	e8 81       	ld	r30, Y
     5b8:	f9 81       	ldd	r31, Y+1	; 0x01
     5ba:	c0 e0       	ldi	r28, 0x00	; 0
     5bc:	d0 e0       	ldi	r29, 0x00	; 0
     5be:	04 c0       	rjmp	.+8      	; 0x5c8 <enqueueByDeadline+0x20>
     5c0:	ef 01       	movw	r28, r30
     5c2:	01 90       	ld	r0, Z+
     5c4:	f0 81       	ld	r31, Z
     5c6:	e0 2d       	mov	r30, r0
     5c8:	30 97       	sbiw	r30, 0x00	; 0
     5ca:	79 f0       	breq	.+30     	; 0x5ea <enqueueByDeadline+0x42>
     5cc:	06 81       	ldd	r16, Z+6	; 0x06
     5ce:	17 81       	ldd	r17, Z+7	; 0x07
     5d0:	20 85       	ldd	r18, Z+8	; 0x08
     5d2:	31 85       	ldd	r19, Z+9	; 0x09
     5d4:	16 96       	adiw	r26, 0x06	; 6
     5d6:	4d 91       	ld	r20, X+
     5d8:	5d 91       	ld	r21, X+
     5da:	6d 91       	ld	r22, X+
     5dc:	7c 91       	ld	r23, X
     5de:	19 97       	sbiw	r26, 0x09	; 9
     5e0:	40 17       	cp	r20, r16
     5e2:	51 07       	cpc	r21, r17
     5e4:	62 07       	cpc	r22, r18
     5e6:	73 07       	cpc	r23, r19
     5e8:	5c f7       	brge	.-42     	; 0x5c0 <enqueueByDeadline+0x18>
     5ea:	11 96       	adiw	r26, 0x01	; 1
     5ec:	fc 93       	st	X, r31
     5ee:	ee 93       	st	-X, r30
     5f0:	20 97       	sbiw	r28, 0x00	; 0
     5f2:	21 f4       	brne	.+8      	; 0x5fc <enqueueByDeadline+0x54>
     5f4:	fc 01       	movw	r30, r24
     5f6:	b1 83       	std	Z+1, r27	; 0x01
     5f8:	a0 83       	st	Z, r26
     5fa:	02 c0       	rjmp	.+4      	; 0x600 <enqueueByDeadline+0x58>
     5fc:	b9 83       	std	Y+1, r27	; 0x01
     5fe:	a8 83       	st	Y, r26
     600:	df 91       	pop	r29
     602:	cf 91       	pop	r28
     604:	1f 91       	pop	r17
     606:	0f 91       	pop	r16
     608:	08 95       	ret

0000060a <enqueueByBaseline>:
     60a:	0f 93       	push	r16
     60c:	1f 93       	push	r17
     60e:	cf 93       	push	r28
     610:	df 93       	push	r29
     612:	dc 01       	movw	r26, r24
     614:	cb 01       	movw	r24, r22
     616:	eb 01       	movw	r28, r22
     618:	e8 81       	ld	r30, Y
     61a:	f9 81       	ldd	r31, Y+1	; 0x01
     61c:	c0 e0       	ldi	r28, 0x00	; 0
     61e:	d0 e0       	ldi	r29, 0x00	; 0
     620:	04 c0       	rjmp	.+8      	; 0x62a <enqueueByBaseline+0x20>
     622:	ef 01       	movw	r28, r30
     624:	01 90       	ld	r0, Z+
     626:	f0 81       	ld	r31, Z
     628:	e0 2d       	mov	r30, r0
     62a:	30 97       	sbiw	r30, 0x00	; 0
     62c:	79 f0       	breq	.+30     	; 0x64c <enqueueByBaseline+0x42>
     62e:	02 81       	ldd	r16, Z+2	; 0x02
     630:	13 81       	ldd	r17, Z+3	; 0x03
     632:	24 81       	ldd	r18, Z+4	; 0x04
     634:	35 81       	ldd	r19, Z+5	; 0x05
     636:	12 96       	adiw	r26, 0x02	; 2
     638:	4d 91       	ld	r20, X+
     63a:	5d 91       	ld	r21, X+
     63c:	6d 91       	ld	r22, X+
     63e:	7c 91       	ld	r23, X
     640:	15 97       	sbiw	r26, 0x05	; 5
     642:	40 17       	cp	r20, r16
     644:	51 07       	cpc	r21, r17
     646:	62 07       	cpc	r22, r18
     648:	73 07       	cpc	r23, r19
     64a:	5c f7       	brge	.-42     	; 0x622 <enqueueByBaseline+0x18>
     64c:	11 96       	adiw	r26, 0x01	; 1
     64e:	fc 93       	st	X, r31
     650:	ee 93       	st	-X, r30
     652:	20 97       	sbiw	r28, 0x00	; 0
     654:	21 f4       	brne	.+8      	; 0x65e <enqueueByBaseline+0x54>
     656:	fc 01       	movw	r30, r24
     658:	b1 83       	std	Z+1, r27	; 0x01
     65a:	a0 83       	st	Z, r26
     65c:	02 c0       	rjmp	.+4      	; 0x662 <enqueueByBaseline+0x58>
     65e:	b9 83       	std	Y+1, r27	; 0x01
     660:	a8 83       	st	Y, r26
     662:	df 91       	pop	r29
     664:	cf 91       	pop	r28
     666:	1f 91       	pop	r17
     668:	0f 91       	pop	r16
     66a:	08 95       	ret

0000066c <dequeue>:
     66c:	dc 01       	movw	r26, r24
     66e:	ed 91       	ld	r30, X+
     670:	fc 91       	ld	r31, X
     672:	11 97       	sbiw	r26, 0x01	; 1
     674:	30 97       	sbiw	r30, 0x00	; 0
     676:	59 f4       	brne	.+22     	; 0x68e <dequeue+0x22>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
     67e:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
     682:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
     686:	81 e0       	ldi	r24, 0x01	; 1
     688:	83 bf       	out	0x33, r24	; 51
     68a:	88 95       	sleep
     68c:	fc cf       	rjmp	.-8      	; 0x686 <dequeue+0x1a>
     68e:	20 81       	ld	r18, Z
     690:	31 81       	ldd	r19, Z+1	; 0x01
     692:	2d 93       	st	X+, r18
     694:	3c 93       	st	X, r19
     696:	cf 01       	movw	r24, r30
     698:	08 95       	ret

0000069a <insert>:
     69a:	fb 01       	movw	r30, r22
     69c:	20 81       	ld	r18, Z
     69e:	31 81       	ldd	r19, Z+1	; 0x01
     6a0:	fc 01       	movw	r30, r24
     6a2:	31 83       	std	Z+1, r19	; 0x01
     6a4:	20 83       	st	Z, r18
     6a6:	fb 01       	movw	r30, r22
     6a8:	91 83       	std	Z+1, r25	; 0x01
     6aa:	80 83       	st	Z, r24
     6ac:	08 95       	ret

000006ae <push>:
     6ae:	fb 01       	movw	r30, r22
     6b0:	20 81       	ld	r18, Z
     6b2:	31 81       	ldd	r19, Z+1	; 0x01
     6b4:	fc 01       	movw	r30, r24
     6b6:	31 83       	std	Z+1, r19	; 0x01
     6b8:	20 83       	st	Z, r18
     6ba:	fb 01       	movw	r30, r22
     6bc:	91 83       	std	Z+1, r25	; 0x01
     6be:	80 83       	st	Z, r24
     6c0:	08 95       	ret

000006c2 <pop>:
     6c2:	dc 01       	movw	r26, r24
     6c4:	ed 91       	ld	r30, X+
     6c6:	fc 91       	ld	r31, X
     6c8:	11 97       	sbiw	r26, 0x01	; 1
     6ca:	20 81       	ld	r18, Z
     6cc:	31 81       	ldd	r19, Z+1	; 0x01
     6ce:	2d 93       	st	X+, r18
     6d0:	3c 93       	st	X, r19
     6d2:	cf 01       	movw	r24, r30
     6d4:	08 95       	ret

000006d6 <schedule>:
     6d6:	cf 93       	push	r28
     6d8:	df 93       	push	r29
     6da:	e0 91 04 01 	lds	r30, 0x0104	; 0x800104 <activeStack>
     6de:	f0 91 05 01 	lds	r31, 0x0105	; 0x800105 <activeStack+0x1>
     6e2:	c2 81       	ldd	r28, Z+2	; 0x02
     6e4:	d3 81       	ldd	r29, Z+3	; 0x03
     6e6:	e0 91 16 01 	lds	r30, 0x0116	; 0x800116 <msgQ>
     6ea:	f0 91 17 01 	lds	r31, 0x0117	; 0x800117 <msgQ+0x1>
     6ee:	30 97       	sbiw	r30, 0x00	; 0
     6f0:	19 f1       	breq	.+70     	; 0x738 <schedule+0x62>
     6f2:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <threadPool>
     6f6:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <threadPool+0x1>
     6fa:	89 2b       	or	r24, r25
     6fc:	e9 f0       	breq	.+58     	; 0x738 <schedule+0x62>
     6fe:	20 97       	sbiw	r28, 0x00	; 0
     700:	69 f0       	breq	.+26     	; 0x71c <schedule+0x46>
     702:	86 81       	ldd	r24, Z+6	; 0x06
     704:	97 81       	ldd	r25, Z+7	; 0x07
     706:	a0 85       	ldd	r26, Z+8	; 0x08
     708:	b1 85       	ldd	r27, Z+9	; 0x09
     70a:	4e 81       	ldd	r20, Y+6	; 0x06
     70c:	5f 81       	ldd	r21, Y+7	; 0x07
     70e:	68 85       	ldd	r22, Y+8	; 0x08
     710:	79 85       	ldd	r23, Y+9	; 0x09
     712:	84 1b       	sub	r24, r20
     714:	95 0b       	sbc	r25, r21
     716:	a6 0b       	sbc	r26, r22
     718:	b7 0b       	sbc	r27, r23
     71a:	72 f4       	brpl	.+28     	; 0x738 <schedule+0x62>
     71c:	86 e0       	ldi	r24, 0x06	; 6
     71e:	91 e0       	ldi	r25, 0x01	; 1
     720:	0e 94 61 03 	call	0x6c2	; 0x6c2 <pop>
     724:	64 e0       	ldi	r22, 0x04	; 4
     726:	71 e0       	ldi	r23, 0x01	; 1
     728:	0e 94 57 03 	call	0x6ae	; 0x6ae <push>
     72c:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <activeStack>
     730:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <activeStack+0x1>
     734:	0e 94 b4 02 	call	0x568	; 0x568 <dispatch>
     738:	df 91       	pop	r29
     73a:	cf 91       	pop	r28
     73c:	08 95       	ret

0000073e <__vector_1>:
     73e:	1f 92       	push	r1
     740:	0f 92       	push	r0
     742:	0f b6       	in	r0, 0x3f	; 63
     744:	0f 92       	push	r0
     746:	11 24       	eor	r1, r1
     748:	0f 93       	push	r16
     74a:	1f 93       	push	r17
     74c:	2f 93       	push	r18
     74e:	3f 93       	push	r19
     750:	4f 93       	push	r20
     752:	5f 93       	push	r21
     754:	6f 93       	push	r22
     756:	7f 93       	push	r23
     758:	8f 93       	push	r24
     75a:	9f 93       	push	r25
     75c:	af 93       	push	r26
     75e:	bf 93       	push	r27
     760:	ef 93       	push	r30
     762:	ff 93       	push	r31
     764:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <overflows>
     768:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <overflows+0x1>
     76c:	ac 01       	movw	r20, r24
     76e:	09 2e       	mov	r0, r25
     770:	00 0c       	add	r0, r0
     772:	66 0b       	sbc	r22, r22
     774:	77 0b       	sbc	r23, r23
     776:	9a 01       	movw	r18, r20
     778:	11 27       	eor	r17, r17
     77a:	00 27       	eor	r16, r16
     77c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     780:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     784:	60 e0       	ldi	r22, 0x00	; 0
     786:	70 e0       	ldi	r23, 0x00	; 0
     788:	40 2b       	or	r20, r16
     78a:	51 2b       	or	r21, r17
     78c:	62 2b       	or	r22, r18
     78e:	73 2b       	or	r23, r19
     790:	40 93 10 01 	sts	0x0110, r20	; 0x800110 <timestamp>
     794:	50 93 11 01 	sts	0x0111, r21	; 0x800111 <timestamp+0x1>
     798:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <timestamp+0x2>
     79c:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <timestamp+0x3>
     7a0:	b0 9b       	sbis	0x16, 0	; 22
     7a2:	1a c0       	rjmp	.+52     	; 0x7d8 <__vector_1+0x9a>
     7a4:	01 96       	adiw	r24, 0x01	; 1
     7a6:	09 2e       	mov	r0, r25
     7a8:	00 0c       	add	r0, r0
     7aa:	aa 0b       	sbc	r26, r26
     7ac:	bb 0b       	sbc	r27, r27
     7ae:	bc 01       	movw	r22, r24
     7b0:	55 27       	eor	r21, r21
     7b2:	44 27       	eor	r20, r20
     7b4:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     7b8:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     7bc:	a0 e0       	ldi	r26, 0x00	; 0
     7be:	b0 e0       	ldi	r27, 0x00	; 0
     7c0:	84 2b       	or	r24, r20
     7c2:	95 2b       	or	r25, r21
     7c4:	a6 2b       	or	r26, r22
     7c6:	b7 2b       	or	r27, r23
     7c8:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
     7cc:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
     7d0:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
     7d4:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
     7d8:	e0 91 b2 01 	lds	r30, 0x01B2	; 0x8001b2 <mtable>
     7dc:	f0 91 b3 01 	lds	r31, 0x01B3	; 0x8001b3 <mtable+0x1>
     7e0:	30 97       	sbiw	r30, 0x00	; 0
     7e2:	39 f0       	breq	.+14     	; 0x7f2 <__vector_1+0xb4>
     7e4:	60 e0       	ldi	r22, 0x00	; 0
     7e6:	70 e0       	ldi	r23, 0x00	; 0
     7e8:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <otable>
     7ec:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <otable+0x1>
     7f0:	09 95       	icall
     7f2:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <schedule>
     7f6:	ff 91       	pop	r31
     7f8:	ef 91       	pop	r30
     7fa:	bf 91       	pop	r27
     7fc:	af 91       	pop	r26
     7fe:	9f 91       	pop	r25
     800:	8f 91       	pop	r24
     802:	7f 91       	pop	r23
     804:	6f 91       	pop	r22
     806:	5f 91       	pop	r21
     808:	4f 91       	pop	r20
     80a:	3f 91       	pop	r19
     80c:	2f 91       	pop	r18
     80e:	1f 91       	pop	r17
     810:	0f 91       	pop	r16
     812:	0f 90       	pop	r0
     814:	0f be       	out	0x3f, r0	; 63
     816:	0f 90       	pop	r0
     818:	1f 90       	pop	r1
     81a:	18 95       	reti

0000081c <__vector_2>:
     81c:	1f 92       	push	r1
     81e:	0f 92       	push	r0
     820:	0f b6       	in	r0, 0x3f	; 63
     822:	0f 92       	push	r0
     824:	11 24       	eor	r1, r1
     826:	0f 93       	push	r16
     828:	1f 93       	push	r17
     82a:	2f 93       	push	r18
     82c:	3f 93       	push	r19
     82e:	4f 93       	push	r20
     830:	5f 93       	push	r21
     832:	6f 93       	push	r22
     834:	7f 93       	push	r23
     836:	8f 93       	push	r24
     838:	9f 93       	push	r25
     83a:	af 93       	push	r26
     83c:	bf 93       	push	r27
     83e:	ef 93       	push	r30
     840:	ff 93       	push	r31
     842:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <overflows>
     846:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <overflows+0x1>
     84a:	ac 01       	movw	r20, r24
     84c:	09 2e       	mov	r0, r25
     84e:	00 0c       	add	r0, r0
     850:	66 0b       	sbc	r22, r22
     852:	77 0b       	sbc	r23, r23
     854:	9a 01       	movw	r18, r20
     856:	11 27       	eor	r17, r17
     858:	00 27       	eor	r16, r16
     85a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     85e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     862:	60 e0       	ldi	r22, 0x00	; 0
     864:	70 e0       	ldi	r23, 0x00	; 0
     866:	40 2b       	or	r20, r16
     868:	51 2b       	or	r21, r17
     86a:	62 2b       	or	r22, r18
     86c:	73 2b       	or	r23, r19
     86e:	40 93 10 01 	sts	0x0110, r20	; 0x800110 <timestamp>
     872:	50 93 11 01 	sts	0x0111, r21	; 0x800111 <timestamp+0x1>
     876:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <timestamp+0x2>
     87a:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <timestamp+0x3>
     87e:	b0 9b       	sbis	0x16, 0	; 22
     880:	1a c0       	rjmp	.+52     	; 0x8b6 <__vector_2+0x9a>
     882:	01 96       	adiw	r24, 0x01	; 1
     884:	09 2e       	mov	r0, r25
     886:	00 0c       	add	r0, r0
     888:	aa 0b       	sbc	r26, r26
     88a:	bb 0b       	sbc	r27, r27
     88c:	bc 01       	movw	r22, r24
     88e:	55 27       	eor	r21, r21
     890:	44 27       	eor	r20, r20
     892:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     896:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     89a:	a0 e0       	ldi	r26, 0x00	; 0
     89c:	b0 e0       	ldi	r27, 0x00	; 0
     89e:	84 2b       	or	r24, r20
     8a0:	95 2b       	or	r25, r21
     8a2:	a6 2b       	or	r26, r22
     8a4:	b7 2b       	or	r27, r23
     8a6:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
     8aa:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
     8ae:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
     8b2:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
     8b6:	e0 91 b4 01 	lds	r30, 0x01B4	; 0x8001b4 <mtable+0x2>
     8ba:	f0 91 b5 01 	lds	r31, 0x01B5	; 0x8001b5 <mtable+0x3>
     8be:	30 97       	sbiw	r30, 0x00	; 0
     8c0:	39 f0       	breq	.+14     	; 0x8d0 <__vector_2+0xb4>
     8c2:	61 e0       	ldi	r22, 0x01	; 1
     8c4:	70 e0       	ldi	r23, 0x00	; 0
     8c6:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <otable+0x2>
     8ca:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <otable+0x3>
     8ce:	09 95       	icall
     8d0:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <schedule>
     8d4:	ff 91       	pop	r31
     8d6:	ef 91       	pop	r30
     8d8:	bf 91       	pop	r27
     8da:	af 91       	pop	r26
     8dc:	9f 91       	pop	r25
     8de:	8f 91       	pop	r24
     8e0:	7f 91       	pop	r23
     8e2:	6f 91       	pop	r22
     8e4:	5f 91       	pop	r21
     8e6:	4f 91       	pop	r20
     8e8:	3f 91       	pop	r19
     8ea:	2f 91       	pop	r18
     8ec:	1f 91       	pop	r17
     8ee:	0f 91       	pop	r16
     8f0:	0f 90       	pop	r0
     8f2:	0f be       	out	0x3f, r0	; 63
     8f4:	0f 90       	pop	r0
     8f6:	1f 90       	pop	r1
     8f8:	18 95       	reti

000008fa <__vector_3>:
     8fa:	1f 92       	push	r1
     8fc:	0f 92       	push	r0
     8fe:	0f b6       	in	r0, 0x3f	; 63
     900:	0f 92       	push	r0
     902:	11 24       	eor	r1, r1
     904:	0f 93       	push	r16
     906:	1f 93       	push	r17
     908:	2f 93       	push	r18
     90a:	3f 93       	push	r19
     90c:	4f 93       	push	r20
     90e:	5f 93       	push	r21
     910:	6f 93       	push	r22
     912:	7f 93       	push	r23
     914:	8f 93       	push	r24
     916:	9f 93       	push	r25
     918:	af 93       	push	r26
     91a:	bf 93       	push	r27
     91c:	ef 93       	push	r30
     91e:	ff 93       	push	r31
     920:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <overflows>
     924:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <overflows+0x1>
     928:	ac 01       	movw	r20, r24
     92a:	09 2e       	mov	r0, r25
     92c:	00 0c       	add	r0, r0
     92e:	66 0b       	sbc	r22, r22
     930:	77 0b       	sbc	r23, r23
     932:	9a 01       	movw	r18, r20
     934:	11 27       	eor	r17, r17
     936:	00 27       	eor	r16, r16
     938:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     93c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     940:	60 e0       	ldi	r22, 0x00	; 0
     942:	70 e0       	ldi	r23, 0x00	; 0
     944:	40 2b       	or	r20, r16
     946:	51 2b       	or	r21, r17
     948:	62 2b       	or	r22, r18
     94a:	73 2b       	or	r23, r19
     94c:	40 93 10 01 	sts	0x0110, r20	; 0x800110 <timestamp>
     950:	50 93 11 01 	sts	0x0111, r21	; 0x800111 <timestamp+0x1>
     954:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <timestamp+0x2>
     958:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <timestamp+0x3>
     95c:	b0 9b       	sbis	0x16, 0	; 22
     95e:	1a c0       	rjmp	.+52     	; 0x994 <__vector_3+0x9a>
     960:	01 96       	adiw	r24, 0x01	; 1
     962:	09 2e       	mov	r0, r25
     964:	00 0c       	add	r0, r0
     966:	aa 0b       	sbc	r26, r26
     968:	bb 0b       	sbc	r27, r27
     96a:	bc 01       	movw	r22, r24
     96c:	55 27       	eor	r21, r21
     96e:	44 27       	eor	r20, r20
     970:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     974:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     978:	a0 e0       	ldi	r26, 0x00	; 0
     97a:	b0 e0       	ldi	r27, 0x00	; 0
     97c:	84 2b       	or	r24, r20
     97e:	95 2b       	or	r25, r21
     980:	a6 2b       	or	r26, r22
     982:	b7 2b       	or	r27, r23
     984:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
     988:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
     98c:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
     990:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
     994:	e0 91 b6 01 	lds	r30, 0x01B6	; 0x8001b6 <mtable+0x4>
     998:	f0 91 b7 01 	lds	r31, 0x01B7	; 0x8001b7 <mtable+0x5>
     99c:	30 97       	sbiw	r30, 0x00	; 0
     99e:	39 f0       	breq	.+14     	; 0x9ae <__vector_3+0xb4>
     9a0:	62 e0       	ldi	r22, 0x02	; 2
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <otable+0x4>
     9a8:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <otable+0x5>
     9ac:	09 95       	icall
     9ae:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <schedule>
     9b2:	ff 91       	pop	r31
     9b4:	ef 91       	pop	r30
     9b6:	bf 91       	pop	r27
     9b8:	af 91       	pop	r26
     9ba:	9f 91       	pop	r25
     9bc:	8f 91       	pop	r24
     9be:	7f 91       	pop	r23
     9c0:	6f 91       	pop	r22
     9c2:	5f 91       	pop	r21
     9c4:	4f 91       	pop	r20
     9c6:	3f 91       	pop	r19
     9c8:	2f 91       	pop	r18
     9ca:	1f 91       	pop	r17
     9cc:	0f 91       	pop	r16
     9ce:	0f 90       	pop	r0
     9d0:	0f be       	out	0x3f, r0	; 63
     9d2:	0f 90       	pop	r0
     9d4:	1f 90       	pop	r1
     9d6:	18 95       	reti

000009d8 <__vector_4>:
     9d8:	1f 92       	push	r1
     9da:	0f 92       	push	r0
     9dc:	0f b6       	in	r0, 0x3f	; 63
     9de:	0f 92       	push	r0
     9e0:	11 24       	eor	r1, r1
     9e2:	0f 93       	push	r16
     9e4:	1f 93       	push	r17
     9e6:	2f 93       	push	r18
     9e8:	3f 93       	push	r19
     9ea:	4f 93       	push	r20
     9ec:	5f 93       	push	r21
     9ee:	6f 93       	push	r22
     9f0:	7f 93       	push	r23
     9f2:	8f 93       	push	r24
     9f4:	9f 93       	push	r25
     9f6:	af 93       	push	r26
     9f8:	bf 93       	push	r27
     9fa:	ef 93       	push	r30
     9fc:	ff 93       	push	r31
     9fe:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <overflows>
     a02:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <overflows+0x1>
     a06:	ac 01       	movw	r20, r24
     a08:	09 2e       	mov	r0, r25
     a0a:	00 0c       	add	r0, r0
     a0c:	66 0b       	sbc	r22, r22
     a0e:	77 0b       	sbc	r23, r23
     a10:	9a 01       	movw	r18, r20
     a12:	11 27       	eor	r17, r17
     a14:	00 27       	eor	r16, r16
     a16:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     a1a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     a1e:	60 e0       	ldi	r22, 0x00	; 0
     a20:	70 e0       	ldi	r23, 0x00	; 0
     a22:	40 2b       	or	r20, r16
     a24:	51 2b       	or	r21, r17
     a26:	62 2b       	or	r22, r18
     a28:	73 2b       	or	r23, r19
     a2a:	40 93 10 01 	sts	0x0110, r20	; 0x800110 <timestamp>
     a2e:	50 93 11 01 	sts	0x0111, r21	; 0x800111 <timestamp+0x1>
     a32:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <timestamp+0x2>
     a36:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <timestamp+0x3>
     a3a:	b0 9b       	sbis	0x16, 0	; 22
     a3c:	1a c0       	rjmp	.+52     	; 0xa72 <__vector_4+0x9a>
     a3e:	01 96       	adiw	r24, 0x01	; 1
     a40:	09 2e       	mov	r0, r25
     a42:	00 0c       	add	r0, r0
     a44:	aa 0b       	sbc	r26, r26
     a46:	bb 0b       	sbc	r27, r27
     a48:	bc 01       	movw	r22, r24
     a4a:	55 27       	eor	r21, r21
     a4c:	44 27       	eor	r20, r20
     a4e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     a52:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     a56:	a0 e0       	ldi	r26, 0x00	; 0
     a58:	b0 e0       	ldi	r27, 0x00	; 0
     a5a:	84 2b       	or	r24, r20
     a5c:	95 2b       	or	r25, r21
     a5e:	a6 2b       	or	r26, r22
     a60:	b7 2b       	or	r27, r23
     a62:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
     a66:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
     a6a:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
     a6e:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
     a72:	e0 91 b8 01 	lds	r30, 0x01B8	; 0x8001b8 <mtable+0x6>
     a76:	f0 91 b9 01 	lds	r31, 0x01B9	; 0x8001b9 <mtable+0x7>
     a7a:	30 97       	sbiw	r30, 0x00	; 0
     a7c:	39 f0       	breq	.+14     	; 0xa8c <__vector_4+0xb4>
     a7e:	63 e0       	ldi	r22, 0x03	; 3
     a80:	70 e0       	ldi	r23, 0x00	; 0
     a82:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <otable+0x6>
     a86:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <otable+0x7>
     a8a:	09 95       	icall
     a8c:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <schedule>
     a90:	ff 91       	pop	r31
     a92:	ef 91       	pop	r30
     a94:	bf 91       	pop	r27
     a96:	af 91       	pop	r26
     a98:	9f 91       	pop	r25
     a9a:	8f 91       	pop	r24
     a9c:	7f 91       	pop	r23
     a9e:	6f 91       	pop	r22
     aa0:	5f 91       	pop	r21
     aa2:	4f 91       	pop	r20
     aa4:	3f 91       	pop	r19
     aa6:	2f 91       	pop	r18
     aa8:	1f 91       	pop	r17
     aaa:	0f 91       	pop	r16
     aac:	0f 90       	pop	r0
     aae:	0f be       	out	0x3f, r0	; 63
     ab0:	0f 90       	pop	r0
     ab2:	1f 90       	pop	r1
     ab4:	18 95       	reti

00000ab6 <__vector_5>:
     ab6:	1f 92       	push	r1
     ab8:	0f 92       	push	r0
     aba:	0f b6       	in	r0, 0x3f	; 63
     abc:	0f 92       	push	r0
     abe:	11 24       	eor	r1, r1
     ac0:	0f 93       	push	r16
     ac2:	1f 93       	push	r17
     ac4:	2f 93       	push	r18
     ac6:	3f 93       	push	r19
     ac8:	4f 93       	push	r20
     aca:	5f 93       	push	r21
     acc:	6f 93       	push	r22
     ace:	7f 93       	push	r23
     ad0:	8f 93       	push	r24
     ad2:	9f 93       	push	r25
     ad4:	af 93       	push	r26
     ad6:	bf 93       	push	r27
     ad8:	ef 93       	push	r30
     ada:	ff 93       	push	r31
     adc:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <overflows>
     ae0:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <overflows+0x1>
     ae4:	ac 01       	movw	r20, r24
     ae6:	09 2e       	mov	r0, r25
     ae8:	00 0c       	add	r0, r0
     aea:	66 0b       	sbc	r22, r22
     aec:	77 0b       	sbc	r23, r23
     aee:	9a 01       	movw	r18, r20
     af0:	11 27       	eor	r17, r17
     af2:	00 27       	eor	r16, r16
     af4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     af8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     afc:	60 e0       	ldi	r22, 0x00	; 0
     afe:	70 e0       	ldi	r23, 0x00	; 0
     b00:	40 2b       	or	r20, r16
     b02:	51 2b       	or	r21, r17
     b04:	62 2b       	or	r22, r18
     b06:	73 2b       	or	r23, r19
     b08:	40 93 10 01 	sts	0x0110, r20	; 0x800110 <timestamp>
     b0c:	50 93 11 01 	sts	0x0111, r21	; 0x800111 <timestamp+0x1>
     b10:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <timestamp+0x2>
     b14:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <timestamp+0x3>
     b18:	b0 9b       	sbis	0x16, 0	; 22
     b1a:	1a c0       	rjmp	.+52     	; 0xb50 <__vector_5+0x9a>
     b1c:	01 96       	adiw	r24, 0x01	; 1
     b1e:	09 2e       	mov	r0, r25
     b20:	00 0c       	add	r0, r0
     b22:	aa 0b       	sbc	r26, r26
     b24:	bb 0b       	sbc	r27, r27
     b26:	bc 01       	movw	r22, r24
     b28:	55 27       	eor	r21, r21
     b2a:	44 27       	eor	r20, r20
     b2c:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b30:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b34:	a0 e0       	ldi	r26, 0x00	; 0
     b36:	b0 e0       	ldi	r27, 0x00	; 0
     b38:	84 2b       	or	r24, r20
     b3a:	95 2b       	or	r25, r21
     b3c:	a6 2b       	or	r26, r22
     b3e:	b7 2b       	or	r27, r23
     b40:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
     b44:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
     b48:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
     b4c:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
     b50:	e0 91 ba 01 	lds	r30, 0x01BA	; 0x8001ba <mtable+0x8>
     b54:	f0 91 bb 01 	lds	r31, 0x01BB	; 0x8001bb <mtable+0x9>
     b58:	30 97       	sbiw	r30, 0x00	; 0
     b5a:	39 f0       	breq	.+14     	; 0xb6a <__vector_5+0xb4>
     b5c:	64 e0       	ldi	r22, 0x04	; 4
     b5e:	70 e0       	ldi	r23, 0x00	; 0
     b60:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <otable+0x8>
     b64:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <otable+0x9>
     b68:	09 95       	icall
     b6a:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <schedule>
     b6e:	ff 91       	pop	r31
     b70:	ef 91       	pop	r30
     b72:	bf 91       	pop	r27
     b74:	af 91       	pop	r26
     b76:	9f 91       	pop	r25
     b78:	8f 91       	pop	r24
     b7a:	7f 91       	pop	r23
     b7c:	6f 91       	pop	r22
     b7e:	5f 91       	pop	r21
     b80:	4f 91       	pop	r20
     b82:	3f 91       	pop	r19
     b84:	2f 91       	pop	r18
     b86:	1f 91       	pop	r17
     b88:	0f 91       	pop	r16
     b8a:	0f 90       	pop	r0
     b8c:	0f be       	out	0x3f, r0	; 63
     b8e:	0f 90       	pop	r0
     b90:	1f 90       	pop	r1
     b92:	18 95       	reti

00000b94 <__vector_10>:
     b94:	1f 92       	push	r1
     b96:	0f 92       	push	r0
     b98:	0f b6       	in	r0, 0x3f	; 63
     b9a:	0f 92       	push	r0
     b9c:	11 24       	eor	r1, r1
     b9e:	0f 93       	push	r16
     ba0:	1f 93       	push	r17
     ba2:	2f 93       	push	r18
     ba4:	3f 93       	push	r19
     ba6:	4f 93       	push	r20
     ba8:	5f 93       	push	r21
     baa:	6f 93       	push	r22
     bac:	7f 93       	push	r23
     bae:	8f 93       	push	r24
     bb0:	9f 93       	push	r25
     bb2:	af 93       	push	r26
     bb4:	bf 93       	push	r27
     bb6:	ef 93       	push	r30
     bb8:	ff 93       	push	r31
     bba:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <overflows>
     bbe:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <overflows+0x1>
     bc2:	ac 01       	movw	r20, r24
     bc4:	09 2e       	mov	r0, r25
     bc6:	00 0c       	add	r0, r0
     bc8:	66 0b       	sbc	r22, r22
     bca:	77 0b       	sbc	r23, r23
     bcc:	9a 01       	movw	r18, r20
     bce:	11 27       	eor	r17, r17
     bd0:	00 27       	eor	r16, r16
     bd2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     bd6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     bda:	60 e0       	ldi	r22, 0x00	; 0
     bdc:	70 e0       	ldi	r23, 0x00	; 0
     bde:	40 2b       	or	r20, r16
     be0:	51 2b       	or	r21, r17
     be2:	62 2b       	or	r22, r18
     be4:	73 2b       	or	r23, r19
     be6:	40 93 10 01 	sts	0x0110, r20	; 0x800110 <timestamp>
     bea:	50 93 11 01 	sts	0x0111, r21	; 0x800111 <timestamp+0x1>
     bee:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <timestamp+0x2>
     bf2:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <timestamp+0x3>
     bf6:	b0 9b       	sbis	0x16, 0	; 22
     bf8:	1a c0       	rjmp	.+52     	; 0xc2e <__vector_10+0x9a>
     bfa:	01 96       	adiw	r24, 0x01	; 1
     bfc:	09 2e       	mov	r0, r25
     bfe:	00 0c       	add	r0, r0
     c00:	aa 0b       	sbc	r26, r26
     c02:	bb 0b       	sbc	r27, r27
     c04:	bc 01       	movw	r22, r24
     c06:	55 27       	eor	r21, r21
     c08:	44 27       	eor	r20, r20
     c0a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c0e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c12:	a0 e0       	ldi	r26, 0x00	; 0
     c14:	b0 e0       	ldi	r27, 0x00	; 0
     c16:	84 2b       	or	r24, r20
     c18:	95 2b       	or	r25, r21
     c1a:	a6 2b       	or	r26, r22
     c1c:	b7 2b       	or	r27, r23
     c1e:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
     c22:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
     c26:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
     c2a:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
     c2e:	e0 91 bc 01 	lds	r30, 0x01BC	; 0x8001bc <mtable+0xa>
     c32:	f0 91 bd 01 	lds	r31, 0x01BD	; 0x8001bd <mtable+0xb>
     c36:	30 97       	sbiw	r30, 0x00	; 0
     c38:	39 f0       	breq	.+14     	; 0xc48 <__vector_10+0xb4>
     c3a:	65 e0       	ldi	r22, 0x05	; 5
     c3c:	70 e0       	ldi	r23, 0x00	; 0
     c3e:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <otable+0xa>
     c42:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <otable+0xb>
     c46:	09 95       	icall
     c48:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <schedule>
     c4c:	ff 91       	pop	r31
     c4e:	ef 91       	pop	r30
     c50:	bf 91       	pop	r27
     c52:	af 91       	pop	r26
     c54:	9f 91       	pop	r25
     c56:	8f 91       	pop	r24
     c58:	7f 91       	pop	r23
     c5a:	6f 91       	pop	r22
     c5c:	5f 91       	pop	r21
     c5e:	4f 91       	pop	r20
     c60:	3f 91       	pop	r19
     c62:	2f 91       	pop	r18
     c64:	1f 91       	pop	r17
     c66:	0f 91       	pop	r16
     c68:	0f 90       	pop	r0
     c6a:	0f be       	out	0x3f, r0	; 63
     c6c:	0f 90       	pop	r0
     c6e:	1f 90       	pop	r1
     c70:	18 95       	reti

00000c72 <__vector_11>:
     c72:	1f 92       	push	r1
     c74:	0f 92       	push	r0
     c76:	0f b6       	in	r0, 0x3f	; 63
     c78:	0f 92       	push	r0
     c7a:	11 24       	eor	r1, r1
     c7c:	0f 93       	push	r16
     c7e:	1f 93       	push	r17
     c80:	2f 93       	push	r18
     c82:	3f 93       	push	r19
     c84:	4f 93       	push	r20
     c86:	5f 93       	push	r21
     c88:	6f 93       	push	r22
     c8a:	7f 93       	push	r23
     c8c:	8f 93       	push	r24
     c8e:	9f 93       	push	r25
     c90:	af 93       	push	r26
     c92:	bf 93       	push	r27
     c94:	ef 93       	push	r30
     c96:	ff 93       	push	r31
     c98:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <overflows>
     c9c:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <overflows+0x1>
     ca0:	ac 01       	movw	r20, r24
     ca2:	09 2e       	mov	r0, r25
     ca4:	00 0c       	add	r0, r0
     ca6:	66 0b       	sbc	r22, r22
     ca8:	77 0b       	sbc	r23, r23
     caa:	9a 01       	movw	r18, r20
     cac:	11 27       	eor	r17, r17
     cae:	00 27       	eor	r16, r16
     cb0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     cb4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     cb8:	60 e0       	ldi	r22, 0x00	; 0
     cba:	70 e0       	ldi	r23, 0x00	; 0
     cbc:	40 2b       	or	r20, r16
     cbe:	51 2b       	or	r21, r17
     cc0:	62 2b       	or	r22, r18
     cc2:	73 2b       	or	r23, r19
     cc4:	40 93 10 01 	sts	0x0110, r20	; 0x800110 <timestamp>
     cc8:	50 93 11 01 	sts	0x0111, r21	; 0x800111 <timestamp+0x1>
     ccc:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <timestamp+0x2>
     cd0:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <timestamp+0x3>
     cd4:	b0 9b       	sbis	0x16, 0	; 22
     cd6:	1a c0       	rjmp	.+52     	; 0xd0c <__vector_11+0x9a>
     cd8:	01 96       	adiw	r24, 0x01	; 1
     cda:	09 2e       	mov	r0, r25
     cdc:	00 0c       	add	r0, r0
     cde:	aa 0b       	sbc	r26, r26
     ce0:	bb 0b       	sbc	r27, r27
     ce2:	bc 01       	movw	r22, r24
     ce4:	55 27       	eor	r21, r21
     ce6:	44 27       	eor	r20, r20
     ce8:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     cec:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     cf0:	a0 e0       	ldi	r26, 0x00	; 0
     cf2:	b0 e0       	ldi	r27, 0x00	; 0
     cf4:	84 2b       	or	r24, r20
     cf6:	95 2b       	or	r25, r21
     cf8:	a6 2b       	or	r26, r22
     cfa:	b7 2b       	or	r27, r23
     cfc:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
     d00:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
     d04:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
     d08:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
     d0c:	e0 91 be 01 	lds	r30, 0x01BE	; 0x8001be <mtable+0xc>
     d10:	f0 91 bf 01 	lds	r31, 0x01BF	; 0x8001bf <mtable+0xd>
     d14:	30 97       	sbiw	r30, 0x00	; 0
     d16:	39 f0       	breq	.+14     	; 0xd26 <__vector_11+0xb4>
     d18:	66 e0       	ldi	r22, 0x06	; 6
     d1a:	70 e0       	ldi	r23, 0x00	; 0
     d1c:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <otable+0xc>
     d20:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <otable+0xd>
     d24:	09 95       	icall
     d26:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <schedule>
     d2a:	ff 91       	pop	r31
     d2c:	ef 91       	pop	r30
     d2e:	bf 91       	pop	r27
     d30:	af 91       	pop	r26
     d32:	9f 91       	pop	r25
     d34:	8f 91       	pop	r24
     d36:	7f 91       	pop	r23
     d38:	6f 91       	pop	r22
     d3a:	5f 91       	pop	r21
     d3c:	4f 91       	pop	r20
     d3e:	3f 91       	pop	r19
     d40:	2f 91       	pop	r18
     d42:	1f 91       	pop	r17
     d44:	0f 91       	pop	r16
     d46:	0f 90       	pop	r0
     d48:	0f be       	out	0x3f, r0	; 63
     d4a:	0f 90       	pop	r0
     d4c:	1f 90       	pop	r1
     d4e:	18 95       	reti

00000d50 <__vector_12>:
     d50:	1f 92       	push	r1
     d52:	0f 92       	push	r0
     d54:	0f b6       	in	r0, 0x3f	; 63
     d56:	0f 92       	push	r0
     d58:	11 24       	eor	r1, r1
     d5a:	0f 93       	push	r16
     d5c:	1f 93       	push	r17
     d5e:	2f 93       	push	r18
     d60:	3f 93       	push	r19
     d62:	4f 93       	push	r20
     d64:	5f 93       	push	r21
     d66:	6f 93       	push	r22
     d68:	7f 93       	push	r23
     d6a:	8f 93       	push	r24
     d6c:	9f 93       	push	r25
     d6e:	af 93       	push	r26
     d70:	bf 93       	push	r27
     d72:	ef 93       	push	r30
     d74:	ff 93       	push	r31
     d76:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <overflows>
     d7a:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <overflows+0x1>
     d7e:	ac 01       	movw	r20, r24
     d80:	09 2e       	mov	r0, r25
     d82:	00 0c       	add	r0, r0
     d84:	66 0b       	sbc	r22, r22
     d86:	77 0b       	sbc	r23, r23
     d88:	9a 01       	movw	r18, r20
     d8a:	11 27       	eor	r17, r17
     d8c:	00 27       	eor	r16, r16
     d8e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d92:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d96:	60 e0       	ldi	r22, 0x00	; 0
     d98:	70 e0       	ldi	r23, 0x00	; 0
     d9a:	40 2b       	or	r20, r16
     d9c:	51 2b       	or	r21, r17
     d9e:	62 2b       	or	r22, r18
     da0:	73 2b       	or	r23, r19
     da2:	40 93 10 01 	sts	0x0110, r20	; 0x800110 <timestamp>
     da6:	50 93 11 01 	sts	0x0111, r21	; 0x800111 <timestamp+0x1>
     daa:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <timestamp+0x2>
     dae:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <timestamp+0x3>
     db2:	b0 9b       	sbis	0x16, 0	; 22
     db4:	1a c0       	rjmp	.+52     	; 0xdea <__vector_12+0x9a>
     db6:	01 96       	adiw	r24, 0x01	; 1
     db8:	09 2e       	mov	r0, r25
     dba:	00 0c       	add	r0, r0
     dbc:	aa 0b       	sbc	r26, r26
     dbe:	bb 0b       	sbc	r27, r27
     dc0:	bc 01       	movw	r22, r24
     dc2:	55 27       	eor	r21, r21
     dc4:	44 27       	eor	r20, r20
     dc6:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     dca:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     dce:	a0 e0       	ldi	r26, 0x00	; 0
     dd0:	b0 e0       	ldi	r27, 0x00	; 0
     dd2:	84 2b       	or	r24, r20
     dd4:	95 2b       	or	r25, r21
     dd6:	a6 2b       	or	r26, r22
     dd8:	b7 2b       	or	r27, r23
     dda:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
     dde:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
     de2:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
     de6:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
     dea:	e0 91 c0 01 	lds	r30, 0x01C0	; 0x8001c0 <mtable+0xe>
     dee:	f0 91 c1 01 	lds	r31, 0x01C1	; 0x8001c1 <mtable+0xf>
     df2:	30 97       	sbiw	r30, 0x00	; 0
     df4:	39 f0       	breq	.+14     	; 0xe04 <__vector_12+0xb4>
     df6:	67 e0       	ldi	r22, 0x07	; 7
     df8:	70 e0       	ldi	r23, 0x00	; 0
     dfa:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <otable+0xe>
     dfe:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <otable+0xf>
     e02:	09 95       	icall
     e04:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <schedule>
     e08:	ff 91       	pop	r31
     e0a:	ef 91       	pop	r30
     e0c:	bf 91       	pop	r27
     e0e:	af 91       	pop	r26
     e10:	9f 91       	pop	r25
     e12:	8f 91       	pop	r24
     e14:	7f 91       	pop	r23
     e16:	6f 91       	pop	r22
     e18:	5f 91       	pop	r21
     e1a:	4f 91       	pop	r20
     e1c:	3f 91       	pop	r19
     e1e:	2f 91       	pop	r18
     e20:	1f 91       	pop	r17
     e22:	0f 91       	pop	r16
     e24:	0f 90       	pop	r0
     e26:	0f be       	out	0x3f, r0	; 63
     e28:	0f 90       	pop	r0
     e2a:	1f 90       	pop	r1
     e2c:	18 95       	reti

00000e2e <__vector_13>:
     e2e:	1f 92       	push	r1
     e30:	0f 92       	push	r0
     e32:	0f b6       	in	r0, 0x3f	; 63
     e34:	0f 92       	push	r0
     e36:	11 24       	eor	r1, r1
     e38:	0f 93       	push	r16
     e3a:	1f 93       	push	r17
     e3c:	2f 93       	push	r18
     e3e:	3f 93       	push	r19
     e40:	4f 93       	push	r20
     e42:	5f 93       	push	r21
     e44:	6f 93       	push	r22
     e46:	7f 93       	push	r23
     e48:	8f 93       	push	r24
     e4a:	9f 93       	push	r25
     e4c:	af 93       	push	r26
     e4e:	bf 93       	push	r27
     e50:	ef 93       	push	r30
     e52:	ff 93       	push	r31
     e54:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <overflows>
     e58:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <overflows+0x1>
     e5c:	ac 01       	movw	r20, r24
     e5e:	09 2e       	mov	r0, r25
     e60:	00 0c       	add	r0, r0
     e62:	66 0b       	sbc	r22, r22
     e64:	77 0b       	sbc	r23, r23
     e66:	9a 01       	movw	r18, r20
     e68:	11 27       	eor	r17, r17
     e6a:	00 27       	eor	r16, r16
     e6c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e70:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e74:	60 e0       	ldi	r22, 0x00	; 0
     e76:	70 e0       	ldi	r23, 0x00	; 0
     e78:	40 2b       	or	r20, r16
     e7a:	51 2b       	or	r21, r17
     e7c:	62 2b       	or	r22, r18
     e7e:	73 2b       	or	r23, r19
     e80:	40 93 10 01 	sts	0x0110, r20	; 0x800110 <timestamp>
     e84:	50 93 11 01 	sts	0x0111, r21	; 0x800111 <timestamp+0x1>
     e88:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <timestamp+0x2>
     e8c:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <timestamp+0x3>
     e90:	b0 9b       	sbis	0x16, 0	; 22
     e92:	1a c0       	rjmp	.+52     	; 0xec8 <__vector_13+0x9a>
     e94:	01 96       	adiw	r24, 0x01	; 1
     e96:	09 2e       	mov	r0, r25
     e98:	00 0c       	add	r0, r0
     e9a:	aa 0b       	sbc	r26, r26
     e9c:	bb 0b       	sbc	r27, r27
     e9e:	bc 01       	movw	r22, r24
     ea0:	55 27       	eor	r21, r21
     ea2:	44 27       	eor	r20, r20
     ea4:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ea8:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     eac:	a0 e0       	ldi	r26, 0x00	; 0
     eae:	b0 e0       	ldi	r27, 0x00	; 0
     eb0:	84 2b       	or	r24, r20
     eb2:	95 2b       	or	r25, r21
     eb4:	a6 2b       	or	r26, r22
     eb6:	b7 2b       	or	r27, r23
     eb8:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
     ebc:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
     ec0:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
     ec4:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
     ec8:	e0 91 c2 01 	lds	r30, 0x01C2	; 0x8001c2 <mtable+0x10>
     ecc:	f0 91 c3 01 	lds	r31, 0x01C3	; 0x8001c3 <mtable+0x11>
     ed0:	30 97       	sbiw	r30, 0x00	; 0
     ed2:	39 f0       	breq	.+14     	; 0xee2 <__vector_13+0xb4>
     ed4:	68 e0       	ldi	r22, 0x08	; 8
     ed6:	70 e0       	ldi	r23, 0x00	; 0
     ed8:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <otable+0x10>
     edc:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <otable+0x11>
     ee0:	09 95       	icall
     ee2:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <schedule>
     ee6:	ff 91       	pop	r31
     ee8:	ef 91       	pop	r30
     eea:	bf 91       	pop	r27
     eec:	af 91       	pop	r26
     eee:	9f 91       	pop	r25
     ef0:	8f 91       	pop	r24
     ef2:	7f 91       	pop	r23
     ef4:	6f 91       	pop	r22
     ef6:	5f 91       	pop	r21
     ef8:	4f 91       	pop	r20
     efa:	3f 91       	pop	r19
     efc:	2f 91       	pop	r18
     efe:	1f 91       	pop	r17
     f00:	0f 91       	pop	r16
     f02:	0f 90       	pop	r0
     f04:	0f be       	out	0x3f, r0	; 63
     f06:	0f 90       	pop	r0
     f08:	1f 90       	pop	r1
     f0a:	18 95       	reti

00000f0c <__vector_14>:
     f0c:	1f 92       	push	r1
     f0e:	0f 92       	push	r0
     f10:	0f b6       	in	r0, 0x3f	; 63
     f12:	0f 92       	push	r0
     f14:	11 24       	eor	r1, r1
     f16:	0f 93       	push	r16
     f18:	1f 93       	push	r17
     f1a:	2f 93       	push	r18
     f1c:	3f 93       	push	r19
     f1e:	4f 93       	push	r20
     f20:	5f 93       	push	r21
     f22:	6f 93       	push	r22
     f24:	7f 93       	push	r23
     f26:	8f 93       	push	r24
     f28:	9f 93       	push	r25
     f2a:	af 93       	push	r26
     f2c:	bf 93       	push	r27
     f2e:	ef 93       	push	r30
     f30:	ff 93       	push	r31
     f32:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <overflows>
     f36:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <overflows+0x1>
     f3a:	ac 01       	movw	r20, r24
     f3c:	09 2e       	mov	r0, r25
     f3e:	00 0c       	add	r0, r0
     f40:	66 0b       	sbc	r22, r22
     f42:	77 0b       	sbc	r23, r23
     f44:	9a 01       	movw	r18, r20
     f46:	11 27       	eor	r17, r17
     f48:	00 27       	eor	r16, r16
     f4a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f4e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f52:	60 e0       	ldi	r22, 0x00	; 0
     f54:	70 e0       	ldi	r23, 0x00	; 0
     f56:	40 2b       	or	r20, r16
     f58:	51 2b       	or	r21, r17
     f5a:	62 2b       	or	r22, r18
     f5c:	73 2b       	or	r23, r19
     f5e:	40 93 10 01 	sts	0x0110, r20	; 0x800110 <timestamp>
     f62:	50 93 11 01 	sts	0x0111, r21	; 0x800111 <timestamp+0x1>
     f66:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <timestamp+0x2>
     f6a:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <timestamp+0x3>
     f6e:	b0 9b       	sbis	0x16, 0	; 22
     f70:	1a c0       	rjmp	.+52     	; 0xfa6 <__vector_14+0x9a>
     f72:	01 96       	adiw	r24, 0x01	; 1
     f74:	09 2e       	mov	r0, r25
     f76:	00 0c       	add	r0, r0
     f78:	aa 0b       	sbc	r26, r26
     f7a:	bb 0b       	sbc	r27, r27
     f7c:	bc 01       	movw	r22, r24
     f7e:	55 27       	eor	r21, r21
     f80:	44 27       	eor	r20, r20
     f82:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f86:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f8a:	a0 e0       	ldi	r26, 0x00	; 0
     f8c:	b0 e0       	ldi	r27, 0x00	; 0
     f8e:	84 2b       	or	r24, r20
     f90:	95 2b       	or	r25, r21
     f92:	a6 2b       	or	r26, r22
     f94:	b7 2b       	or	r27, r23
     f96:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
     f9a:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
     f9e:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
     fa2:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
     fa6:	e0 91 c4 01 	lds	r30, 0x01C4	; 0x8001c4 <mtable+0x12>
     faa:	f0 91 c5 01 	lds	r31, 0x01C5	; 0x8001c5 <mtable+0x13>
     fae:	30 97       	sbiw	r30, 0x00	; 0
     fb0:	39 f0       	breq	.+14     	; 0xfc0 <__vector_14+0xb4>
     fb2:	69 e0       	ldi	r22, 0x09	; 9
     fb4:	70 e0       	ldi	r23, 0x00	; 0
     fb6:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <otable+0x12>
     fba:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <otable+0x13>
     fbe:	09 95       	icall
     fc0:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <schedule>
     fc4:	ff 91       	pop	r31
     fc6:	ef 91       	pop	r30
     fc8:	bf 91       	pop	r27
     fca:	af 91       	pop	r26
     fcc:	9f 91       	pop	r25
     fce:	8f 91       	pop	r24
     fd0:	7f 91       	pop	r23
     fd2:	6f 91       	pop	r22
     fd4:	5f 91       	pop	r21
     fd6:	4f 91       	pop	r20
     fd8:	3f 91       	pop	r19
     fda:	2f 91       	pop	r18
     fdc:	1f 91       	pop	r17
     fde:	0f 91       	pop	r16
     fe0:	0f 90       	pop	r0
     fe2:	0f be       	out	0x3f, r0	; 63
     fe4:	0f 90       	pop	r0
     fe6:	1f 90       	pop	r1
     fe8:	18 95       	reti

00000fea <__vector_15>:
     fea:	1f 92       	push	r1
     fec:	0f 92       	push	r0
     fee:	0f b6       	in	r0, 0x3f	; 63
     ff0:	0f 92       	push	r0
     ff2:	11 24       	eor	r1, r1
     ff4:	0f 93       	push	r16
     ff6:	1f 93       	push	r17
     ff8:	2f 93       	push	r18
     ffa:	3f 93       	push	r19
     ffc:	4f 93       	push	r20
     ffe:	5f 93       	push	r21
    1000:	6f 93       	push	r22
    1002:	7f 93       	push	r23
    1004:	8f 93       	push	r24
    1006:	9f 93       	push	r25
    1008:	af 93       	push	r26
    100a:	bf 93       	push	r27
    100c:	ef 93       	push	r30
    100e:	ff 93       	push	r31
    1010:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <overflows>
    1014:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <overflows+0x1>
    1018:	ac 01       	movw	r20, r24
    101a:	09 2e       	mov	r0, r25
    101c:	00 0c       	add	r0, r0
    101e:	66 0b       	sbc	r22, r22
    1020:	77 0b       	sbc	r23, r23
    1022:	9a 01       	movw	r18, r20
    1024:	11 27       	eor	r17, r17
    1026:	00 27       	eor	r16, r16
    1028:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    102c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1030:	60 e0       	ldi	r22, 0x00	; 0
    1032:	70 e0       	ldi	r23, 0x00	; 0
    1034:	40 2b       	or	r20, r16
    1036:	51 2b       	or	r21, r17
    1038:	62 2b       	or	r22, r18
    103a:	73 2b       	or	r23, r19
    103c:	40 93 10 01 	sts	0x0110, r20	; 0x800110 <timestamp>
    1040:	50 93 11 01 	sts	0x0111, r21	; 0x800111 <timestamp+0x1>
    1044:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <timestamp+0x2>
    1048:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <timestamp+0x3>
    104c:	b0 9b       	sbis	0x16, 0	; 22
    104e:	1a c0       	rjmp	.+52     	; 0x1084 <__vector_15+0x9a>
    1050:	01 96       	adiw	r24, 0x01	; 1
    1052:	09 2e       	mov	r0, r25
    1054:	00 0c       	add	r0, r0
    1056:	aa 0b       	sbc	r26, r26
    1058:	bb 0b       	sbc	r27, r27
    105a:	bc 01       	movw	r22, r24
    105c:	55 27       	eor	r21, r21
    105e:	44 27       	eor	r20, r20
    1060:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1064:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1068:	a0 e0       	ldi	r26, 0x00	; 0
    106a:	b0 e0       	ldi	r27, 0x00	; 0
    106c:	84 2b       	or	r24, r20
    106e:	95 2b       	or	r25, r21
    1070:	a6 2b       	or	r26, r22
    1072:	b7 2b       	or	r27, r23
    1074:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
    1078:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
    107c:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
    1080:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
    1084:	e0 91 c6 01 	lds	r30, 0x01C6	; 0x8001c6 <mtable+0x14>
    1088:	f0 91 c7 01 	lds	r31, 0x01C7	; 0x8001c7 <mtable+0x15>
    108c:	30 97       	sbiw	r30, 0x00	; 0
    108e:	39 f0       	breq	.+14     	; 0x109e <__vector_15+0xb4>
    1090:	6a e0       	ldi	r22, 0x0A	; 10
    1092:	70 e0       	ldi	r23, 0x00	; 0
    1094:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <otable+0x14>
    1098:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <otable+0x15>
    109c:	09 95       	icall
    109e:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <schedule>
    10a2:	ff 91       	pop	r31
    10a4:	ef 91       	pop	r30
    10a6:	bf 91       	pop	r27
    10a8:	af 91       	pop	r26
    10aa:	9f 91       	pop	r25
    10ac:	8f 91       	pop	r24
    10ae:	7f 91       	pop	r23
    10b0:	6f 91       	pop	r22
    10b2:	5f 91       	pop	r21
    10b4:	4f 91       	pop	r20
    10b6:	3f 91       	pop	r19
    10b8:	2f 91       	pop	r18
    10ba:	1f 91       	pop	r17
    10bc:	0f 91       	pop	r16
    10be:	0f 90       	pop	r0
    10c0:	0f be       	out	0x3f, r0	; 63
    10c2:	0f 90       	pop	r0
    10c4:	1f 90       	pop	r1
    10c6:	18 95       	reti

000010c8 <__vector_16>:
    10c8:	1f 92       	push	r1
    10ca:	0f 92       	push	r0
    10cc:	0f b6       	in	r0, 0x3f	; 63
    10ce:	0f 92       	push	r0
    10d0:	11 24       	eor	r1, r1
    10d2:	0f 93       	push	r16
    10d4:	1f 93       	push	r17
    10d6:	2f 93       	push	r18
    10d8:	3f 93       	push	r19
    10da:	4f 93       	push	r20
    10dc:	5f 93       	push	r21
    10de:	6f 93       	push	r22
    10e0:	7f 93       	push	r23
    10e2:	8f 93       	push	r24
    10e4:	9f 93       	push	r25
    10e6:	af 93       	push	r26
    10e8:	bf 93       	push	r27
    10ea:	ef 93       	push	r30
    10ec:	ff 93       	push	r31
    10ee:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <overflows>
    10f2:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <overflows+0x1>
    10f6:	ac 01       	movw	r20, r24
    10f8:	09 2e       	mov	r0, r25
    10fa:	00 0c       	add	r0, r0
    10fc:	66 0b       	sbc	r22, r22
    10fe:	77 0b       	sbc	r23, r23
    1100:	9a 01       	movw	r18, r20
    1102:	11 27       	eor	r17, r17
    1104:	00 27       	eor	r16, r16
    1106:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    110a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    110e:	60 e0       	ldi	r22, 0x00	; 0
    1110:	70 e0       	ldi	r23, 0x00	; 0
    1112:	40 2b       	or	r20, r16
    1114:	51 2b       	or	r21, r17
    1116:	62 2b       	or	r22, r18
    1118:	73 2b       	or	r23, r19
    111a:	40 93 10 01 	sts	0x0110, r20	; 0x800110 <timestamp>
    111e:	50 93 11 01 	sts	0x0111, r21	; 0x800111 <timestamp+0x1>
    1122:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <timestamp+0x2>
    1126:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <timestamp+0x3>
    112a:	b0 9b       	sbis	0x16, 0	; 22
    112c:	1a c0       	rjmp	.+52     	; 0x1162 <__vector_16+0x9a>
    112e:	01 96       	adiw	r24, 0x01	; 1
    1130:	09 2e       	mov	r0, r25
    1132:	00 0c       	add	r0, r0
    1134:	aa 0b       	sbc	r26, r26
    1136:	bb 0b       	sbc	r27, r27
    1138:	bc 01       	movw	r22, r24
    113a:	55 27       	eor	r21, r21
    113c:	44 27       	eor	r20, r20
    113e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1142:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1146:	a0 e0       	ldi	r26, 0x00	; 0
    1148:	b0 e0       	ldi	r27, 0x00	; 0
    114a:	84 2b       	or	r24, r20
    114c:	95 2b       	or	r25, r21
    114e:	a6 2b       	or	r26, r22
    1150:	b7 2b       	or	r27, r23
    1152:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
    1156:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
    115a:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
    115e:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
    1162:	e0 91 c8 01 	lds	r30, 0x01C8	; 0x8001c8 <mtable+0x16>
    1166:	f0 91 c9 01 	lds	r31, 0x01C9	; 0x8001c9 <mtable+0x17>
    116a:	30 97       	sbiw	r30, 0x00	; 0
    116c:	39 f0       	breq	.+14     	; 0x117c <__vector_16+0xb4>
    116e:	6b e0       	ldi	r22, 0x0B	; 11
    1170:	70 e0       	ldi	r23, 0x00	; 0
    1172:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <otable+0x16>
    1176:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <otable+0x17>
    117a:	09 95       	icall
    117c:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <schedule>
    1180:	ff 91       	pop	r31
    1182:	ef 91       	pop	r30
    1184:	bf 91       	pop	r27
    1186:	af 91       	pop	r26
    1188:	9f 91       	pop	r25
    118a:	8f 91       	pop	r24
    118c:	7f 91       	pop	r23
    118e:	6f 91       	pop	r22
    1190:	5f 91       	pop	r21
    1192:	4f 91       	pop	r20
    1194:	3f 91       	pop	r19
    1196:	2f 91       	pop	r18
    1198:	1f 91       	pop	r17
    119a:	0f 91       	pop	r16
    119c:	0f 90       	pop	r0
    119e:	0f be       	out	0x3f, r0	; 63
    11a0:	0f 90       	pop	r0
    11a2:	1f 90       	pop	r1
    11a4:	18 95       	reti

000011a6 <__vector_17>:
    11a6:	1f 92       	push	r1
    11a8:	0f 92       	push	r0
    11aa:	0f b6       	in	r0, 0x3f	; 63
    11ac:	0f 92       	push	r0
    11ae:	11 24       	eor	r1, r1
    11b0:	0f 93       	push	r16
    11b2:	1f 93       	push	r17
    11b4:	2f 93       	push	r18
    11b6:	3f 93       	push	r19
    11b8:	4f 93       	push	r20
    11ba:	5f 93       	push	r21
    11bc:	6f 93       	push	r22
    11be:	7f 93       	push	r23
    11c0:	8f 93       	push	r24
    11c2:	9f 93       	push	r25
    11c4:	af 93       	push	r26
    11c6:	bf 93       	push	r27
    11c8:	ef 93       	push	r30
    11ca:	ff 93       	push	r31
    11cc:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <overflows>
    11d0:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <overflows+0x1>
    11d4:	ac 01       	movw	r20, r24
    11d6:	09 2e       	mov	r0, r25
    11d8:	00 0c       	add	r0, r0
    11da:	66 0b       	sbc	r22, r22
    11dc:	77 0b       	sbc	r23, r23
    11de:	9a 01       	movw	r18, r20
    11e0:	11 27       	eor	r17, r17
    11e2:	00 27       	eor	r16, r16
    11e4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    11e8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    11ec:	60 e0       	ldi	r22, 0x00	; 0
    11ee:	70 e0       	ldi	r23, 0x00	; 0
    11f0:	40 2b       	or	r20, r16
    11f2:	51 2b       	or	r21, r17
    11f4:	62 2b       	or	r22, r18
    11f6:	73 2b       	or	r23, r19
    11f8:	40 93 10 01 	sts	0x0110, r20	; 0x800110 <timestamp>
    11fc:	50 93 11 01 	sts	0x0111, r21	; 0x800111 <timestamp+0x1>
    1200:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <timestamp+0x2>
    1204:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <timestamp+0x3>
    1208:	b0 9b       	sbis	0x16, 0	; 22
    120a:	1a c0       	rjmp	.+52     	; 0x1240 <__vector_17+0x9a>
    120c:	01 96       	adiw	r24, 0x01	; 1
    120e:	09 2e       	mov	r0, r25
    1210:	00 0c       	add	r0, r0
    1212:	aa 0b       	sbc	r26, r26
    1214:	bb 0b       	sbc	r27, r27
    1216:	bc 01       	movw	r22, r24
    1218:	55 27       	eor	r21, r21
    121a:	44 27       	eor	r20, r20
    121c:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1220:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1224:	a0 e0       	ldi	r26, 0x00	; 0
    1226:	b0 e0       	ldi	r27, 0x00	; 0
    1228:	84 2b       	or	r24, r20
    122a:	95 2b       	or	r25, r21
    122c:	a6 2b       	or	r26, r22
    122e:	b7 2b       	or	r27, r23
    1230:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
    1234:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
    1238:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
    123c:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
    1240:	e0 91 ca 01 	lds	r30, 0x01CA	; 0x8001ca <mtable+0x18>
    1244:	f0 91 cb 01 	lds	r31, 0x01CB	; 0x8001cb <mtable+0x19>
    1248:	30 97       	sbiw	r30, 0x00	; 0
    124a:	39 f0       	breq	.+14     	; 0x125a <__vector_17+0xb4>
    124c:	6c e0       	ldi	r22, 0x0C	; 12
    124e:	70 e0       	ldi	r23, 0x00	; 0
    1250:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <otable+0x18>
    1254:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <otable+0x19>
    1258:	09 95       	icall
    125a:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <schedule>
    125e:	ff 91       	pop	r31
    1260:	ef 91       	pop	r30
    1262:	bf 91       	pop	r27
    1264:	af 91       	pop	r26
    1266:	9f 91       	pop	r25
    1268:	8f 91       	pop	r24
    126a:	7f 91       	pop	r23
    126c:	6f 91       	pop	r22
    126e:	5f 91       	pop	r21
    1270:	4f 91       	pop	r20
    1272:	3f 91       	pop	r19
    1274:	2f 91       	pop	r18
    1276:	1f 91       	pop	r17
    1278:	0f 91       	pop	r16
    127a:	0f 90       	pop	r0
    127c:	0f be       	out	0x3f, r0	; 63
    127e:	0f 90       	pop	r0
    1280:	1f 90       	pop	r1
    1282:	18 95       	reti

00001284 <__vector_18>:
    1284:	1f 92       	push	r1
    1286:	0f 92       	push	r0
    1288:	0f b6       	in	r0, 0x3f	; 63
    128a:	0f 92       	push	r0
    128c:	11 24       	eor	r1, r1
    128e:	0f 93       	push	r16
    1290:	1f 93       	push	r17
    1292:	2f 93       	push	r18
    1294:	3f 93       	push	r19
    1296:	4f 93       	push	r20
    1298:	5f 93       	push	r21
    129a:	6f 93       	push	r22
    129c:	7f 93       	push	r23
    129e:	8f 93       	push	r24
    12a0:	9f 93       	push	r25
    12a2:	af 93       	push	r26
    12a4:	bf 93       	push	r27
    12a6:	ef 93       	push	r30
    12a8:	ff 93       	push	r31
    12aa:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <overflows>
    12ae:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <overflows+0x1>
    12b2:	ac 01       	movw	r20, r24
    12b4:	09 2e       	mov	r0, r25
    12b6:	00 0c       	add	r0, r0
    12b8:	66 0b       	sbc	r22, r22
    12ba:	77 0b       	sbc	r23, r23
    12bc:	9a 01       	movw	r18, r20
    12be:	11 27       	eor	r17, r17
    12c0:	00 27       	eor	r16, r16
    12c2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    12c6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    12ca:	60 e0       	ldi	r22, 0x00	; 0
    12cc:	70 e0       	ldi	r23, 0x00	; 0
    12ce:	40 2b       	or	r20, r16
    12d0:	51 2b       	or	r21, r17
    12d2:	62 2b       	or	r22, r18
    12d4:	73 2b       	or	r23, r19
    12d6:	40 93 10 01 	sts	0x0110, r20	; 0x800110 <timestamp>
    12da:	50 93 11 01 	sts	0x0111, r21	; 0x800111 <timestamp+0x1>
    12de:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <timestamp+0x2>
    12e2:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <timestamp+0x3>
    12e6:	b0 9b       	sbis	0x16, 0	; 22
    12e8:	1a c0       	rjmp	.+52     	; 0x131e <__vector_18+0x9a>
    12ea:	01 96       	adiw	r24, 0x01	; 1
    12ec:	09 2e       	mov	r0, r25
    12ee:	00 0c       	add	r0, r0
    12f0:	aa 0b       	sbc	r26, r26
    12f2:	bb 0b       	sbc	r27, r27
    12f4:	bc 01       	movw	r22, r24
    12f6:	55 27       	eor	r21, r21
    12f8:	44 27       	eor	r20, r20
    12fa:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    12fe:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1302:	a0 e0       	ldi	r26, 0x00	; 0
    1304:	b0 e0       	ldi	r27, 0x00	; 0
    1306:	84 2b       	or	r24, r20
    1308:	95 2b       	or	r25, r21
    130a:	a6 2b       	or	r26, r22
    130c:	b7 2b       	or	r27, r23
    130e:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
    1312:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
    1316:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
    131a:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
    131e:	e0 91 cc 01 	lds	r30, 0x01CC	; 0x8001cc <mtable+0x1a>
    1322:	f0 91 cd 01 	lds	r31, 0x01CD	; 0x8001cd <mtable+0x1b>
    1326:	30 97       	sbiw	r30, 0x00	; 0
    1328:	39 f0       	breq	.+14     	; 0x1338 <__vector_18+0xb4>
    132a:	6d e0       	ldi	r22, 0x0D	; 13
    132c:	70 e0       	ldi	r23, 0x00	; 0
    132e:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <otable+0x1a>
    1332:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <otable+0x1b>
    1336:	09 95       	icall
    1338:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <schedule>
    133c:	ff 91       	pop	r31
    133e:	ef 91       	pop	r30
    1340:	bf 91       	pop	r27
    1342:	af 91       	pop	r26
    1344:	9f 91       	pop	r25
    1346:	8f 91       	pop	r24
    1348:	7f 91       	pop	r23
    134a:	6f 91       	pop	r22
    134c:	5f 91       	pop	r21
    134e:	4f 91       	pop	r20
    1350:	3f 91       	pop	r19
    1352:	2f 91       	pop	r18
    1354:	1f 91       	pop	r17
    1356:	0f 91       	pop	r16
    1358:	0f 90       	pop	r0
    135a:	0f be       	out	0x3f, r0	; 63
    135c:	0f 90       	pop	r0
    135e:	1f 90       	pop	r1
    1360:	18 95       	reti

00001362 <__vector_19>:
    1362:	1f 92       	push	r1
    1364:	0f 92       	push	r0
    1366:	0f b6       	in	r0, 0x3f	; 63
    1368:	0f 92       	push	r0
    136a:	11 24       	eor	r1, r1
    136c:	0f 93       	push	r16
    136e:	1f 93       	push	r17
    1370:	2f 93       	push	r18
    1372:	3f 93       	push	r19
    1374:	4f 93       	push	r20
    1376:	5f 93       	push	r21
    1378:	6f 93       	push	r22
    137a:	7f 93       	push	r23
    137c:	8f 93       	push	r24
    137e:	9f 93       	push	r25
    1380:	af 93       	push	r26
    1382:	bf 93       	push	r27
    1384:	ef 93       	push	r30
    1386:	ff 93       	push	r31
    1388:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <overflows>
    138c:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <overflows+0x1>
    1390:	ac 01       	movw	r20, r24
    1392:	09 2e       	mov	r0, r25
    1394:	00 0c       	add	r0, r0
    1396:	66 0b       	sbc	r22, r22
    1398:	77 0b       	sbc	r23, r23
    139a:	9a 01       	movw	r18, r20
    139c:	11 27       	eor	r17, r17
    139e:	00 27       	eor	r16, r16
    13a0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    13a4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    13a8:	60 e0       	ldi	r22, 0x00	; 0
    13aa:	70 e0       	ldi	r23, 0x00	; 0
    13ac:	40 2b       	or	r20, r16
    13ae:	51 2b       	or	r21, r17
    13b0:	62 2b       	or	r22, r18
    13b2:	73 2b       	or	r23, r19
    13b4:	40 93 10 01 	sts	0x0110, r20	; 0x800110 <timestamp>
    13b8:	50 93 11 01 	sts	0x0111, r21	; 0x800111 <timestamp+0x1>
    13bc:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <timestamp+0x2>
    13c0:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <timestamp+0x3>
    13c4:	b0 9b       	sbis	0x16, 0	; 22
    13c6:	1a c0       	rjmp	.+52     	; 0x13fc <__vector_19+0x9a>
    13c8:	01 96       	adiw	r24, 0x01	; 1
    13ca:	09 2e       	mov	r0, r25
    13cc:	00 0c       	add	r0, r0
    13ce:	aa 0b       	sbc	r26, r26
    13d0:	bb 0b       	sbc	r27, r27
    13d2:	bc 01       	movw	r22, r24
    13d4:	55 27       	eor	r21, r21
    13d6:	44 27       	eor	r20, r20
    13d8:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    13dc:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    13e0:	a0 e0       	ldi	r26, 0x00	; 0
    13e2:	b0 e0       	ldi	r27, 0x00	; 0
    13e4:	84 2b       	or	r24, r20
    13e6:	95 2b       	or	r25, r21
    13e8:	a6 2b       	or	r26, r22
    13ea:	b7 2b       	or	r27, r23
    13ec:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
    13f0:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
    13f4:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
    13f8:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
    13fc:	e0 91 ce 01 	lds	r30, 0x01CE	; 0x8001ce <mtable+0x1c>
    1400:	f0 91 cf 01 	lds	r31, 0x01CF	; 0x8001cf <mtable+0x1d>
    1404:	30 97       	sbiw	r30, 0x00	; 0
    1406:	39 f0       	breq	.+14     	; 0x1416 <__vector_19+0xb4>
    1408:	6e e0       	ldi	r22, 0x0E	; 14
    140a:	70 e0       	ldi	r23, 0x00	; 0
    140c:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <otable+0x1c>
    1410:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <otable+0x1d>
    1414:	09 95       	icall
    1416:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <schedule>
    141a:	ff 91       	pop	r31
    141c:	ef 91       	pop	r30
    141e:	bf 91       	pop	r27
    1420:	af 91       	pop	r26
    1422:	9f 91       	pop	r25
    1424:	8f 91       	pop	r24
    1426:	7f 91       	pop	r23
    1428:	6f 91       	pop	r22
    142a:	5f 91       	pop	r21
    142c:	4f 91       	pop	r20
    142e:	3f 91       	pop	r19
    1430:	2f 91       	pop	r18
    1432:	1f 91       	pop	r17
    1434:	0f 91       	pop	r16
    1436:	0f 90       	pop	r0
    1438:	0f be       	out	0x3f, r0	; 63
    143a:	0f 90       	pop	r0
    143c:	1f 90       	pop	r1
    143e:	18 95       	reti

00001440 <__vector_20>:
    1440:	1f 92       	push	r1
    1442:	0f 92       	push	r0
    1444:	0f b6       	in	r0, 0x3f	; 63
    1446:	0f 92       	push	r0
    1448:	11 24       	eor	r1, r1
    144a:	0f 93       	push	r16
    144c:	1f 93       	push	r17
    144e:	2f 93       	push	r18
    1450:	3f 93       	push	r19
    1452:	4f 93       	push	r20
    1454:	5f 93       	push	r21
    1456:	6f 93       	push	r22
    1458:	7f 93       	push	r23
    145a:	8f 93       	push	r24
    145c:	9f 93       	push	r25
    145e:	af 93       	push	r26
    1460:	bf 93       	push	r27
    1462:	ef 93       	push	r30
    1464:	ff 93       	push	r31
    1466:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <overflows>
    146a:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <overflows+0x1>
    146e:	ac 01       	movw	r20, r24
    1470:	09 2e       	mov	r0, r25
    1472:	00 0c       	add	r0, r0
    1474:	66 0b       	sbc	r22, r22
    1476:	77 0b       	sbc	r23, r23
    1478:	9a 01       	movw	r18, r20
    147a:	11 27       	eor	r17, r17
    147c:	00 27       	eor	r16, r16
    147e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1482:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1486:	60 e0       	ldi	r22, 0x00	; 0
    1488:	70 e0       	ldi	r23, 0x00	; 0
    148a:	40 2b       	or	r20, r16
    148c:	51 2b       	or	r21, r17
    148e:	62 2b       	or	r22, r18
    1490:	73 2b       	or	r23, r19
    1492:	40 93 10 01 	sts	0x0110, r20	; 0x800110 <timestamp>
    1496:	50 93 11 01 	sts	0x0111, r21	; 0x800111 <timestamp+0x1>
    149a:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <timestamp+0x2>
    149e:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <timestamp+0x3>
    14a2:	b0 9b       	sbis	0x16, 0	; 22
    14a4:	1a c0       	rjmp	.+52     	; 0x14da <__vector_20+0x9a>
    14a6:	01 96       	adiw	r24, 0x01	; 1
    14a8:	09 2e       	mov	r0, r25
    14aa:	00 0c       	add	r0, r0
    14ac:	aa 0b       	sbc	r26, r26
    14ae:	bb 0b       	sbc	r27, r27
    14b0:	bc 01       	movw	r22, r24
    14b2:	55 27       	eor	r21, r21
    14b4:	44 27       	eor	r20, r20
    14b6:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    14ba:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    14be:	a0 e0       	ldi	r26, 0x00	; 0
    14c0:	b0 e0       	ldi	r27, 0x00	; 0
    14c2:	84 2b       	or	r24, r20
    14c4:	95 2b       	or	r25, r21
    14c6:	a6 2b       	or	r26, r22
    14c8:	b7 2b       	or	r27, r23
    14ca:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
    14ce:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
    14d2:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
    14d6:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
    14da:	e0 91 d0 01 	lds	r30, 0x01D0	; 0x8001d0 <mtable+0x1e>
    14de:	f0 91 d1 01 	lds	r31, 0x01D1	; 0x8001d1 <mtable+0x1f>
    14e2:	30 97       	sbiw	r30, 0x00	; 0
    14e4:	39 f0       	breq	.+14     	; 0x14f4 <__vector_20+0xb4>
    14e6:	6f e0       	ldi	r22, 0x0F	; 15
    14e8:	70 e0       	ldi	r23, 0x00	; 0
    14ea:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <otable+0x1e>
    14ee:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <otable+0x1f>
    14f2:	09 95       	icall
    14f4:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <schedule>
    14f8:	ff 91       	pop	r31
    14fa:	ef 91       	pop	r30
    14fc:	bf 91       	pop	r27
    14fe:	af 91       	pop	r26
    1500:	9f 91       	pop	r25
    1502:	8f 91       	pop	r24
    1504:	7f 91       	pop	r23
    1506:	6f 91       	pop	r22
    1508:	5f 91       	pop	r21
    150a:	4f 91       	pop	r20
    150c:	3f 91       	pop	r19
    150e:	2f 91       	pop	r18
    1510:	1f 91       	pop	r17
    1512:	0f 91       	pop	r16
    1514:	0f 90       	pop	r0
    1516:	0f be       	out	0x3f, r0	; 63
    1518:	0f 90       	pop	r0
    151a:	1f 90       	pop	r1
    151c:	18 95       	reti

0000151e <__vector_21>:
    151e:	1f 92       	push	r1
    1520:	0f 92       	push	r0
    1522:	0f b6       	in	r0, 0x3f	; 63
    1524:	0f 92       	push	r0
    1526:	11 24       	eor	r1, r1
    1528:	0f 93       	push	r16
    152a:	1f 93       	push	r17
    152c:	2f 93       	push	r18
    152e:	3f 93       	push	r19
    1530:	4f 93       	push	r20
    1532:	5f 93       	push	r21
    1534:	6f 93       	push	r22
    1536:	7f 93       	push	r23
    1538:	8f 93       	push	r24
    153a:	9f 93       	push	r25
    153c:	af 93       	push	r26
    153e:	bf 93       	push	r27
    1540:	ef 93       	push	r30
    1542:	ff 93       	push	r31
    1544:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <overflows>
    1548:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <overflows+0x1>
    154c:	ac 01       	movw	r20, r24
    154e:	09 2e       	mov	r0, r25
    1550:	00 0c       	add	r0, r0
    1552:	66 0b       	sbc	r22, r22
    1554:	77 0b       	sbc	r23, r23
    1556:	9a 01       	movw	r18, r20
    1558:	11 27       	eor	r17, r17
    155a:	00 27       	eor	r16, r16
    155c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1560:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1564:	60 e0       	ldi	r22, 0x00	; 0
    1566:	70 e0       	ldi	r23, 0x00	; 0
    1568:	40 2b       	or	r20, r16
    156a:	51 2b       	or	r21, r17
    156c:	62 2b       	or	r22, r18
    156e:	73 2b       	or	r23, r19
    1570:	40 93 10 01 	sts	0x0110, r20	; 0x800110 <timestamp>
    1574:	50 93 11 01 	sts	0x0111, r21	; 0x800111 <timestamp+0x1>
    1578:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <timestamp+0x2>
    157c:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <timestamp+0x3>
    1580:	b0 9b       	sbis	0x16, 0	; 22
    1582:	1a c0       	rjmp	.+52     	; 0x15b8 <__vector_21+0x9a>
    1584:	01 96       	adiw	r24, 0x01	; 1
    1586:	09 2e       	mov	r0, r25
    1588:	00 0c       	add	r0, r0
    158a:	aa 0b       	sbc	r26, r26
    158c:	bb 0b       	sbc	r27, r27
    158e:	bc 01       	movw	r22, r24
    1590:	55 27       	eor	r21, r21
    1592:	44 27       	eor	r20, r20
    1594:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1598:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    159c:	a0 e0       	ldi	r26, 0x00	; 0
    159e:	b0 e0       	ldi	r27, 0x00	; 0
    15a0:	84 2b       	or	r24, r20
    15a2:	95 2b       	or	r25, r21
    15a4:	a6 2b       	or	r26, r22
    15a6:	b7 2b       	or	r27, r23
    15a8:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
    15ac:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
    15b0:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
    15b4:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
    15b8:	e0 91 d2 01 	lds	r30, 0x01D2	; 0x8001d2 <mtable+0x20>
    15bc:	f0 91 d3 01 	lds	r31, 0x01D3	; 0x8001d3 <mtable+0x21>
    15c0:	30 97       	sbiw	r30, 0x00	; 0
    15c2:	39 f0       	breq	.+14     	; 0x15d2 <__vector_21+0xb4>
    15c4:	60 e1       	ldi	r22, 0x10	; 16
    15c6:	70 e0       	ldi	r23, 0x00	; 0
    15c8:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <otable+0x20>
    15cc:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <otable+0x21>
    15d0:	09 95       	icall
    15d2:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <schedule>
    15d6:	ff 91       	pop	r31
    15d8:	ef 91       	pop	r30
    15da:	bf 91       	pop	r27
    15dc:	af 91       	pop	r26
    15de:	9f 91       	pop	r25
    15e0:	8f 91       	pop	r24
    15e2:	7f 91       	pop	r23
    15e4:	6f 91       	pop	r22
    15e6:	5f 91       	pop	r21
    15e8:	4f 91       	pop	r20
    15ea:	3f 91       	pop	r19
    15ec:	2f 91       	pop	r18
    15ee:	1f 91       	pop	r17
    15f0:	0f 91       	pop	r16
    15f2:	0f 90       	pop	r0
    15f4:	0f be       	out	0x3f, r0	; 63
    15f6:	0f 90       	pop	r0
    15f8:	1f 90       	pop	r1
    15fa:	18 95       	reti

000015fc <__vector_22>:
    15fc:	1f 92       	push	r1
    15fe:	0f 92       	push	r0
    1600:	0f b6       	in	r0, 0x3f	; 63
    1602:	0f 92       	push	r0
    1604:	11 24       	eor	r1, r1
    1606:	0f 93       	push	r16
    1608:	1f 93       	push	r17
    160a:	2f 93       	push	r18
    160c:	3f 93       	push	r19
    160e:	4f 93       	push	r20
    1610:	5f 93       	push	r21
    1612:	6f 93       	push	r22
    1614:	7f 93       	push	r23
    1616:	8f 93       	push	r24
    1618:	9f 93       	push	r25
    161a:	af 93       	push	r26
    161c:	bf 93       	push	r27
    161e:	ef 93       	push	r30
    1620:	ff 93       	push	r31
    1622:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <overflows>
    1626:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <overflows+0x1>
    162a:	ac 01       	movw	r20, r24
    162c:	09 2e       	mov	r0, r25
    162e:	00 0c       	add	r0, r0
    1630:	66 0b       	sbc	r22, r22
    1632:	77 0b       	sbc	r23, r23
    1634:	9a 01       	movw	r18, r20
    1636:	11 27       	eor	r17, r17
    1638:	00 27       	eor	r16, r16
    163a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    163e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1642:	60 e0       	ldi	r22, 0x00	; 0
    1644:	70 e0       	ldi	r23, 0x00	; 0
    1646:	40 2b       	or	r20, r16
    1648:	51 2b       	or	r21, r17
    164a:	62 2b       	or	r22, r18
    164c:	73 2b       	or	r23, r19
    164e:	40 93 10 01 	sts	0x0110, r20	; 0x800110 <timestamp>
    1652:	50 93 11 01 	sts	0x0111, r21	; 0x800111 <timestamp+0x1>
    1656:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <timestamp+0x2>
    165a:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <timestamp+0x3>
    165e:	b0 9b       	sbis	0x16, 0	; 22
    1660:	1a c0       	rjmp	.+52     	; 0x1696 <__vector_22+0x9a>
    1662:	01 96       	adiw	r24, 0x01	; 1
    1664:	09 2e       	mov	r0, r25
    1666:	00 0c       	add	r0, r0
    1668:	aa 0b       	sbc	r26, r26
    166a:	bb 0b       	sbc	r27, r27
    166c:	bc 01       	movw	r22, r24
    166e:	55 27       	eor	r21, r21
    1670:	44 27       	eor	r20, r20
    1672:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1676:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    167a:	a0 e0       	ldi	r26, 0x00	; 0
    167c:	b0 e0       	ldi	r27, 0x00	; 0
    167e:	84 2b       	or	r24, r20
    1680:	95 2b       	or	r25, r21
    1682:	a6 2b       	or	r26, r22
    1684:	b7 2b       	or	r27, r23
    1686:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <timestamp>
    168a:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <timestamp+0x1>
    168e:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <timestamp+0x2>
    1692:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <timestamp+0x3>
    1696:	e0 91 d4 01 	lds	r30, 0x01D4	; 0x8001d4 <mtable+0x22>
    169a:	f0 91 d5 01 	lds	r31, 0x01D5	; 0x8001d5 <mtable+0x23>
    169e:	30 97       	sbiw	r30, 0x00	; 0
    16a0:	39 f0       	breq	.+14     	; 0x16b0 <__vector_22+0xb4>
    16a2:	61 e1       	ldi	r22, 0x11	; 17
    16a4:	70 e0       	ldi	r23, 0x00	; 0
    16a6:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <otable+0x22>
    16aa:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <otable+0x23>
    16ae:	09 95       	icall
    16b0:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <schedule>
    16b4:	ff 91       	pop	r31
    16b6:	ef 91       	pop	r30
    16b8:	bf 91       	pop	r27
    16ba:	af 91       	pop	r26
    16bc:	9f 91       	pop	r25
    16be:	8f 91       	pop	r24
    16c0:	7f 91       	pop	r23
    16c2:	6f 91       	pop	r22
    16c4:	5f 91       	pop	r21
    16c6:	4f 91       	pop	r20
    16c8:	3f 91       	pop	r19
    16ca:	2f 91       	pop	r18
    16cc:	1f 91       	pop	r17
    16ce:	0f 91       	pop	r16
    16d0:	0f 90       	pop	r0
    16d2:	0f be       	out	0x3f, r0	; 63
    16d4:	0f 90       	pop	r0
    16d6:	1f 90       	pop	r1
    16d8:	18 95       	reti

000016da <idle>:
    16da:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <schedule>
    16de:	78 94       	sei
    16e0:	81 e0       	ldi	r24, 0x01	; 1
    16e2:	83 bf       	out	0x33, r24	; 51
    16e4:	88 95       	sleep
    16e6:	fc cf       	rjmp	.-8      	; 0x16e0 <idle+0x6>

000016e8 <__vector_9>:
    16e8:	1f 92       	push	r1
    16ea:	0f 92       	push	r0
    16ec:	0f b6       	in	r0, 0x3f	; 63
    16ee:	0f 92       	push	r0
    16f0:	11 24       	eor	r1, r1
    16f2:	2f 93       	push	r18
    16f4:	3f 93       	push	r19
    16f6:	4f 93       	push	r20
    16f8:	5f 93       	push	r21
    16fa:	6f 93       	push	r22
    16fc:	7f 93       	push	r23
    16fe:	8f 93       	push	r24
    1700:	9f 93       	push	r25
    1702:	ef 93       	push	r30
    1704:	ff 93       	push	r31
    1706:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <overflows>
    170a:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <overflows+0x1>
    170e:	01 96       	adiw	r24, 0x01	; 1
    1710:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <overflows+0x1>
    1714:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <overflows>
    1718:	e0 91 14 01 	lds	r30, 0x0114	; 0x800114 <timerQ>
    171c:	f0 91 15 01 	lds	r31, 0x0115	; 0x800115 <timerQ+0x1>
    1720:	30 97       	sbiw	r30, 0x00	; 0
    1722:	01 f1       	breq	.+64     	; 0x1764 <__vector_9+0x7c>
    1724:	42 81       	ldd	r20, Z+2	; 0x02
    1726:	53 81       	ldd	r21, Z+3	; 0x03
    1728:	64 81       	ldd	r22, Z+4	; 0x04
    172a:	75 81       	ldd	r23, Z+5	; 0x05
    172c:	86 17       	cp	r24, r22
    172e:	97 07       	cpc	r25, r23
    1730:	c9 f4       	brne	.+50     	; 0x1764 <__vector_9+0x7c>
    1732:	ca 01       	movw	r24, r20
    1734:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1738:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    173c:	42 1b       	sub	r20, r18
    173e:	53 0b       	sbc	r21, r19
    1740:	41 30       	cpi	r20, 0x01	; 1
    1742:	51 05       	cpc	r21, r1
    1744:	29 f4       	brne	.+10     	; 0x1750 <__vector_9+0x68>
    1746:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    174a:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    174e:	01 96       	adiw	r24, 0x01	; 1
    1750:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1754:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1758:	ef e6       	ldi	r30, 0x6F	; 111
    175a:	f0 e0       	ldi	r31, 0x00	; 0
    175c:	80 81       	ld	r24, Z
    175e:	82 60       	ori	r24, 0x02	; 2
    1760:	80 83       	st	Z, r24
    1762:	05 c0       	rjmp	.+10     	; 0x176e <__vector_9+0x86>
    1764:	ef e6       	ldi	r30, 0x6F	; 111
    1766:	f0 e0       	ldi	r31, 0x00	; 0
    1768:	80 81       	ld	r24, Z
    176a:	8d 7f       	andi	r24, 0xFD	; 253
    176c:	80 83       	st	Z, r24
    176e:	ff 91       	pop	r31
    1770:	ef 91       	pop	r30
    1772:	9f 91       	pop	r25
    1774:	8f 91       	pop	r24
    1776:	7f 91       	pop	r23
    1778:	6f 91       	pop	r22
    177a:	5f 91       	pop	r21
    177c:	4f 91       	pop	r20
    177e:	3f 91       	pop	r19
    1780:	2f 91       	pop	r18
    1782:	0f 90       	pop	r0
    1784:	0f be       	out	0x3f, r0	; 63
    1786:	0f 90       	pop	r0
    1788:	1f 90       	pop	r1
    178a:	18 95       	reti

0000178c <__vector_7>:
    178c:	1f 92       	push	r1
    178e:	0f 92       	push	r0
    1790:	0f b6       	in	r0, 0x3f	; 63
    1792:	0f 92       	push	r0
    1794:	11 24       	eor	r1, r1
    1796:	cf 92       	push	r12
    1798:	df 92       	push	r13
    179a:	ef 92       	push	r14
    179c:	ff 92       	push	r15
    179e:	2f 93       	push	r18
    17a0:	3f 93       	push	r19
    17a2:	4f 93       	push	r20
    17a4:	5f 93       	push	r21
    17a6:	6f 93       	push	r22
    17a8:	7f 93       	push	r23
    17aa:	8f 93       	push	r24
    17ac:	9f 93       	push	r25
    17ae:	af 93       	push	r26
    17b0:	bf 93       	push	r27
    17b2:	ef 93       	push	r30
    17b4:	ff 93       	push	r31
    17b6:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <overflows>
    17ba:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <overflows+0x1>
    17be:	6c 01       	movw	r12, r24
    17c0:	09 2e       	mov	r0, r25
    17c2:	00 0c       	add	r0, r0
    17c4:	ee 08       	sbc	r14, r14
    17c6:	ff 08       	sbc	r15, r15
    17c8:	76 01       	movw	r14, r12
    17ca:	dd 24       	eor	r13, r13
    17cc:	cc 24       	eor	r12, r12
    17ce:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    17d2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    17d6:	60 e0       	ldi	r22, 0x00	; 0
    17d8:	70 e0       	ldi	r23, 0x00	; 0
    17da:	c4 2a       	or	r12, r20
    17dc:	d5 2a       	or	r13, r21
    17de:	e6 2a       	or	r14, r22
    17e0:	f7 2a       	or	r15, r23
    17e2:	b0 9b       	sbis	0x16, 0	; 22
    17e4:	1e c0       	rjmp	.+60     	; 0x1822 <__vector_7+0x96>
    17e6:	6c 01       	movw	r12, r24
    17e8:	2f ef       	ldi	r18, 0xFF	; 255
    17ea:	c2 1a       	sub	r12, r18
    17ec:	d2 0a       	sbc	r13, r18
    17ee:	0d 2c       	mov	r0, r13
    17f0:	00 0c       	add	r0, r0
    17f2:	ee 08       	sbc	r14, r14
    17f4:	ff 08       	sbc	r15, r15
    17f6:	d6 01       	movw	r26, r12
    17f8:	99 27       	eor	r25, r25
    17fa:	88 27       	eor	r24, r24
    17fc:	c0 90 84 00 	lds	r12, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1800:	d0 90 85 00 	lds	r13, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1804:	e1 2c       	mov	r14, r1
    1806:	f1 2c       	mov	r15, r1
    1808:	c8 2a       	or	r12, r24
    180a:	d9 2a       	or	r13, r25
    180c:	ea 2a       	or	r14, r26
    180e:	fb 2a       	or	r15, r27
    1810:	08 c0       	rjmp	.+16     	; 0x1822 <__vector_7+0x96>
    1812:	84 e1       	ldi	r24, 0x14	; 20
    1814:	91 e0       	ldi	r25, 0x01	; 1
    1816:	0e 94 36 03 	call	0x66c	; 0x66c <dequeue>
    181a:	66 e1       	ldi	r22, 0x16	; 22
    181c:	71 e0       	ldi	r23, 0x01	; 1
    181e:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <enqueueByDeadline>
    1822:	e0 91 14 01 	lds	r30, 0x0114	; 0x800114 <timerQ>
    1826:	f0 91 15 01 	lds	r31, 0x0115	; 0x800115 <timerQ+0x1>
    182a:	30 97       	sbiw	r30, 0x00	; 0
    182c:	69 f0       	breq	.+26     	; 0x1848 <__vector_7+0xbc>
    182e:	82 81       	ldd	r24, Z+2	; 0x02
    1830:	93 81       	ldd	r25, Z+3	; 0x03
    1832:	a4 81       	ldd	r26, Z+4	; 0x04
    1834:	b5 81       	ldd	r27, Z+5	; 0x05
    1836:	8c 19       	sub	r24, r12
    1838:	9d 09       	sbc	r25, r13
    183a:	ae 09       	sbc	r26, r14
    183c:	bf 09       	sbc	r27, r15
    183e:	18 16       	cp	r1, r24
    1840:	19 06       	cpc	r1, r25
    1842:	1a 06       	cpc	r1, r26
    1844:	1b 06       	cpc	r1, r27
    1846:	2c f7       	brge	.-54     	; 0x1812 <__vector_7+0x86>
    1848:	30 97       	sbiw	r30, 0x00	; 0
    184a:	21 f1       	breq	.+72     	; 0x1894 <__vector_7+0x108>
    184c:	82 81       	ldd	r24, Z+2	; 0x02
    184e:	93 81       	ldd	r25, Z+3	; 0x03
    1850:	a4 81       	ldd	r26, Z+4	; 0x04
    1852:	b5 81       	ldd	r27, Z+5	; 0x05
    1854:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <overflows>
    1858:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <overflows+0x1>
    185c:	2a 17       	cp	r18, r26
    185e:	3b 07       	cpc	r19, r27
    1860:	c9 f4       	brne	.+50     	; 0x1894 <__vector_7+0x108>
    1862:	9c 01       	movw	r18, r24
    1864:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1868:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    186c:	84 1b       	sub	r24, r20
    186e:	95 0b       	sbc	r25, r21
    1870:	01 97       	sbiw	r24, 0x01	; 1
    1872:	31 f4       	brne	.+12     	; 0x1880 <__vector_7+0xf4>
    1874:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1878:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    187c:	2f 5f       	subi	r18, 0xFF	; 255
    187e:	3f 4f       	sbci	r19, 0xFF	; 255
    1880:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1884:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1888:	ef e6       	ldi	r30, 0x6F	; 111
    188a:	f0 e0       	ldi	r31, 0x00	; 0
    188c:	80 81       	ld	r24, Z
    188e:	82 60       	ori	r24, 0x02	; 2
    1890:	80 83       	st	Z, r24
    1892:	05 c0       	rjmp	.+10     	; 0x189e <__vector_7+0x112>
    1894:	ef e6       	ldi	r30, 0x6F	; 111
    1896:	f0 e0       	ldi	r31, 0x00	; 0
    1898:	80 81       	ld	r24, Z
    189a:	8d 7f       	andi	r24, 0xFD	; 253
    189c:	80 83       	st	Z, r24
    189e:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <schedule>
    18a2:	ff 91       	pop	r31
    18a4:	ef 91       	pop	r30
    18a6:	bf 91       	pop	r27
    18a8:	af 91       	pop	r26
    18aa:	9f 91       	pop	r25
    18ac:	8f 91       	pop	r24
    18ae:	7f 91       	pop	r23
    18b0:	6f 91       	pop	r22
    18b2:	5f 91       	pop	r21
    18b4:	4f 91       	pop	r20
    18b6:	3f 91       	pop	r19
    18b8:	2f 91       	pop	r18
    18ba:	ff 90       	pop	r15
    18bc:	ef 90       	pop	r14
    18be:	df 90       	pop	r13
    18c0:	cf 90       	pop	r12
    18c2:	0f 90       	pop	r0
    18c4:	0f be       	out	0x3f, r0	; 63
    18c6:	0f 90       	pop	r0
    18c8:	1f 90       	pop	r1
    18ca:	18 95       	reti

000018cc <async>:
    18cc:	3f 92       	push	r3
    18ce:	4f 92       	push	r4
    18d0:	5f 92       	push	r5
    18d2:	6f 92       	push	r6
    18d4:	7f 92       	push	r7
    18d6:	8f 92       	push	r8
    18d8:	9f 92       	push	r9
    18da:	af 92       	push	r10
    18dc:	bf 92       	push	r11
    18de:	cf 92       	push	r12
    18e0:	df 92       	push	r13
    18e2:	ef 92       	push	r14
    18e4:	ff 92       	push	r15
    18e6:	0f 93       	push	r16
    18e8:	1f 93       	push	r17
    18ea:	cf 93       	push	r28
    18ec:	df 93       	push	r29
    18ee:	2b 01       	movw	r4, r22
    18f0:	3c 01       	movw	r6, r24
    18f2:	49 01       	movw	r8, r18
    18f4:	5a 01       	movw	r10, r20
    18f6:	8f b7       	in	r24, 0x3f	; 63
    18f8:	80 78       	andi	r24, 0x80	; 128
    18fa:	38 2e       	mov	r3, r24
    18fc:	f8 94       	cli
    18fe:	88 e0       	ldi	r24, 0x08	; 8
    1900:	91 e0       	ldi	r25, 0x01	; 1
    1902:	0e 94 36 03 	call	0x66c	; 0x66c <dequeue>
    1906:	ec 01       	movw	r28, r24
    1908:	1b 87       	std	Y+11, r17	; 0x0b
    190a:	0a 87       	std	Y+10, r16	; 0x0a
    190c:	fd 86       	std	Y+13, r15	; 0x0d
    190e:	ec 86       	std	Y+12, r14	; 0x0c
    1910:	df 86       	std	Y+15, r13	; 0x0f
    1912:	ce 86       	std	Y+14, r12	; 0x0e
    1914:	33 20       	and	r3, r3
    1916:	61 f0       	breq	.+24     	; 0x1930 <async+0x64>
    1918:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <current>
    191c:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <current+0x1>
    1920:	02 80       	ldd	r0, Z+2	; 0x02
    1922:	f3 81       	ldd	r31, Z+3	; 0x03
    1924:	e0 2d       	mov	r30, r0
    1926:	82 81       	ldd	r24, Z+2	; 0x02
    1928:	93 81       	ldd	r25, Z+3	; 0x03
    192a:	a4 81       	ldd	r26, Z+4	; 0x04
    192c:	b5 81       	ldd	r27, Z+5	; 0x05
    192e:	08 c0       	rjmp	.+16     	; 0x1940 <async+0x74>
    1930:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <timestamp>
    1934:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <timestamp+0x1>
    1938:	a0 91 12 01 	lds	r26, 0x0112	; 0x800112 <timestamp+0x2>
    193c:	b0 91 13 01 	lds	r27, 0x0113	; 0x800113 <timestamp+0x3>
    1940:	48 0e       	add	r4, r24
    1942:	59 1e       	adc	r5, r25
    1944:	6a 1e       	adc	r6, r26
    1946:	7b 1e       	adc	r7, r27
    1948:	4a 82       	std	Y+2, r4	; 0x02
    194a:	5b 82       	std	Y+3, r5	; 0x03
    194c:	6c 82       	std	Y+4, r6	; 0x04
    194e:	7d 82       	std	Y+5, r7	; 0x05
    1950:	18 14       	cp	r1, r8
    1952:	19 04       	cpc	r1, r9
    1954:	1a 04       	cpc	r1, r10
    1956:	1b 04       	cpc	r1, r11
    1958:	44 f0       	brlt	.+16     	; 0x196a <async+0x9e>
    195a:	0f 2e       	mov	r0, r31
    195c:	88 24       	eor	r8, r8
    195e:	8a 94       	dec	r8
    1960:	98 2c       	mov	r9, r8
    1962:	a8 2c       	mov	r10, r8
    1964:	ff e7       	ldi	r31, 0x7F	; 127
    1966:	bf 2e       	mov	r11, r31
    1968:	f0 2d       	mov	r31, r0
    196a:	84 0c       	add	r8, r4
    196c:	95 1c       	adc	r9, r5
    196e:	a6 1c       	adc	r10, r6
    1970:	b7 1c       	adc	r11, r7
    1972:	8e 82       	std	Y+6, r8	; 0x06
    1974:	9f 82       	std	Y+7, r9	; 0x07
    1976:	a8 86       	std	Y+8, r10	; 0x08
    1978:	b9 86       	std	Y+9, r11	; 0x09
    197a:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <overflows>
    197e:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <overflows+0x1>
    1982:	c9 01       	movw	r24, r18
    1984:	03 2e       	mov	r0, r19
    1986:	00 0c       	add	r0, r0
    1988:	aa 0b       	sbc	r26, r26
    198a:	bb 0b       	sbc	r27, r27
    198c:	dc 01       	movw	r26, r24
    198e:	99 27       	eor	r25, r25
    1990:	88 27       	eor	r24, r24
    1992:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1996:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    199a:	60 e0       	ldi	r22, 0x00	; 0
    199c:	70 e0       	ldi	r23, 0x00	; 0
    199e:	84 2b       	or	r24, r20
    19a0:	95 2b       	or	r25, r21
    19a2:	a6 2b       	or	r26, r22
    19a4:	b7 2b       	or	r27, r23
    19a6:	b0 9b       	sbis	0x16, 0	; 22
    19a8:	13 c0       	rjmp	.+38     	; 0x19d0 <async+0x104>
    19aa:	c9 01       	movw	r24, r18
    19ac:	01 96       	adiw	r24, 0x01	; 1
    19ae:	09 2e       	mov	r0, r25
    19b0:	00 0c       	add	r0, r0
    19b2:	aa 0b       	sbc	r26, r26
    19b4:	bb 0b       	sbc	r27, r27
    19b6:	dc 01       	movw	r26, r24
    19b8:	99 27       	eor	r25, r25
    19ba:	88 27       	eor	r24, r24
    19bc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    19c0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    19c4:	60 e0       	ldi	r22, 0x00	; 0
    19c6:	70 e0       	ldi	r23, 0x00	; 0
    19c8:	84 2b       	or	r24, r20
    19ca:	95 2b       	or	r25, r21
    19cc:	a6 2b       	or	r26, r22
    19ce:	b7 2b       	or	r27, r23
    19d0:	48 1a       	sub	r4, r24
    19d2:	59 0a       	sbc	r5, r25
    19d4:	6a 0a       	sbc	r6, r26
    19d6:	7b 0a       	sbc	r7, r27
    19d8:	14 14       	cp	r1, r4
    19da:	15 04       	cpc	r1, r5
    19dc:	16 04       	cpc	r1, r6
    19de:	17 04       	cpc	r1, r7
    19e0:	ac f5       	brge	.+106    	; 0x1a4c <async+0x180>
    19e2:	64 e1       	ldi	r22, 0x14	; 20
    19e4:	71 e0       	ldi	r23, 0x01	; 1
    19e6:	ce 01       	movw	r24, r28
    19e8:	0e 94 05 03 	call	0x60a	; 0x60a <enqueueByBaseline>
    19ec:	e0 91 14 01 	lds	r30, 0x0114	; 0x800114 <timerQ>
    19f0:	f0 91 15 01 	lds	r31, 0x0115	; 0x800115 <timerQ+0x1>
    19f4:	30 97       	sbiw	r30, 0x00	; 0
    19f6:	21 f1       	breq	.+72     	; 0x1a40 <async+0x174>
    19f8:	82 81       	ldd	r24, Z+2	; 0x02
    19fa:	93 81       	ldd	r25, Z+3	; 0x03
    19fc:	a4 81       	ldd	r26, Z+4	; 0x04
    19fe:	b5 81       	ldd	r27, Z+5	; 0x05
    1a00:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <overflows>
    1a04:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <overflows+0x1>
    1a08:	2a 17       	cp	r18, r26
    1a0a:	3b 07       	cpc	r19, r27
    1a0c:	c9 f4       	brne	.+50     	; 0x1a40 <async+0x174>
    1a0e:	9c 01       	movw	r18, r24
    1a10:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1a14:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1a18:	84 1b       	sub	r24, r20
    1a1a:	95 0b       	sbc	r25, r21
    1a1c:	01 97       	sbiw	r24, 0x01	; 1
    1a1e:	31 f4       	brne	.+12     	; 0x1a2c <async+0x160>
    1a20:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1a24:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1a28:	2f 5f       	subi	r18, 0xFF	; 255
    1a2a:	3f 4f       	sbci	r19, 0xFF	; 255
    1a2c:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1a30:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1a34:	ef e6       	ldi	r30, 0x6F	; 111
    1a36:	f0 e0       	ldi	r31, 0x00	; 0
    1a38:	80 81       	ld	r24, Z
    1a3a:	82 60       	ori	r24, 0x02	; 2
    1a3c:	80 83       	st	Z, r24
    1a3e:	39 c0       	rjmp	.+114    	; 0x1ab2 <async+0x1e6>
    1a40:	ef e6       	ldi	r30, 0x6F	; 111
    1a42:	f0 e0       	ldi	r31, 0x00	; 0
    1a44:	80 81       	ld	r24, Z
    1a46:	8d 7f       	andi	r24, 0xFD	; 253
    1a48:	80 83       	st	Z, r24
    1a4a:	33 c0       	rjmp	.+102    	; 0x1ab2 <async+0x1e6>
    1a4c:	66 e1       	ldi	r22, 0x16	; 22
    1a4e:	71 e0       	ldi	r23, 0x01	; 1
    1a50:	ce 01       	movw	r24, r28
    1a52:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <enqueueByDeadline>
    1a56:	33 20       	and	r3, r3
    1a58:	61 f1       	breq	.+88     	; 0x1ab2 <async+0x1e6>
    1a5a:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <threadPool>
    1a5e:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <threadPool+0x1>
    1a62:	89 2b       	or	r24, r25
    1a64:	31 f1       	breq	.+76     	; 0x1ab2 <async+0x1e6>
    1a66:	e0 91 16 01 	lds	r30, 0x0116	; 0x800116 <msgQ>
    1a6a:	f0 91 17 01 	lds	r31, 0x0117	; 0x800117 <msgQ+0x1>
    1a6e:	86 81       	ldd	r24, Z+6	; 0x06
    1a70:	97 81       	ldd	r25, Z+7	; 0x07
    1a72:	a0 85       	ldd	r26, Z+8	; 0x08
    1a74:	b1 85       	ldd	r27, Z+9	; 0x09
    1a76:	e0 91 04 01 	lds	r30, 0x0104	; 0x800104 <activeStack>
    1a7a:	f0 91 05 01 	lds	r31, 0x0105	; 0x800105 <activeStack+0x1>
    1a7e:	02 80       	ldd	r0, Z+2	; 0x02
    1a80:	f3 81       	ldd	r31, Z+3	; 0x03
    1a82:	e0 2d       	mov	r30, r0
    1a84:	46 81       	ldd	r20, Z+6	; 0x06
    1a86:	57 81       	ldd	r21, Z+7	; 0x07
    1a88:	60 85       	ldd	r22, Z+8	; 0x08
    1a8a:	71 85       	ldd	r23, Z+9	; 0x09
    1a8c:	84 1b       	sub	r24, r20
    1a8e:	95 0b       	sbc	r25, r21
    1a90:	a6 0b       	sbc	r26, r22
    1a92:	b7 0b       	sbc	r27, r23
    1a94:	72 f4       	brpl	.+28     	; 0x1ab2 <async+0x1e6>
    1a96:	86 e0       	ldi	r24, 0x06	; 6
    1a98:	91 e0       	ldi	r25, 0x01	; 1
    1a9a:	0e 94 61 03 	call	0x6c2	; 0x6c2 <pop>
    1a9e:	64 e0       	ldi	r22, 0x04	; 4
    1aa0:	71 e0       	ldi	r23, 0x01	; 1
    1aa2:	0e 94 57 03 	call	0x6ae	; 0x6ae <push>
    1aa6:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <activeStack>
    1aaa:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <activeStack+0x1>
    1aae:	0e 94 b4 02 	call	0x568	; 0x568 <dispatch>
    1ab2:	33 20       	and	r3, r3
    1ab4:	09 f0       	breq	.+2      	; 0x1ab8 <async+0x1ec>
    1ab6:	78 94       	sei
    1ab8:	ce 01       	movw	r24, r28
    1aba:	df 91       	pop	r29
    1abc:	cf 91       	pop	r28
    1abe:	1f 91       	pop	r17
    1ac0:	0f 91       	pop	r16
    1ac2:	ff 90       	pop	r15
    1ac4:	ef 90       	pop	r14
    1ac6:	df 90       	pop	r13
    1ac8:	cf 90       	pop	r12
    1aca:	bf 90       	pop	r11
    1acc:	af 90       	pop	r10
    1ace:	9f 90       	pop	r9
    1ad0:	8f 90       	pop	r8
    1ad2:	7f 90       	pop	r7
    1ad4:	6f 90       	pop	r6
    1ad6:	5f 90       	pop	r5
    1ad8:	4f 90       	pop	r4
    1ada:	3f 90       	pop	r3
    1adc:	08 95       	ret

00001ade <sync>:
    1ade:	cf 92       	push	r12
    1ae0:	df 92       	push	r13
    1ae2:	ef 92       	push	r14
    1ae4:	ff 92       	push	r15
    1ae6:	0f 93       	push	r16
    1ae8:	1f 93       	push	r17
    1aea:	cf 93       	push	r28
    1aec:	df 93       	push	r29
    1aee:	ec 01       	movw	r28, r24
    1af0:	7b 01       	movw	r14, r22
    1af2:	6a 01       	movw	r12, r20
    1af4:	1f b7       	in	r17, 0x3f	; 63
    1af6:	10 78       	andi	r17, 0x80	; 128
    1af8:	f8 94       	cli
    1afa:	a8 81       	ld	r26, Y
    1afc:	b9 81       	ldd	r27, Y+1	; 0x01
    1afe:	10 97       	sbiw	r26, 0x00	; 0
    1b00:	19 f4       	brne	.+6      	; 0x1b08 <sync+0x2a>
    1b02:	35 c0       	rjmp	.+106    	; 0x1b6e <sync+0x90>
    1b04:	a0 81       	ld	r26, Z
    1b06:	b1 81       	ldd	r27, Z+1	; 0x01
    1b08:	14 96       	adiw	r26, 0x04	; 4
    1b0a:	ed 91       	ld	r30, X+
    1b0c:	fc 91       	ld	r31, X
    1b0e:	15 97       	sbiw	r26, 0x05	; 5
    1b10:	30 97       	sbiw	r30, 0x00	; 0
    1b12:	c1 f7       	brne	.-16     	; 0x1b04 <sync+0x26>
    1b14:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <current>
    1b18:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <current+0x1>
    1b1c:	a2 17       	cp	r26, r18
    1b1e:	b3 07       	cpc	r27, r19
    1b20:	11 f0       	breq	.+4      	; 0x1b26 <sync+0x48>
    1b22:	11 11       	cpse	r17, r1
    1b24:	07 c0       	rjmp	.+14     	; 0x1b34 <sync+0x56>
    1b26:	11 23       	and	r17, r17
    1b28:	09 f4       	brne	.+2      	; 0x1b2c <sync+0x4e>
    1b2a:	4a c0       	rjmp	.+148    	; 0x1bc0 <sync+0xe2>
    1b2c:	78 94       	sei
    1b2e:	8f ef       	ldi	r24, 0xFF	; 255
    1b30:	9f ef       	ldi	r25, 0xFF	; 255
    1b32:	4e c0       	rjmp	.+156    	; 0x1bd0 <sync+0xf2>
    1b34:	8a 81       	ldd	r24, Y+2	; 0x02
    1b36:	9b 81       	ldd	r25, Y+3	; 0x03
    1b38:	00 97       	sbiw	r24, 0x00	; 0
    1b3a:	19 f0       	breq	.+6      	; 0x1b42 <sync+0x64>
    1b3c:	fc 01       	movw	r30, r24
    1b3e:	15 82       	std	Z+5, r1	; 0x05
    1b40:	14 82       	std	Z+4, r1	; 0x04
    1b42:	3b 83       	std	Y+3, r19	; 0x03
    1b44:	2a 83       	std	Y+2, r18	; 0x02
    1b46:	f9 01       	movw	r30, r18
    1b48:	d5 83       	std	Z+5, r29	; 0x05
    1b4a:	c4 83       	std	Z+4, r28	; 0x04
    1b4c:	cd 01       	movw	r24, r26
    1b4e:	0e 94 b4 02 	call	0x568	; 0x568 <dispatch>
    1b52:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <current>
    1b56:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <current+0x1>
    1b5a:	82 81       	ldd	r24, Z+2	; 0x02
    1b5c:	93 81       	ldd	r25, Z+3	; 0x03
    1b5e:	89 2b       	or	r24, r25
    1b60:	31 f4       	brne	.+12     	; 0x1b6e <sync+0x90>
    1b62:	11 23       	and	r17, r17
    1b64:	81 f1       	breq	.+96     	; 0x1bc6 <sync+0xe8>
    1b66:	78 94       	sei
    1b68:	80 e0       	ldi	r24, 0x00	; 0
    1b6a:	90 e0       	ldi	r25, 0x00	; 0
    1b6c:	31 c0       	rjmp	.+98     	; 0x1bd0 <sync+0xf2>
    1b6e:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <current>
    1b72:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <current+0x1>
    1b76:	99 83       	std	Y+1, r25	; 0x01
    1b78:	88 83       	st	Y, r24
    1b7a:	11 23       	and	r17, r17
    1b7c:	29 f0       	breq	.+10     	; 0x1b88 <sync+0xaa>
    1b7e:	8a 81       	ldd	r24, Y+2	; 0x02
    1b80:	9b 81       	ldd	r25, Y+3	; 0x03
    1b82:	01 97       	sbiw	r24, 0x01	; 1
    1b84:	09 f0       	breq	.+2      	; 0x1b88 <sync+0xaa>
    1b86:	78 94       	sei
    1b88:	b6 01       	movw	r22, r12
    1b8a:	ce 01       	movw	r24, r28
    1b8c:	f7 01       	movw	r30, r14
    1b8e:	09 95       	icall
    1b90:	f8 2e       	mov	r15, r24
    1b92:	09 2f       	mov	r16, r25
    1b94:	8f b7       	in	r24, 0x3f	; 63
    1b96:	f8 94       	cli
    1b98:	19 82       	std	Y+1, r1	; 0x01
    1b9a:	18 82       	st	Y, r1
    1b9c:	8a 81       	ldd	r24, Y+2	; 0x02
    1b9e:	9b 81       	ldd	r25, Y+3	; 0x03
    1ba0:	82 30       	cpi	r24, 0x02	; 2
    1ba2:	91 05       	cpc	r25, r1
    1ba4:	38 f0       	brcs	.+14     	; 0x1bb4 <sync+0xd6>
    1ba6:	1b 82       	std	Y+3, r1	; 0x03
    1ba8:	1a 82       	std	Y+2, r1	; 0x02
    1baa:	fc 01       	movw	r30, r24
    1bac:	15 82       	std	Z+5, r1	; 0x05
    1bae:	14 82       	std	Z+4, r1	; 0x04
    1bb0:	0e 94 b4 02 	call	0x568	; 0x568 <dispatch>
    1bb4:	11 23       	and	r17, r17
    1bb6:	51 f0       	breq	.+20     	; 0x1bcc <sync+0xee>
    1bb8:	78 94       	sei
    1bba:	8f 2d       	mov	r24, r15
    1bbc:	90 2f       	mov	r25, r16
    1bbe:	08 c0       	rjmp	.+16     	; 0x1bd0 <sync+0xf2>
    1bc0:	8f ef       	ldi	r24, 0xFF	; 255
    1bc2:	9f ef       	ldi	r25, 0xFF	; 255
    1bc4:	05 c0       	rjmp	.+10     	; 0x1bd0 <sync+0xf2>
    1bc6:	80 e0       	ldi	r24, 0x00	; 0
    1bc8:	90 e0       	ldi	r25, 0x00	; 0
    1bca:	02 c0       	rjmp	.+4      	; 0x1bd0 <sync+0xf2>
    1bcc:	8f 2d       	mov	r24, r15
    1bce:	90 2f       	mov	r25, r16
    1bd0:	df 91       	pop	r29
    1bd2:	cf 91       	pop	r28
    1bd4:	1f 91       	pop	r17
    1bd6:	0f 91       	pop	r16
    1bd8:	ff 90       	pop	r15
    1bda:	ef 90       	pop	r14
    1bdc:	df 90       	pop	r13
    1bde:	cf 90       	pop	r12
    1be0:	08 95       	ret

00001be2 <run>:
    1be2:	00 91 02 01 	lds	r16, 0x0102	; 0x800102 <current>
    1be6:	10 91 03 01 	lds	r17, 0x0103	; 0x800103 <current+0x1>
    1bea:	86 e1       	ldi	r24, 0x16	; 22
    1bec:	91 e0       	ldi	r25, 0x01	; 1
    1bee:	0e 94 36 03 	call	0x66c	; 0x66c <dequeue>
    1bf2:	ec 01       	movw	r28, r24
    1bf4:	f8 01       	movw	r30, r16
    1bf6:	93 83       	std	Z+3, r25	; 0x03
    1bf8:	82 83       	std	Z+2, r24	; 0x02
    1bfa:	78 94       	sei
    1bfc:	6c 85       	ldd	r22, Y+12	; 0x0c
    1bfe:	7d 85       	ldd	r23, Y+13	; 0x0d
    1c00:	4e 85       	ldd	r20, Y+14	; 0x0e
    1c02:	5f 85       	ldd	r21, Y+15	; 0x0f
    1c04:	8a 85       	ldd	r24, Y+10	; 0x0a
    1c06:	9b 85       	ldd	r25, Y+11	; 0x0b
    1c08:	0e 94 6f 0d 	call	0x1ade	; 0x1ade <sync>
    1c0c:	8f b7       	in	r24, 0x3f	; 63
    1c0e:	f8 94       	cli
    1c10:	68 e0       	ldi	r22, 0x08	; 8
    1c12:	71 e0       	ldi	r23, 0x01	; 1
    1c14:	ce 01       	movw	r24, r28
    1c16:	0e 94 4d 03 	call	0x69a	; 0x69a <insert>
    1c1a:	e0 91 04 01 	lds	r30, 0x0104	; 0x800104 <activeStack>
    1c1e:	f0 91 05 01 	lds	r31, 0x0105	; 0x800105 <activeStack+0x1>
    1c22:	01 90       	ld	r0, Z+
    1c24:	f0 81       	ld	r31, Z
    1c26:	e0 2d       	mov	r30, r0
    1c28:	c2 81       	ldd	r28, Z+2	; 0x02
    1c2a:	d3 81       	ldd	r29, Z+3	; 0x03
    1c2c:	e0 91 16 01 	lds	r30, 0x0116	; 0x800116 <msgQ>
    1c30:	f0 91 17 01 	lds	r31, 0x0117	; 0x800117 <msgQ+0x1>
    1c34:	30 97       	sbiw	r30, 0x00	; 0
    1c36:	a1 f0       	breq	.+40     	; 0x1c60 <run+0x7e>
    1c38:	20 97       	sbiw	r28, 0x00	; 0
    1c3a:	99 f2       	breq	.-90     	; 0x1be2 <run>
    1c3c:	86 81       	ldd	r24, Z+6	; 0x06
    1c3e:	97 81       	ldd	r25, Z+7	; 0x07
    1c40:	a0 85       	ldd	r26, Z+8	; 0x08
    1c42:	b1 85       	ldd	r27, Z+9	; 0x09
    1c44:	4e 81       	ldd	r20, Y+6	; 0x06
    1c46:	5f 81       	ldd	r21, Y+7	; 0x07
    1c48:	68 85       	ldd	r22, Y+8	; 0x08
    1c4a:	79 85       	ldd	r23, Y+9	; 0x09
    1c4c:	84 1b       	sub	r24, r20
    1c4e:	95 0b       	sbc	r25, r21
    1c50:	a6 0b       	sbc	r26, r22
    1c52:	b7 0b       	sbc	r27, r23
    1c54:	18 16       	cp	r1, r24
    1c56:	19 06       	cpc	r1, r25
    1c58:	1a 06       	cpc	r1, r26
    1c5a:	1b 06       	cpc	r1, r27
    1c5c:	0c f0       	brlt	.+2      	; 0x1c60 <run+0x7e>
    1c5e:	c1 cf       	rjmp	.-126    	; 0x1be2 <run>
    1c60:	84 e0       	ldi	r24, 0x04	; 4
    1c62:	91 e0       	ldi	r25, 0x01	; 1
    1c64:	0e 94 61 03 	call	0x6c2	; 0x6c2 <pop>
    1c68:	66 e0       	ldi	r22, 0x06	; 6
    1c6a:	71 e0       	ldi	r23, 0x01	; 1
    1c6c:	0e 94 57 03 	call	0x6ae	; 0x6ae <push>
    1c70:	a0 91 04 01 	lds	r26, 0x0104	; 0x800104 <activeStack>
    1c74:	b0 91 05 01 	lds	r27, 0x0105	; 0x800105 <activeStack+0x1>
    1c78:	02 c0       	rjmp	.+4      	; 0x1c7e <run+0x9c>
    1c7a:	a0 81       	ld	r26, Z
    1c7c:	b1 81       	ldd	r27, Z+1	; 0x01
    1c7e:	14 96       	adiw	r26, 0x04	; 4
    1c80:	ed 91       	ld	r30, X+
    1c82:	fc 91       	ld	r31, X
    1c84:	15 97       	sbiw	r26, 0x05	; 5
    1c86:	30 97       	sbiw	r30, 0x00	; 0
    1c88:	c1 f7       	brne	.-16     	; 0x1c7a <run+0x98>
    1c8a:	cd 01       	movw	r24, r26
    1c8c:	0e 94 b4 02 	call	0x568	; 0x568 <dispatch>
    1c90:	a8 cf       	rjmp	.-176    	; 0x1be2 <run>

00001c92 <install>:
    thread0.msg = NULL;
    
    TIMER_INIT();
}

void install(Object *obj, Method m, enum Vector i) {
    1c92:	fc 01       	movw	r30, r24
    if (i >= 0 && i < N_VECTORS) {
    1c94:	42 31       	cpi	r20, 0x12	; 18
    1c96:	b8 f4       	brcc	.+46     	; 0x1cc6 <install+0x34>
        char status;
        DISABLE(status);
    1c98:	9f b7       	in	r25, 0x3f	; 63
    1c9a:	90 78       	andi	r25, 0x80	; 128
    1c9c:	f8 94       	cli
        otable[i] = obj;
    1c9e:	50 e0       	ldi	r21, 0x00	; 0
    1ca0:	44 0f       	add	r20, r20
    1ca2:	55 1f       	adc	r21, r21
    1ca4:	da 01       	movw	r26, r20
    1ca6:	a6 5e       	subi	r26, 0xE6	; 230
    1ca8:	be 4f       	sbci	r27, 0xFE	; 254
    1caa:	ed 93       	st	X+, r30
    1cac:	fc 93       	st	X, r31
        mtable[i] = m;
    1cae:	da 01       	movw	r26, r20
    1cb0:	ae 54       	subi	r26, 0x4E	; 78
    1cb2:	be 4f       	sbci	r27, 0xFE	; 254
    1cb4:	6d 93       	st	X+, r22
    1cb6:	7c 93       	st	X, r23
        obj->wantedBy = INSTALLED_TAG;  // Mark object as subject to synchronization by interrupt disabling
    1cb8:	21 e0       	ldi	r18, 0x01	; 1
    1cba:	30 e0       	ldi	r19, 0x00	; 0
    1cbc:	33 83       	std	Z+3, r19	; 0x03
    1cbe:	22 83       	std	Z+2, r18	; 0x02
        ENABLE(status);
    1cc0:	99 23       	and	r25, r25
    1cc2:	09 f0       	breq	.+2      	; 0x1cc6 <install+0x34>
    1cc4:	78 94       	sei
    1cc6:	08 95       	ret

00001cc8 <tinytimber>:
    }
}

int tinytimber(Object *obj, Method m, int arg) {
    1cc8:	8c 01       	movw	r16, r24
    1cca:	7b 01       	movw	r14, r22
    1ccc:	6a 01       	movw	r12, r20
    char status;
    DISABLE(status);
    1cce:	8f b7       	in	r24, 0x3f	; 63
    1cd0:	f8 94       	cli
    initialize();
    1cd2:	0e 94 15 02 	call	0x42a	; 0x42a <initialize>
    ENABLE(1);
    1cd6:	78 94       	sei
    if (m != NULL)
    1cd8:	e1 14       	cp	r14, r1
    1cda:	f1 04       	cpc	r15, r1
    1cdc:	41 f0       	breq	.+16     	; 0x1cee <tinytimber+0x26>
        //m(obj, arg);
		ASYNC(obj,m,arg);
    1cde:	20 e0       	ldi	r18, 0x00	; 0
    1ce0:	30 e0       	ldi	r19, 0x00	; 0
    1ce2:	a9 01       	movw	r20, r18
    1ce4:	60 e0       	ldi	r22, 0x00	; 0
    1ce6:	70 e0       	ldi	r23, 0x00	; 0
    1ce8:	cb 01       	movw	r24, r22
    1cea:	0e 94 66 0c 	call	0x18cc	; 0x18cc <async>
    DISABLE(status);
    1cee:	8f b7       	in	r24, 0x3f	; 63
    1cf0:	f8 94       	cli
    idle();
    1cf2:	0e 94 6d 0b 	call	0x16da	; 0x16da <idle>

00001cf6 <__divmodsi4>:
    1cf6:	05 2e       	mov	r0, r21
    1cf8:	97 fb       	bst	r25, 7
    1cfa:	1e f4       	brtc	.+6      	; 0x1d02 <__divmodsi4+0xc>
    1cfc:	00 94       	com	r0
    1cfe:	0e 94 92 0e 	call	0x1d24	; 0x1d24 <__negsi2>
    1d02:	57 fd       	sbrc	r21, 7
    1d04:	07 d0       	rcall	.+14     	; 0x1d14 <__divmodsi4_neg2>
    1d06:	0e 94 9a 0e 	call	0x1d34	; 0x1d34 <__udivmodsi4>
    1d0a:	07 fc       	sbrc	r0, 7
    1d0c:	03 d0       	rcall	.+6      	; 0x1d14 <__divmodsi4_neg2>
    1d0e:	4e f4       	brtc	.+18     	; 0x1d22 <__divmodsi4_exit>
    1d10:	0c 94 92 0e 	jmp	0x1d24	; 0x1d24 <__negsi2>

00001d14 <__divmodsi4_neg2>:
    1d14:	50 95       	com	r21
    1d16:	40 95       	com	r20
    1d18:	30 95       	com	r19
    1d1a:	21 95       	neg	r18
    1d1c:	3f 4f       	sbci	r19, 0xFF	; 255
    1d1e:	4f 4f       	sbci	r20, 0xFF	; 255
    1d20:	5f 4f       	sbci	r21, 0xFF	; 255

00001d22 <__divmodsi4_exit>:
    1d22:	08 95       	ret

00001d24 <__negsi2>:
    1d24:	90 95       	com	r25
    1d26:	80 95       	com	r24
    1d28:	70 95       	com	r23
    1d2a:	61 95       	neg	r22
    1d2c:	7f 4f       	sbci	r23, 0xFF	; 255
    1d2e:	8f 4f       	sbci	r24, 0xFF	; 255
    1d30:	9f 4f       	sbci	r25, 0xFF	; 255
    1d32:	08 95       	ret

00001d34 <__udivmodsi4>:
    1d34:	a1 e2       	ldi	r26, 0x21	; 33
    1d36:	1a 2e       	mov	r1, r26
    1d38:	aa 1b       	sub	r26, r26
    1d3a:	bb 1b       	sub	r27, r27
    1d3c:	fd 01       	movw	r30, r26
    1d3e:	0d c0       	rjmp	.+26     	; 0x1d5a <__udivmodsi4_ep>

00001d40 <__udivmodsi4_loop>:
    1d40:	aa 1f       	adc	r26, r26
    1d42:	bb 1f       	adc	r27, r27
    1d44:	ee 1f       	adc	r30, r30
    1d46:	ff 1f       	adc	r31, r31
    1d48:	a2 17       	cp	r26, r18
    1d4a:	b3 07       	cpc	r27, r19
    1d4c:	e4 07       	cpc	r30, r20
    1d4e:	f5 07       	cpc	r31, r21
    1d50:	20 f0       	brcs	.+8      	; 0x1d5a <__udivmodsi4_ep>
    1d52:	a2 1b       	sub	r26, r18
    1d54:	b3 0b       	sbc	r27, r19
    1d56:	e4 0b       	sbc	r30, r20
    1d58:	f5 0b       	sbc	r31, r21

00001d5a <__udivmodsi4_ep>:
    1d5a:	66 1f       	adc	r22, r22
    1d5c:	77 1f       	adc	r23, r23
    1d5e:	88 1f       	adc	r24, r24
    1d60:	99 1f       	adc	r25, r25
    1d62:	1a 94       	dec	r1
    1d64:	69 f7       	brne	.-38     	; 0x1d40 <__udivmodsi4_loop>
    1d66:	60 95       	com	r22
    1d68:	70 95       	com	r23
    1d6a:	80 95       	com	r24
    1d6c:	90 95       	com	r25
    1d6e:	9b 01       	movw	r18, r22
    1d70:	ac 01       	movw	r20, r24
    1d72:	bd 01       	movw	r22, r26
    1d74:	cf 01       	movw	r24, r30
    1d76:	08 95       	ret

00001d78 <setjmp>:
    1d78:	dc 01       	movw	r26, r24
    1d7a:	2d 92       	st	X+, r2
    1d7c:	3d 92       	st	X+, r3
    1d7e:	4d 92       	st	X+, r4
    1d80:	5d 92       	st	X+, r5
    1d82:	6d 92       	st	X+, r6
    1d84:	7d 92       	st	X+, r7
    1d86:	8d 92       	st	X+, r8
    1d88:	9d 92       	st	X+, r9
    1d8a:	ad 92       	st	X+, r10
    1d8c:	bd 92       	st	X+, r11
    1d8e:	cd 92       	st	X+, r12
    1d90:	dd 92       	st	X+, r13
    1d92:	ed 92       	st	X+, r14
    1d94:	fd 92       	st	X+, r15
    1d96:	0d 93       	st	X+, r16
    1d98:	1d 93       	st	X+, r17
    1d9a:	cd 93       	st	X+, r28
    1d9c:	dd 93       	st	X+, r29
    1d9e:	ff 91       	pop	r31
    1da0:	ef 91       	pop	r30
    1da2:	8d b7       	in	r24, 0x3d	; 61
    1da4:	8d 93       	st	X+, r24
    1da6:	8e b7       	in	r24, 0x3e	; 62
    1da8:	8d 93       	st	X+, r24
    1daa:	8f b7       	in	r24, 0x3f	; 63
    1dac:	8d 93       	st	X+, r24
    1dae:	ed 93       	st	X+, r30
    1db0:	fd 93       	st	X+, r31
    1db2:	88 27       	eor	r24, r24
    1db4:	99 27       	eor	r25, r25
    1db6:	09 94       	ijmp

00001db8 <longjmp>:
    1db8:	dc 01       	movw	r26, r24
    1dba:	cb 01       	movw	r24, r22
    1dbc:	81 30       	cpi	r24, 0x01	; 1
    1dbe:	91 05       	cpc	r25, r1
    1dc0:	81 1d       	adc	r24, r1
    1dc2:	2d 90       	ld	r2, X+
    1dc4:	3d 90       	ld	r3, X+
    1dc6:	4d 90       	ld	r4, X+
    1dc8:	5d 90       	ld	r5, X+
    1dca:	6d 90       	ld	r6, X+
    1dcc:	7d 90       	ld	r7, X+
    1dce:	8d 90       	ld	r8, X+
    1dd0:	9d 90       	ld	r9, X+
    1dd2:	ad 90       	ld	r10, X+
    1dd4:	bd 90       	ld	r11, X+
    1dd6:	cd 90       	ld	r12, X+
    1dd8:	dd 90       	ld	r13, X+
    1dda:	ed 90       	ld	r14, X+
    1ddc:	fd 90       	ld	r15, X+
    1dde:	0d 91       	ld	r16, X+
    1de0:	1d 91       	ld	r17, X+
    1de2:	cd 91       	ld	r28, X+
    1de4:	dd 91       	ld	r29, X+
    1de6:	ed 91       	ld	r30, X+
    1de8:	fd 91       	ld	r31, X+
    1dea:	0d 90       	ld	r0, X+
    1dec:	f8 94       	cli
    1dee:	fe bf       	out	0x3e, r31	; 62
    1df0:	0f be       	out	0x3f, r0	; 63
    1df2:	ed bf       	out	0x3d, r30	; 61
    1df4:	ed 91       	ld	r30, X+
    1df6:	fd 91       	ld	r31, X+
    1df8:	09 94       	ijmp

00001dfa <_exit>:
    1dfa:	f8 94       	cli

00001dfc <__stop_program>:
    1dfc:	ff cf       	rjmp	.-2      	; 0x1dfc <__stop_program>
