
Lab 4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000078  00800100  00002898  0000292c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002898  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000353  00800178  00800178  000029a4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000029a4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000029d4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000280  00000000  00000000  00002a14  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003465  00000000  00000000  00002c94  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000010b9  00000000  00000000  000060f9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001795  00000000  00000000  000071b2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000d24  00000000  00000000  00008948  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000099b  00000000  00000000  0000966c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000027e2  00000000  00000000  0000a007  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000220  00000000  00000000  0000c7e9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
       4:	0c 94 63 07 	jmp	0xec6	; 0xec6 <__vector_1>
       8:	0c 94 d2 07 	jmp	0xfa4	; 0xfa4 <__vector_2>
       c:	0c 94 41 08 	jmp	0x1082	; 0x1082 <__vector_3>
      10:	0c 94 b0 08 	jmp	0x1160	; 0x1160 <__vector_4>
      14:	0c 94 1f 09 	jmp	0x123e	; 0x123e <__vector_5>
      18:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      1c:	0c 94 8a 0f 	jmp	0x1f14	; 0x1f14 <__vector_7>
      20:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      24:	0c 94 38 0f 	jmp	0x1e70	; 0x1e70 <__vector_9>
      28:	0c 94 8e 09 	jmp	0x131c	; 0x131c <__vector_10>
      2c:	0c 94 fd 09 	jmp	0x13fa	; 0x13fa <__vector_11>
      30:	0c 94 6c 0a 	jmp	0x14d8	; 0x14d8 <__vector_12>
      34:	0c 94 db 0a 	jmp	0x15b6	; 0x15b6 <__vector_13>
      38:	0c 94 4a 0b 	jmp	0x1694	; 0x1694 <__vector_14>
      3c:	0c 94 b9 0b 	jmp	0x1772	; 0x1772 <__vector_15>
      40:	0c 94 28 0c 	jmp	0x1850	; 0x1850 <__vector_16>
      44:	0c 94 97 0c 	jmp	0x192e	; 0x192e <__vector_17>
      48:	0c 94 06 0d 	jmp	0x1a0c	; 0x1a0c <__vector_18>
      4c:	0c 94 75 0d 	jmp	0x1aea	; 0x1aea <__vector_19>
      50:	0c 94 e4 0d 	jmp	0x1bc8	; 0x1bc8 <__vector_20>
      54:	0c 94 53 0e 	jmp	0x1ca6	; 0x1ca6 <__vector_21>
      58:	0c 94 c2 0e 	jmp	0x1d84	; 0x1d84 <__vector_22>

0000005c <__ctors_end>:
      5c:	11 24       	eor	r1, r1
      5e:	1f be       	out	0x3f, r1	; 63
      60:	cf ef       	ldi	r28, 0xFF	; 255
      62:	d4 e0       	ldi	r29, 0x04	; 4
      64:	de bf       	out	0x3e, r29	; 62
      66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
      68:	11 e0       	ldi	r17, 0x01	; 1
      6a:	a0 e0       	ldi	r26, 0x00	; 0
      6c:	b1 e0       	ldi	r27, 0x01	; 1
      6e:	e8 e9       	ldi	r30, 0x98	; 152
      70:	f8 e2       	ldi	r31, 0x28	; 40
      72:	02 c0       	rjmp	.+4      	; 0x78 <__do_copy_data+0x10>
      74:	05 90       	lpm	r0, Z+
      76:	0d 92       	st	X+, r0
      78:	a8 37       	cpi	r26, 0x78	; 120
      7a:	b1 07       	cpc	r27, r17
      7c:	d9 f7       	brne	.-10     	; 0x74 <__do_copy_data+0xc>

0000007e <__do_clear_bss>:
      7e:	24 e0       	ldi	r18, 0x04	; 4
      80:	a8 e7       	ldi	r26, 0x78	; 120
      82:	b1 e0       	ldi	r27, 0x01	; 1
      84:	01 c0       	rjmp	.+2      	; 0x88 <.do_clear_bss_start>

00000086 <.do_clear_bss_loop>:
      86:	1d 92       	st	X+, r1

00000088 <.do_clear_bss_start>:
      88:	ab 3c       	cpi	r26, 0xCB	; 203
      8a:	b2 07       	cpc	r27, r18
      8c:	e1 f7       	brne	.-8      	; 0x86 <.do_clear_bss_loop>
      8e:	0e 94 80 03 	call	0x700	; 0x700 <main>
      92:	0c 94 4a 14 	jmp	0x2894	; 0x2894 <_exit>

00000096 <__bad_interrupt>:
      96:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009a <UpDownPushBuffer>:
#include "GUI.h"


// Add continuous loop
void UpDownPushBuffer(General *self)
{
      9a:	cf 92       	push	r12
      9c:	df 92       	push	r13
      9e:	ef 92       	push	r14
      a0:	ff 92       	push	r15
      a2:	0f 93       	push	r16
      a4:	1f 93       	push	r17
      a6:	cf 93       	push	r28
      a8:	df 93       	push	r29
      aa:	ec 01       	movw	r28, r24
	
	if (!(PINB & (1 << 6)))							//Plus
      ac:	1e 99       	sbic	0x03, 6	; 3
      ae:	44 c0       	rjmp	.+136    	; 0x138 <UpDownPushBuffer+0x9e>
	{
		ASYNC(self->Active, plusPulse, 0);
      b0:	0a 85       	ldd	r16, Y+10	; 0x0a
      b2:	1b 85       	ldd	r17, Y+11	; 0x0b
      b4:	c1 2c       	mov	r12, r1
      b6:	d1 2c       	mov	r13, r1
      b8:	0f 2e       	mov	r0, r31
      ba:	fd e2       	ldi	r31, 0x2D	; 45
      bc:	ef 2e       	mov	r14, r31
      be:	f4 e0       	ldi	r31, 0x04	; 4
      c0:	ff 2e       	mov	r15, r31
      c2:	f0 2d       	mov	r31, r0
      c4:	20 e0       	ldi	r18, 0x00	; 0
      c6:	30 e0       	ldi	r19, 0x00	; 0
      c8:	a9 01       	movw	r20, r18
      ca:	60 e0       	ldi	r22, 0x00	; 0
      cc:	70 e0       	ldi	r23, 0x00	; 0
      ce:	cb 01       	movw	r24, r22
      d0:	0e 94 2a 10 	call	0x2054	; 0x2054 <async>
		ASYNC(self->graphics, setFrequency, (self->Active->frequency));	
      d4:	ea 85       	ldd	r30, Y+10	; 0x0a
      d6:	fb 85       	ldd	r31, Y+11	; 0x0b
      d8:	08 85       	ldd	r16, Y+8	; 0x08
      da:	19 85       	ldd	r17, Y+9	; 0x09
      dc:	c6 80       	ldd	r12, Z+6	; 0x06
      de:	d7 80       	ldd	r13, Z+7	; 0x07
      e0:	0f 2e       	mov	r0, r31
      e2:	f3 e1       	ldi	r31, 0x13	; 19
      e4:	ef 2e       	mov	r14, r31
      e6:	f3 e0       	ldi	r31, 0x03	; 3
      e8:	ff 2e       	mov	r15, r31
      ea:	f0 2d       	mov	r31, r0
      ec:	20 e0       	ldi	r18, 0x00	; 0
      ee:	30 e0       	ldi	r19, 0x00	; 0
      f0:	a9 01       	movw	r20, r18
      f2:	60 e0       	ldi	r22, 0x00	; 0
      f4:	70 e0       	ldi	r23, 0x00	; 0
      f6:	cb 01       	movw	r24, r22
      f8:	0e 94 2a 10 	call	0x2054	; 0x2054 <async>
		if(self->Active->upDownPushFlag != 1){							//prevents several inputs entering if pressed rapidly
      fc:	ea 85       	ldd	r30, Y+10	; 0x0a
      fe:	fb 85       	ldd	r31, Y+11	; 0x0b
     100:	84 85       	ldd	r24, Z+12	; 0x0c
     102:	95 85       	ldd	r25, Z+13	; 0x0d
     104:	01 97       	sbiw	r24, 0x01	; 1
     106:	09 f4       	brne	.+2      	; 0x10a <UpDownPushBuffer+0x70>
     108:	89 c0       	rjmp	.+274    	; 0x21c <__EEPROM_REGION_LENGTH__+0x1c>
			self->Active->upDownPushFlag = 1;
     10a:	81 e0       	ldi	r24, 0x01	; 1
     10c:	90 e0       	ldi	r25, 0x00	; 0
     10e:	95 87       	std	Z+13, r25	; 0x0d
     110:	84 87       	std	Z+12, r24	; 0x0c
			ASYNC( self->Active,  delayContPush, 0);
     112:	0a 85       	ldd	r16, Y+10	; 0x0a
     114:	1b 85       	ldd	r17, Y+11	; 0x0b
     116:	c1 2c       	mov	r12, r1
     118:	d1 2c       	mov	r13, r1
     11a:	0f 2e       	mov	r0, r31
     11c:	f0 e9       	ldi	r31, 0x90	; 144
     11e:	ef 2e       	mov	r14, r31
     120:	f4 e0       	ldi	r31, 0x04	; 4
     122:	ff 2e       	mov	r15, r31
     124:	f0 2d       	mov	r31, r0
     126:	20 e0       	ldi	r18, 0x00	; 0
     128:	30 e0       	ldi	r19, 0x00	; 0
     12a:	a9 01       	movw	r20, r18
     12c:	60 e0       	ldi	r22, 0x00	; 0
     12e:	70 e0       	ldi	r23, 0x00	; 0
     130:	cb 01       	movw	r24, r22
     132:	0e 94 2a 10 	call	0x2054	; 0x2054 <async>
     136:	72 c0       	rjmp	.+228    	; 0x21c <__EEPROM_REGION_LENGTH__+0x1c>
		}
	}
	
	else if (!(PINB & (1 << 7)))
     138:	1f 99       	sbic	0x03, 7	; 3
     13a:	44 c0       	rjmp	.+136    	; 0x1c4 <UpDownPushBuffer+0x12a>
	{											//Minus
		ASYNC(self->Active, minusPulse, 0);		
     13c:	0a 85       	ldd	r16, Y+10	; 0x0a
     13e:	1b 85       	ldd	r17, Y+11	; 0x0b
     140:	c1 2c       	mov	r12, r1
     142:	d1 2c       	mov	r13, r1
     144:	0f 2e       	mov	r0, r31
     146:	f5 e8       	ldi	r31, 0x85	; 133
     148:	ef 2e       	mov	r14, r31
     14a:	f4 e0       	ldi	r31, 0x04	; 4
     14c:	ff 2e       	mov	r15, r31
     14e:	f0 2d       	mov	r31, r0
     150:	20 e0       	ldi	r18, 0x00	; 0
     152:	30 e0       	ldi	r19, 0x00	; 0
     154:	a9 01       	movw	r20, r18
     156:	60 e0       	ldi	r22, 0x00	; 0
     158:	70 e0       	ldi	r23, 0x00	; 0
     15a:	cb 01       	movw	r24, r22
     15c:	0e 94 2a 10 	call	0x2054	; 0x2054 <async>
		ASYNC(self->graphics, setFrequency, (self->Active->frequency));	
     160:	ea 85       	ldd	r30, Y+10	; 0x0a
     162:	fb 85       	ldd	r31, Y+11	; 0x0b
     164:	08 85       	ldd	r16, Y+8	; 0x08
     166:	19 85       	ldd	r17, Y+9	; 0x09
     168:	c6 80       	ldd	r12, Z+6	; 0x06
     16a:	d7 80       	ldd	r13, Z+7	; 0x07
     16c:	0f 2e       	mov	r0, r31
     16e:	f3 e1       	ldi	r31, 0x13	; 19
     170:	ef 2e       	mov	r14, r31
     172:	f3 e0       	ldi	r31, 0x03	; 3
     174:	ff 2e       	mov	r15, r31
     176:	f0 2d       	mov	r31, r0
     178:	20 e0       	ldi	r18, 0x00	; 0
     17a:	30 e0       	ldi	r19, 0x00	; 0
     17c:	a9 01       	movw	r20, r18
     17e:	60 e0       	ldi	r22, 0x00	; 0
     180:	70 e0       	ldi	r23, 0x00	; 0
     182:	cb 01       	movw	r24, r22
     184:	0e 94 2a 10 	call	0x2054	; 0x2054 <async>
		if(self->Active->upDownPushFlag != 1){
     188:	ea 85       	ldd	r30, Y+10	; 0x0a
     18a:	fb 85       	ldd	r31, Y+11	; 0x0b
     18c:	84 85       	ldd	r24, Z+12	; 0x0c
     18e:	95 85       	ldd	r25, Z+13	; 0x0d
     190:	01 97       	sbiw	r24, 0x01	; 1
     192:	09 f4       	brne	.+2      	; 0x196 <UpDownPushBuffer+0xfc>
     194:	43 c0       	rjmp	.+134    	; 0x21c <__EEPROM_REGION_LENGTH__+0x1c>
			self->Active->upDownPushFlag = 1;
     196:	81 e0       	ldi	r24, 0x01	; 1
     198:	90 e0       	ldi	r25, 0x00	; 0
     19a:	95 87       	std	Z+13, r25	; 0x0d
     19c:	84 87       	std	Z+12, r24	; 0x0c
			ASYNC(self->Active,  delayContPush, 0);
     19e:	0a 85       	ldd	r16, Y+10	; 0x0a
     1a0:	1b 85       	ldd	r17, Y+11	; 0x0b
     1a2:	c1 2c       	mov	r12, r1
     1a4:	d1 2c       	mov	r13, r1
     1a6:	0f 2e       	mov	r0, r31
     1a8:	f0 e9       	ldi	r31, 0x90	; 144
     1aa:	ef 2e       	mov	r14, r31
     1ac:	f4 e0       	ldi	r31, 0x04	; 4
     1ae:	ff 2e       	mov	r15, r31
     1b0:	f0 2d       	mov	r31, r0
     1b2:	20 e0       	ldi	r18, 0x00	; 0
     1b4:	30 e0       	ldi	r19, 0x00	; 0
     1b6:	a9 01       	movw	r20, r18
     1b8:	60 e0       	ldi	r22, 0x00	; 0
     1ba:	70 e0       	ldi	r23, 0x00	; 0
     1bc:	cb 01       	movw	r24, r22
     1be:	0e 94 2a 10 	call	0x2054	; 0x2054 <async>
     1c2:	2c c0       	rjmp	.+88     	; 0x21c <__EEPROM_REGION_LENGTH__+0x1c>
		}
	}
	
	else if (!(PINB & (1 << 4)))					//Push
     1c4:	1c 99       	sbic	0x03, 4	; 3
     1c6:	2a c0       	rjmp	.+84     	; 0x21c <__EEPROM_REGION_LENGTH__+0x1c>
	{
		if (self->Active->frequency != 0)
     1c8:	0a 85       	ldd	r16, Y+10	; 0x0a
     1ca:	1b 85       	ldd	r17, Y+11	; 0x0b
     1cc:	f8 01       	movw	r30, r16
     1ce:	86 81       	ldd	r24, Z+6	; 0x06
     1d0:	97 81       	ldd	r25, Z+7	; 0x07
     1d2:	00 97       	sbiw	r24, 0x00	; 0
     1d4:	89 f0       	breq	.+34     	; 0x1f8 <UpDownPushBuffer+0x15e>
		{
			ASYNC(self->Active, savePulse, 0);
     1d6:	c1 2c       	mov	r12, r1
     1d8:	d1 2c       	mov	r13, r1
     1da:	0f 2e       	mov	r0, r31
     1dc:	fb ec       	ldi	r31, 0xCB	; 203
     1de:	ef 2e       	mov	r14, r31
     1e0:	f5 e0       	ldi	r31, 0x05	; 5
     1e2:	ff 2e       	mov	r15, r31
     1e4:	f0 2d       	mov	r31, r0
     1e6:	20 e0       	ldi	r18, 0x00	; 0
     1e8:	30 e0       	ldi	r19, 0x00	; 0
     1ea:	a9 01       	movw	r20, r18
     1ec:	60 e0       	ldi	r22, 0x00	; 0
     1ee:	70 e0       	ldi	r23, 0x00	; 0
     1f0:	cb 01       	movw	r24, r22
     1f2:	0e 94 2a 10 	call	0x2054	; 0x2054 <async>
     1f6:	12 c0       	rjmp	.+36     	; 0x21c <__EEPROM_REGION_LENGTH__+0x1c>
		}
		else if (self->Active->frequency == 0)
     1f8:	89 2b       	or	r24, r25
     1fa:	81 f4       	brne	.+32     	; 0x21c <__EEPROM_REGION_LENGTH__+0x1c>
		{
			ASYNC(self->Active, restorePulse, 0);
     1fc:	c1 2c       	mov	r12, r1
     1fe:	d1 2c       	mov	r13, r1
     200:	0f 2e       	mov	r0, r31
     202:	f3 ed       	ldi	r31, 0xD3	; 211
     204:	ef 2e       	mov	r14, r31
     206:	f5 e0       	ldi	r31, 0x05	; 5
     208:	ff 2e       	mov	r15, r31
     20a:	f0 2d       	mov	r31, r0
     20c:	20 e0       	ldi	r18, 0x00	; 0
     20e:	30 e0       	ldi	r19, 0x00	; 0
     210:	a9 01       	movw	r20, r18
     212:	60 e0       	ldi	r22, 0x00	; 0
     214:	70 e0       	ldi	r23, 0x00	; 0
     216:	cb 01       	movw	r24, r22
     218:	0e 94 2a 10 	call	0x2054	; 0x2054 <async>
		}
		 
	}
ASYNC(self->graphics, setFrequency, (self->Active->frequency));	
     21c:	ea 85       	ldd	r30, Y+10	; 0x0a
     21e:	fb 85       	ldd	r31, Y+11	; 0x0b
     220:	08 85       	ldd	r16, Y+8	; 0x08
     222:	19 85       	ldd	r17, Y+9	; 0x09
     224:	c6 80       	ldd	r12, Z+6	; 0x06
     226:	d7 80       	ldd	r13, Z+7	; 0x07
     228:	0f 2e       	mov	r0, r31
     22a:	f3 e1       	ldi	r31, 0x13	; 19
     22c:	ef 2e       	mov	r14, r31
     22e:	f3 e0       	ldi	r31, 0x03	; 3
     230:	ff 2e       	mov	r15, r31
     232:	f0 2d       	mov	r31, r0
     234:	20 e0       	ldi	r18, 0x00	; 0
     236:	30 e0       	ldi	r19, 0x00	; 0
     238:	a9 01       	movw	r20, r18
     23a:	60 e0       	ldi	r22, 0x00	; 0
     23c:	70 e0       	ldi	r23, 0x00	; 0
     23e:	cb 01       	movw	r24, r22
     240:	0e 94 2a 10 	call	0x2054	; 0x2054 <async>
	ASYNC(self->graphics, updateGUI, 0);
     244:	08 85       	ldd	r16, Y+8	; 0x08
     246:	19 85       	ldd	r17, Y+9	; 0x09
     248:	c1 2c       	mov	r12, r1
     24a:	d1 2c       	mov	r13, r1
     24c:	0f 2e       	mov	r0, r31
     24e:	fd e1       	ldi	r31, 0x1D	; 29
     250:	ef 2e       	mov	r14, r31
     252:	f3 e0       	ldi	r31, 0x03	; 3
     254:	ff 2e       	mov	r15, r31
     256:	f0 2d       	mov	r31, r0
     258:	20 e0       	ldi	r18, 0x00	; 0
     25a:	30 e0       	ldi	r19, 0x00	; 0
     25c:	a9 01       	movw	r20, r18
     25e:	60 e0       	ldi	r22, 0x00	; 0
     260:	70 e0       	ldi	r23, 0x00	; 0
     262:	cb 01       	movw	r24, r22
     264:	0e 94 2a 10 	call	0x2054	; 0x2054 <async>
	
}
     268:	df 91       	pop	r29
     26a:	cf 91       	pop	r28
     26c:	1f 91       	pop	r17
     26e:	0f 91       	pop	r16
     270:	ff 90       	pop	r15
     272:	ef 90       	pop	r14
     274:	df 90       	pop	r13
     276:	cf 90       	pop	r12
     278:	08 95       	ret

0000027a <LRBuffer>:


//LRBuffer complete
void LRBuffer(General *self){
     27a:	cf 92       	push	r12
     27c:	df 92       	push	r13
     27e:	ef 92       	push	r14
     280:	ff 92       	push	r15
     282:	0f 93       	push	r16
     284:	1f 93       	push	r17
     286:	cf 93       	push	r28
     288:	df 93       	push	r29
     28a:	ec 01       	movw	r28, r24

		if (!(PINE & (1 << 2)))
     28c:	62 99       	sbic	0x0c, 2	; 12
     28e:	34 c0       	rjmp	.+104    	; 0x2f8 <LRBuffer+0x7e>
		{	
			self->Active = self->pg1;						
     290:	8c 81       	ldd	r24, Y+4	; 0x04
     292:	9d 81       	ldd	r25, Y+5	; 0x05
     294:	9b 87       	std	Y+11, r25	; 0x0b
     296:	8a 87       	std	Y+10, r24	; 0x0a
			
			self->graphics->side = 0;		//put gui in line with pGen
     298:	e8 85       	ldd	r30, Y+8	; 0x08
     29a:	f9 85       	ldd	r31, Y+9	; 0x09
     29c:	11 86       	std	Z+9, r1	; 0x09
     29e:	10 86       	std	Z+8, r1	; 0x08
			LCDDR13 = 0x0;				//side indicators indicate left
     2a0:	10 92 f9 00 	sts	0x00F9, r1	; 0x8000f9 <__TEXT_REGION_LENGTH__+0x7fc0f9>
			LCDDR18 = 0x1;
     2a4:	81 e0       	ldi	r24, 0x01	; 1
     2a6:	80 93 fe 00 	sts	0x00FE, r24	; 0x8000fe <__TEXT_REGION_LENGTH__+0x7fc0fe>
			ASYNC(self->graphics, setFrequency, (self->Active->frequency));	
     2aa:	ea 85       	ldd	r30, Y+10	; 0x0a
     2ac:	fb 85       	ldd	r31, Y+11	; 0x0b
     2ae:	08 85       	ldd	r16, Y+8	; 0x08
     2b0:	19 85       	ldd	r17, Y+9	; 0x09
     2b2:	c6 80       	ldd	r12, Z+6	; 0x06
     2b4:	d7 80       	ldd	r13, Z+7	; 0x07
     2b6:	0f 2e       	mov	r0, r31
     2b8:	f3 e1       	ldi	r31, 0x13	; 19
     2ba:	ef 2e       	mov	r14, r31
     2bc:	f3 e0       	ldi	r31, 0x03	; 3
     2be:	ff 2e       	mov	r15, r31
     2c0:	f0 2d       	mov	r31, r0
     2c2:	20 e0       	ldi	r18, 0x00	; 0
     2c4:	30 e0       	ldi	r19, 0x00	; 0
     2c6:	a9 01       	movw	r20, r18
     2c8:	60 e0       	ldi	r22, 0x00	; 0
     2ca:	70 e0       	ldi	r23, 0x00	; 0
     2cc:	cb 01       	movw	r24, r22
     2ce:	0e 94 2a 10 	call	0x2054	; 0x2054 <async>
			ASYNC(self->graphics, updateGUI, 0);
     2d2:	08 85       	ldd	r16, Y+8	; 0x08
     2d4:	19 85       	ldd	r17, Y+9	; 0x09
     2d6:	c1 2c       	mov	r12, r1
     2d8:	d1 2c       	mov	r13, r1
     2da:	0f 2e       	mov	r0, r31
     2dc:	fd e1       	ldi	r31, 0x1D	; 29
     2de:	ef 2e       	mov	r14, r31
     2e0:	f3 e0       	ldi	r31, 0x03	; 3
     2e2:	ff 2e       	mov	r15, r31
     2e4:	f0 2d       	mov	r31, r0
     2e6:	20 e0       	ldi	r18, 0x00	; 0
     2e8:	30 e0       	ldi	r19, 0x00	; 0
     2ea:	a9 01       	movw	r20, r18
     2ec:	60 e0       	ldi	r22, 0x00	; 0
     2ee:	70 e0       	ldi	r23, 0x00	; 0
     2f0:	cb 01       	movw	r24, r22
     2f2:	0e 94 2a 10 	call	0x2054	; 0x2054 <async>
     2f6:	37 c0       	rjmp	.+110    	; 0x366 <LRBuffer+0xec>

		}
		else if (!(PINE & (1 << 3)))
     2f8:	63 99       	sbic	0x0c, 3	; 12
     2fa:	35 c0       	rjmp	.+106    	; 0x366 <LRBuffer+0xec>
		{	
			self->Active = self->pg2;					
     2fc:	8e 81       	ldd	r24, Y+6	; 0x06
     2fe:	9f 81       	ldd	r25, Y+7	; 0x07
     300:	9b 87       	std	Y+11, r25	; 0x0b
     302:	8a 87       	std	Y+10, r24	; 0x0a
			
			self->graphics->side = 4;	//put gui in line with pGen
     304:	e8 85       	ldd	r30, Y+8	; 0x08
     306:	f9 85       	ldd	r31, Y+9	; 0x09
     308:	84 e0       	ldi	r24, 0x04	; 4
     30a:	90 e0       	ldi	r25, 0x00	; 0
     30c:	91 87       	std	Z+9, r25	; 0x09
     30e:	80 87       	std	Z+8, r24	; 0x08
			LCDDR13 = 0x1;				//side indicators indicate right
     310:	81 e0       	ldi	r24, 0x01	; 1
     312:	80 93 f9 00 	sts	0x00F9, r24	; 0x8000f9 <__TEXT_REGION_LENGTH__+0x7fc0f9>
			LCDDR18 = 0x0;
     316:	10 92 fe 00 	sts	0x00FE, r1	; 0x8000fe <__TEXT_REGION_LENGTH__+0x7fc0fe>
			ASYNC(self->graphics, setFrequency, (self->Active->frequency));	
     31a:	ea 85       	ldd	r30, Y+10	; 0x0a
     31c:	fb 85       	ldd	r31, Y+11	; 0x0b
     31e:	08 85       	ldd	r16, Y+8	; 0x08
     320:	19 85       	ldd	r17, Y+9	; 0x09
     322:	c6 80       	ldd	r12, Z+6	; 0x06
     324:	d7 80       	ldd	r13, Z+7	; 0x07
     326:	0f 2e       	mov	r0, r31
     328:	f3 e1       	ldi	r31, 0x13	; 19
     32a:	ef 2e       	mov	r14, r31
     32c:	f3 e0       	ldi	r31, 0x03	; 3
     32e:	ff 2e       	mov	r15, r31
     330:	f0 2d       	mov	r31, r0
     332:	20 e0       	ldi	r18, 0x00	; 0
     334:	30 e0       	ldi	r19, 0x00	; 0
     336:	a9 01       	movw	r20, r18
     338:	60 e0       	ldi	r22, 0x00	; 0
     33a:	70 e0       	ldi	r23, 0x00	; 0
     33c:	cb 01       	movw	r24, r22
     33e:	0e 94 2a 10 	call	0x2054	; 0x2054 <async>
			ASYNC(self->graphics, updateGUI, 0);
     342:	08 85       	ldd	r16, Y+8	; 0x08
     344:	19 85       	ldd	r17, Y+9	; 0x09
     346:	c1 2c       	mov	r12, r1
     348:	d1 2c       	mov	r13, r1
     34a:	0f 2e       	mov	r0, r31
     34c:	fd e1       	ldi	r31, 0x1D	; 29
     34e:	ef 2e       	mov	r14, r31
     350:	f3 e0       	ldi	r31, 0x03	; 3
     352:	ff 2e       	mov	r15, r31
     354:	f0 2d       	mov	r31, r0
     356:	20 e0       	ldi	r18, 0x00	; 0
     358:	30 e0       	ldi	r19, 0x00	; 0
     35a:	a9 01       	movw	r20, r18
     35c:	60 e0       	ldi	r22, 0x00	; 0
     35e:	70 e0       	ldi	r23, 0x00	; 0
     360:	cb 01       	movw	r24, r22
     362:	0e 94 2a 10 	call	0x2054	; 0x2054 <async>

		}	
}
     366:	df 91       	pop	r29
     368:	cf 91       	pop	r28
     36a:	1f 91       	pop	r17
     36c:	0f 91       	pop	r16
     36e:	ff 90       	pop	r15
     370:	ef 90       	pop	r14
     372:	df 90       	pop	r13
     374:	cf 90       	pop	r12
     376:	08 95       	ret

00000378 <start>:

void start(General *self){
     378:	cf 92       	push	r12
     37a:	df 92       	push	r13
     37c:	ef 92       	push	r14
     37e:	ff 92       	push	r15
     380:	0f 93       	push	r16
     382:	1f 93       	push	r17
	
	ASYNC(self->graphics, begin, 0);
     384:	fc 01       	movw	r30, r24
     386:	00 85       	ldd	r16, Z+8	; 0x08
     388:	11 85       	ldd	r17, Z+9	; 0x09
     38a:	c1 2c       	mov	r12, r1
     38c:	d1 2c       	mov	r13, r1
     38e:	0f 2e       	mov	r0, r31
     390:	fa e4       	ldi	r31, 0x4A	; 74
     392:	ef 2e       	mov	r14, r31
     394:	f3 e0       	ldi	r31, 0x03	; 3
     396:	ff 2e       	mov	r15, r31
     398:	f0 2d       	mov	r31, r0
     39a:	20 e0       	ldi	r18, 0x00	; 0
     39c:	30 e0       	ldi	r19, 0x00	; 0
     39e:	a9 01       	movw	r20, r18
     3a0:	60 e0       	ldi	r22, 0x00	; 0
     3a2:	70 e0       	ldi	r23, 0x00	; 0
     3a4:	cb 01       	movw	r24, r22
     3a6:	0e 94 2a 10 	call	0x2054	; 0x2054 <async>
	
     3aa:	1f 91       	pop	r17
     3ac:	0f 91       	pop	r16
     3ae:	ff 90       	pop	r15
     3b0:	ef 90       	pop	r14
     3b2:	df 90       	pop	r13
     3b4:	cf 90       	pop	r12
     3b6:	08 95       	ret

000003b8 <LCD_Init>:
	clearChar1(self->side);
	printAt(self->frequency, self->side);
}

void recieveContPush(GUI *d){
	updateGUI(d);
     3b8:	e1 e6       	ldi	r30, 0x61	; 97
     3ba:	f0 e0       	ldi	r31, 0x00	; 0
     3bc:	80 e8       	ldi	r24, 0x80	; 128
     3be:	80 83       	st	Z, r24
     3c0:	10 82       	st	Z, r1
     3c2:	87 eb       	ldi	r24, 0xB7	; 183
     3c4:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>
     3c8:	87 e0       	ldi	r24, 0x07	; 7
     3ca:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
     3ce:	8f e0       	ldi	r24, 0x0F	; 15
     3d0:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
     3d4:	80 ec       	ldi	r24, 0xC0	; 192
     3d6:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>
     3da:	08 95       	ret

000003dc <writeChar>:
     3dc:	cf 92       	push	r12
     3de:	df 92       	push	r13
     3e0:	ef 92       	push	r14
     3e2:	ff 92       	push	r15
     3e4:	1f 93       	push	r17
     3e6:	cf 93       	push	r28
     3e8:	df 93       	push	r29
     3ea:	10 ed       	ldi	r17, 0xD0	; 208
     3ec:	18 0f       	add	r17, r24
     3ee:	66 30       	cpi	r22, 0x06	; 6
     3f0:	71 05       	cpc	r23, r1
     3f2:	08 f0       	brcs	.+2      	; 0x3f6 <writeChar+0x1a>
     3f4:	b1 c0       	rjmp	.+354    	; 0x558 <__stack+0x59>
     3f6:	1a 30       	cpi	r17, 0x0A	; 10
     3f8:	08 f0       	brcs	.+2      	; 0x3fc <writeChar+0x20>
     3fa:	ae c0       	rjmp	.+348    	; 0x558 <__stack+0x59>
     3fc:	9b 01       	movw	r18, r22
     3fe:	2e 5f       	subi	r18, 0xFE	; 254
     400:	3f 4f       	sbci	r19, 0xFF	; 255
     402:	c9 01       	movw	r24, r18
     404:	99 23       	and	r25, r25
     406:	0c f4       	brge	.+2      	; 0x40a <__DATA_REGION_LENGTH__+0xa>
     408:	01 96       	adiw	r24, 0x01	; 1
     40a:	6b 01       	movw	r12, r22
     40c:	bc 01       	movw	r22, r24
     40e:	75 95       	asr	r23
     410:	67 95       	ror	r22
     412:	07 2e       	mov	r0, r23
     414:	00 0c       	add	r0, r0
     416:	88 0b       	sbc	r24, r24
     418:	99 0b       	sbc	r25, r25
     41a:	0e 94 e4 12 	call	0x25c8	; 0x25c8 <__floatsisf>
     41e:	0e 94 1f 13 	call	0x263e	; 0x263e <floor>
     422:	20 e0       	ldi	r18, 0x00	; 0
     424:	30 e0       	ldi	r19, 0x00	; 0
     426:	40 e8       	ldi	r20, 0x80	; 128
     428:	5f e3       	ldi	r21, 0x3F	; 63
     42a:	0e 94 3f 12 	call	0x247e	; 0x247e <__subsf3>
     42e:	0e 94 ac 12 	call	0x2558	; 0x2558 <__fixsfsi>
     432:	fb 01       	movw	r30, r22
     434:	ee 0f       	add	r30, r30
     436:	ff 1f       	adc	r31, r31
     438:	e0 5b       	subi	r30, 0xB0	; 176
     43a:	fe 4f       	sbci	r31, 0xFE	; 254
     43c:	a0 81       	ld	r26, Z
     43e:	b1 81       	ldd	r27, Z+1	; 0x01
     440:	ed 90       	ld	r14, X+
     442:	fc 90       	ld	r15, X
     444:	11 97       	sbiw	r26, 0x01	; 1
     446:	e1 2f       	mov	r30, r17
     448:	f0 e0       	ldi	r31, 0x00	; 0
     44a:	9f 01       	movw	r18, r30
     44c:	22 0f       	add	r18, r18
     44e:	33 1f       	adc	r19, r19
     450:	22 0f       	add	r18, r18
     452:	33 1f       	adc	r19, r19
     454:	22 0f       	add	r18, r18
     456:	33 1f       	adc	r19, r19
     458:	20 50       	subi	r18, 0x00	; 0
     45a:	3f 4f       	sbci	r19, 0xFF	; 255
     45c:	e9 01       	movw	r28, r18
     45e:	48 81       	ld	r20, Y
     460:	59 81       	ldd	r21, Y+1	; 0x01
     462:	96 01       	movw	r18, r12
     464:	21 70       	andi	r18, 0x01	; 1
     466:	30 78       	andi	r19, 0x80	; 128
     468:	33 23       	and	r19, r19
     46a:	34 f4       	brge	.+12     	; 0x478 <__DATA_REGION_LENGTH__+0x78>
     46c:	21 50       	subi	r18, 0x01	; 1
     46e:	31 09       	sbc	r19, r1
     470:	2e 6f       	ori	r18, 0xFE	; 254
     472:	3f 6f       	ori	r19, 0xFF	; 255
     474:	2f 5f       	subi	r18, 0xFF	; 255
     476:	3f 4f       	sbci	r19, 0xFF	; 255
     478:	22 0f       	add	r18, r18
     47a:	33 1f       	adc	r19, r19
     47c:	22 0f       	add	r18, r18
     47e:	33 1f       	adc	r19, r19
     480:	02 2e       	mov	r0, r18
     482:	02 c0       	rjmp	.+4      	; 0x488 <__DATA_REGION_LENGTH__+0x88>
     484:	44 0f       	add	r20, r20
     486:	55 1f       	adc	r21, r21
     488:	0a 94       	dec	r0
     48a:	e2 f7       	brpl	.-8      	; 0x484 <__DATA_REGION_LENGTH__+0x84>
     48c:	4e 0d       	add	r20, r14
     48e:	5f 1d       	adc	r21, r15
     490:	4d 93       	st	X+, r20
     492:	5c 93       	st	X, r21
     494:	6b 01       	movw	r12, r22
     496:	7c 01       	movw	r14, r24
     498:	d4 e0       	ldi	r29, 0x04	; 4
     49a:	cd 0e       	add	r12, r29
     49c:	d1 1c       	adc	r13, r1
     49e:	e1 1c       	adc	r14, r1
     4a0:	f1 1c       	adc	r15, r1
     4a2:	a6 01       	movw	r20, r12
     4a4:	44 0f       	add	r20, r20
     4a6:	55 1f       	adc	r21, r21
     4a8:	da 01       	movw	r26, r20
     4aa:	a0 5b       	subi	r26, 0xB0	; 176
     4ac:	be 4f       	sbci	r27, 0xFE	; 254
     4ae:	0d 90       	ld	r0, X+
     4b0:	bc 91       	ld	r27, X
     4b2:	a0 2d       	mov	r26, r0
     4b4:	cd 91       	ld	r28, X+
     4b6:	dc 91       	ld	r29, X
     4b8:	11 97       	sbiw	r26, 0x01	; 1
     4ba:	ee 0f       	add	r30, r30
     4bc:	ff 1f       	adc	r31, r31
     4be:	ee 0f       	add	r30, r30
     4c0:	ff 1f       	adc	r31, r31
     4c2:	ee 0f       	add	r30, r30
     4c4:	ff 1f       	adc	r31, r31
     4c6:	e0 50       	subi	r30, 0x00	; 0
     4c8:	ff 4f       	sbci	r31, 0xFF	; 255
     4ca:	42 81       	ldd	r20, Z+2	; 0x02
     4cc:	53 81       	ldd	r21, Z+3	; 0x03
     4ce:	02 2e       	mov	r0, r18
     4d0:	02 c0       	rjmp	.+4      	; 0x4d6 <__DATA_REGION_LENGTH__+0xd6>
     4d2:	44 0f       	add	r20, r20
     4d4:	55 1f       	adc	r21, r21
     4d6:	0a 94       	dec	r0
     4d8:	e2 f7       	brpl	.-8      	; 0x4d2 <__DATA_REGION_LENGTH__+0xd2>
     4da:	4c 0f       	add	r20, r28
     4dc:	5d 1f       	adc	r21, r29
     4de:	4d 93       	st	X+, r20
     4e0:	5c 93       	st	X, r21
     4e2:	6b 01       	movw	r12, r22
     4e4:	7c 01       	movw	r14, r24
     4e6:	48 e0       	ldi	r20, 0x08	; 8
     4e8:	c4 0e       	add	r12, r20
     4ea:	d1 1c       	adc	r13, r1
     4ec:	e1 1c       	adc	r14, r1
     4ee:	f1 1c       	adc	r15, r1
     4f0:	a6 01       	movw	r20, r12
     4f2:	44 0f       	add	r20, r20
     4f4:	55 1f       	adc	r21, r21
     4f6:	da 01       	movw	r26, r20
     4f8:	a0 5b       	subi	r26, 0xB0	; 176
     4fa:	be 4f       	sbci	r27, 0xFE	; 254
     4fc:	0d 90       	ld	r0, X+
     4fe:	bc 91       	ld	r27, X
     500:	a0 2d       	mov	r26, r0
     502:	cd 91       	ld	r28, X+
     504:	dc 91       	ld	r29, X
     506:	11 97       	sbiw	r26, 0x01	; 1
     508:	44 81       	ldd	r20, Z+4	; 0x04
     50a:	55 81       	ldd	r21, Z+5	; 0x05
     50c:	02 2e       	mov	r0, r18
     50e:	02 c0       	rjmp	.+4      	; 0x514 <__stack+0x15>
     510:	44 0f       	add	r20, r20
     512:	55 1f       	adc	r21, r21
     514:	0a 94       	dec	r0
     516:	e2 f7       	brpl	.-8      	; 0x510 <__stack+0x11>
     518:	4c 0f       	add	r20, r28
     51a:	5d 1f       	adc	r21, r29
     51c:	4d 93       	st	X+, r20
     51e:	5c 93       	st	X, r21
     520:	dc 01       	movw	r26, r24
     522:	cb 01       	movw	r24, r22
     524:	0c 96       	adiw	r24, 0x0c	; 12
     526:	a1 1d       	adc	r26, r1
     528:	b1 1d       	adc	r27, r1
     52a:	bc 01       	movw	r22, r24
     52c:	66 0f       	add	r22, r22
     52e:	77 1f       	adc	r23, r23
     530:	db 01       	movw	r26, r22
     532:	a0 5b       	subi	r26, 0xB0	; 176
     534:	be 4f       	sbci	r27, 0xFE	; 254
     536:	0d 90       	ld	r0, X+
     538:	bc 91       	ld	r27, X
     53a:	a0 2d       	mov	r26, r0
     53c:	4d 91       	ld	r20, X+
     53e:	5c 91       	ld	r21, X
     540:	11 97       	sbiw	r26, 0x01	; 1
     542:	86 81       	ldd	r24, Z+6	; 0x06
     544:	97 81       	ldd	r25, Z+7	; 0x07
     546:	02 c0       	rjmp	.+4      	; 0x54c <__stack+0x4d>
     548:	88 0f       	add	r24, r24
     54a:	99 1f       	adc	r25, r25
     54c:	2a 95       	dec	r18
     54e:	e2 f7       	brpl	.-8      	; 0x548 <__stack+0x49>
     550:	84 0f       	add	r24, r20
     552:	95 1f       	adc	r25, r21
     554:	8d 93       	st	X+, r24
     556:	9c 93       	st	X, r25
     558:	df 91       	pop	r29
     55a:	cf 91       	pop	r28
     55c:	1f 91       	pop	r17
     55e:	ff 90       	pop	r15
     560:	ef 90       	pop	r14
     562:	df 90       	pop	r13
     564:	cf 90       	pop	r12
     566:	08 95       	ret

00000568 <clearChar1>:
     568:	82 30       	cpi	r24, 0x02	; 2
     56a:	91 05       	cpc	r25, r1
     56c:	48 f4       	brcc	.+18     	; 0x580 <clearChar1+0x18>
     56e:	10 92 ec 00 	sts	0x00EC, r1	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
     572:	10 92 f1 00 	sts	0x00F1, r1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7fc0f1>
     576:	10 92 f6 00 	sts	0x00F6, r1	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7fc0f6>
     57a:	10 92 fb 00 	sts	0x00FB, r1	; 0x8000fb <__TEXT_REGION_LENGTH__+0x7fc0fb>
     57e:	08 95       	ret
     580:	03 97       	sbiw	r24, 0x03	; 3
     582:	02 97       	sbiw	r24, 0x02	; 2
     584:	80 f4       	brcc	.+32     	; 0x5a6 <clearChar1+0x3e>
     586:	10 92 ed 00 	sts	0x00ED, r1	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
     58a:	10 92 ee 00 	sts	0x00EE, r1	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
     58e:	10 92 f2 00 	sts	0x00F2, r1	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7fc0f2>
     592:	10 92 f3 00 	sts	0x00F3, r1	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7fc0f3>
     596:	10 92 f7 00 	sts	0x00F7, r1	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7fc0f7>
     59a:	10 92 f8 00 	sts	0x00F8, r1	; 0x8000f8 <__TEXT_REGION_LENGTH__+0x7fc0f8>
     59e:	10 92 fc 00 	sts	0x00FC, r1	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7fc0fc>
     5a2:	10 92 fd 00 	sts	0x00FD, r1	; 0x8000fd <__TEXT_REGION_LENGTH__+0x7fc0fd>
     5a6:	08 95       	ret

000005a8 <printAt>:
     5a8:	8f 92       	push	r8
     5aa:	9f 92       	push	r9
     5ac:	af 92       	push	r10
     5ae:	bf 92       	push	r11
     5b0:	cf 92       	push	r12
     5b2:	df 92       	push	r13
     5b4:	ef 92       	push	r14
     5b6:	ff 92       	push	r15
     5b8:	cf 93       	push	r28
     5ba:	df 93       	push	r29
     5bc:	4b 01       	movw	r8, r22
     5be:	5c 01       	movw	r10, r24
     5c0:	ea 01       	movw	r28, r20
     5c2:	ca 01       	movw	r24, r20
     5c4:	0e 94 b4 02 	call	0x568	; 0x568 <clearChar1>
     5c8:	c5 01       	movw	r24, r10
     5ca:	b4 01       	movw	r22, r8
     5cc:	24 e6       	ldi	r18, 0x64	; 100
     5ce:	30 e0       	ldi	r19, 0x00	; 0
     5d0:	40 e0       	ldi	r20, 0x00	; 0
     5d2:	50 e0       	ldi	r21, 0x00	; 0
     5d4:	0e 94 c8 13 	call	0x2790	; 0x2790 <__divmodsi4>
     5d8:	0f 2e       	mov	r0, r31
     5da:	fa e0       	ldi	r31, 0x0A	; 10
     5dc:	cf 2e       	mov	r12, r31
     5de:	d1 2c       	mov	r13, r1
     5e0:	e1 2c       	mov	r14, r1
     5e2:	f1 2c       	mov	r15, r1
     5e4:	f0 2d       	mov	r31, r0
     5e6:	a7 01       	movw	r20, r14
     5e8:	96 01       	movw	r18, r12
     5ea:	0e 94 c8 13 	call	0x2790	; 0x2790 <__divmodsi4>
     5ee:	be 01       	movw	r22, r28
     5f0:	80 e3       	ldi	r24, 0x30	; 48
     5f2:	82 0f       	add	r24, r18
     5f4:	0e 94 ee 01 	call	0x3dc	; 0x3dc <writeChar>
     5f8:	21 96       	adiw	r28, 0x01	; 1
     5fa:	c5 01       	movw	r24, r10
     5fc:	b4 01       	movw	r22, r8
     5fe:	a7 01       	movw	r20, r14
     600:	96 01       	movw	r18, r12
     602:	0e 94 c8 13 	call	0x2790	; 0x2790 <__divmodsi4>
     606:	86 2f       	mov	r24, r22
     608:	be 01       	movw	r22, r28
     60a:	80 5d       	subi	r24, 0xD0	; 208
     60c:	0e 94 ee 01 	call	0x3dc	; 0x3dc <writeChar>
     610:	df 91       	pop	r29
     612:	cf 91       	pop	r28
     614:	ff 90       	pop	r15
     616:	ef 90       	pop	r14
     618:	df 90       	pop	r13
     61a:	cf 90       	pop	r12
     61c:	bf 90       	pop	r11
     61e:	af 90       	pop	r10
     620:	9f 90       	pop	r9
     622:	8f 90       	pop	r8
     624:	08 95       	ret

00000626 <setFrequency>:
     626:	ab 01       	movw	r20, r22
     628:	77 0f       	add	r23, r23
     62a:	66 0b       	sbc	r22, r22
     62c:	77 0b       	sbc	r23, r23
     62e:	fc 01       	movw	r30, r24
     630:	44 83       	std	Z+4, r20	; 0x04
     632:	55 83       	std	Z+5, r21	; 0x05
     634:	66 83       	std	Z+6, r22	; 0x06
     636:	77 83       	std	Z+7, r23	; 0x07
     638:	08 95       	ret

0000063a <updateGUI>:
     63a:	cf 93       	push	r28
     63c:	df 93       	push	r29
     63e:	ec 01       	movw	r28, r24
     640:	8c 81       	ldd	r24, Y+4	; 0x04
     642:	9d 81       	ldd	r25, Y+5	; 0x05
     644:	ae 81       	ldd	r26, Y+6	; 0x06
     646:	bf 81       	ldd	r27, Y+7	; 0x07
     648:	bb 23       	and	r27, r27
     64a:	24 f4       	brge	.+8      	; 0x654 <updateGUI+0x1a>
     64c:	1c 82       	std	Y+4, r1	; 0x04
     64e:	1d 82       	std	Y+5, r1	; 0x05
     650:	1e 82       	std	Y+6, r1	; 0x06
     652:	1f 82       	std	Y+7, r1	; 0x07
     654:	8c 81       	ldd	r24, Y+4	; 0x04
     656:	9d 81       	ldd	r25, Y+5	; 0x05
     658:	ae 81       	ldd	r26, Y+6	; 0x06
     65a:	bf 81       	ldd	r27, Y+7	; 0x07
     65c:	84 36       	cpi	r24, 0x64	; 100
     65e:	91 05       	cpc	r25, r1
     660:	a1 05       	cpc	r26, r1
     662:	b1 05       	cpc	r27, r1
     664:	44 f0       	brlt	.+16     	; 0x676 <updateGUI+0x3c>
     666:	83 e6       	ldi	r24, 0x63	; 99
     668:	90 e0       	ldi	r25, 0x00	; 0
     66a:	a0 e0       	ldi	r26, 0x00	; 0
     66c:	b0 e0       	ldi	r27, 0x00	; 0
     66e:	8c 83       	std	Y+4, r24	; 0x04
     670:	9d 83       	std	Y+5, r25	; 0x05
     672:	ae 83       	std	Y+6, r26	; 0x06
     674:	bf 83       	std	Y+7, r27	; 0x07
     676:	88 85       	ldd	r24, Y+8	; 0x08
     678:	99 85       	ldd	r25, Y+9	; 0x09
     67a:	0e 94 b4 02 	call	0x568	; 0x568 <clearChar1>
     67e:	48 85       	ldd	r20, Y+8	; 0x08
     680:	59 85       	ldd	r21, Y+9	; 0x09
     682:	6c 81       	ldd	r22, Y+4	; 0x04
     684:	7d 81       	ldd	r23, Y+5	; 0x05
     686:	8e 81       	ldd	r24, Y+6	; 0x06
     688:	9f 81       	ldd	r25, Y+7	; 0x07
     68a:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <printAt>
     68e:	df 91       	pop	r29
     690:	cf 91       	pop	r28
     692:	08 95       	ret

00000694 <begin>:
}

void begin(GUI *self)
{
     694:	cf 92       	push	r12
     696:	df 92       	push	r13
     698:	ef 92       	push	r14
     69a:	ff 92       	push	r15
     69c:	0f 93       	push	r16
     69e:	1f 93       	push	r17
     6a0:	cf 93       	push	r28
     6a2:	df 93       	push	r29
     6a4:	ec 01       	movw	r28, r24
	printAt(self->frequency, self->side);
     6a6:	48 85       	ldd	r20, Y+8	; 0x08
     6a8:	59 85       	ldd	r21, Y+9	; 0x09
     6aa:	6c 81       	ldd	r22, Y+4	; 0x04
     6ac:	7d 81       	ldd	r23, Y+5	; 0x05
     6ae:	8e 81       	ldd	r24, Y+6	; 0x06
     6b0:	9f 81       	ldd	r25, Y+7	; 0x07
     6b2:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <printAt>
	ASYNC(self->pg1, outputPulse, 0);
     6b6:	0e 85       	ldd	r16, Y+14	; 0x0e
     6b8:	1f 85       	ldd	r17, Y+15	; 0x0f
     6ba:	c1 2c       	mov	r12, r1
     6bc:	d1 2c       	mov	r13, r1
     6be:	0f 2e       	mov	r0, r31
     6c0:	f8 e3       	ldi	r31, 0x38	; 56
     6c2:	ef 2e       	mov	r14, r31
     6c4:	f4 e0       	ldi	r31, 0x04	; 4
     6c6:	ff 2e       	mov	r15, r31
     6c8:	f0 2d       	mov	r31, r0
     6ca:	20 e0       	ldi	r18, 0x00	; 0
     6cc:	30 e0       	ldi	r19, 0x00	; 0
     6ce:	a9 01       	movw	r20, r18
     6d0:	60 e0       	ldi	r22, 0x00	; 0
     6d2:	70 e0       	ldi	r23, 0x00	; 0
     6d4:	cb 01       	movw	r24, r22
     6d6:	0e 94 2a 10 	call	0x2054	; 0x2054 <async>
	ASYNC(self->pg2, outputPulse, 0);
     6da:	08 89       	ldd	r16, Y+16	; 0x10
     6dc:	19 89       	ldd	r17, Y+17	; 0x11
     6de:	20 e0       	ldi	r18, 0x00	; 0
     6e0:	30 e0       	ldi	r19, 0x00	; 0
     6e2:	a9 01       	movw	r20, r18
     6e4:	60 e0       	ldi	r22, 0x00	; 0
     6e6:	70 e0       	ldi	r23, 0x00	; 0
     6e8:	cb 01       	movw	r24, r22
     6ea:	0e 94 2a 10 	call	0x2054	; 0x2054 <async>
	
	
}
     6ee:	df 91       	pop	r29
     6f0:	cf 91       	pop	r28
     6f2:	1f 91       	pop	r17
     6f4:	0f 91       	pop	r16
     6f6:	ff 90       	pop	r15
     6f8:	ef 90       	pop	r14
     6fa:	df 90       	pop	r13
     6fc:	cf 90       	pop	r12
     6fe:	08 95       	ret

00000700 <main>:
#include "output.h"
#include "pulseGen.h"
#include "General.h"


int main(void){
     700:	ef 92       	push	r14
     702:	ff 92       	push	r15
     704:	0f 93       	push	r16
     706:	1f 93       	push	r17
     708:	cf 93       	push	r28
     70a:	df 93       	push	r29
     70c:	cd b7       	in	r28, 0x3d	; 61
     70e:	de b7       	in	r29, 0x3e	; 62
     710:	ce 54       	subi	r28, 0x4E	; 78
     712:	d1 09       	sbc	r29, r1
     714:	0f b6       	in	r0, 0x3f	; 63
     716:	f8 94       	cli
     718:	de bf       	out	0x3e, r29	; 62
     71a:	0f be       	out	0x3f, r0	; 63
     71c:	cd bf       	out	0x3d, r28	; 61
	
PORTB = (1<<PB7 | 1<<PB6 | 1<<PB4 );																			//7down, 6up, 4push, 3
     71e:	80 ed       	ldi	r24, 0xD0	; 208
     720:	85 b9       	out	0x05, r24	; 5
PORTE = (1<<PE3 | 1<<PE2);																						//2left 3right
     722:	8c e0       	ldi	r24, 0x0C	; 12
     724:	8e b9       	out	0x0e, r24	; 14
PCMSK1 = (1<<PCINT15)|(1<<PCINT14)|(1<<PCINT13)|(1<<PCINT12)|(1<<PCINT11)|(1<<PCINT10)|(1<<PCINT9)|(1<<PCINT8); //carpet bombing with interrupts
     726:	8f ef       	ldi	r24, 0xFF	; 255
     728:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <__TEXT_REGION_LENGTH__+0x7fc06c>
PCMSK0 =(1<<PCINT7)|(1<<PCINT6)|(1<<PCINT5)|(1<<PCINT4)|(1<<PCINT3)|(1<<PCINT2)|(1<<PCINT1)|(1<<PCINT0);
     72c:	80 93 6b 00 	sts	0x006B, r24	; 0x80006b <__TEXT_REGION_LENGTH__+0x7fc06b>
EIMSK |= (1 << PCIE1) | (1 << PCIE0);
     730:	8d b3       	in	r24, 0x1d	; 29
     732:	80 6c       	ori	r24, 0xC0	; 192
     734:	8d bb       	out	0x1d, r24	; 29
PORTE |= (0 << PE4) | (0 << PE6);
     736:	8e b1       	in	r24, 0x0e	; 14
     738:	8e b9       	out	0x0e, r24	; 14
DDRE |= (1 << DDE4) | (1 << DDE6);
     73a:	8d b1       	in	r24, 0x0d	; 13
     73c:	80 65       	ori	r24, 0x50	; 80
     73e:	8d b9       	out	0x0d, r24	; 13


output op = initOutput(0);				//initialize output with state 0
     740:	1a 82       	std	Y+2, r1	; 0x02
     742:	19 82       	std	Y+1, r1	; 0x01
     744:	1c 82       	std	Y+4, r1	; 0x04
     746:	1b 82       	std	Y+3, r1	; 0x03
     748:	1e 82       	std	Y+6, r1	; 0x06
     74a:	1d 82       	std	Y+5, r1	; 0x05
pulseGen pg1 = initpulseGen(0, 0, &op);
     74c:	24 e1       	ldi	r18, 0x14	; 20
     74e:	fe 01       	movw	r30, r28
     750:	37 96       	adiw	r30, 0x07	; 7
     752:	df 01       	movw	r26, r30
     754:	32 2f       	mov	r19, r18
     756:	1d 92       	st	X+, r1
     758:	3a 95       	dec	r19
     75a:	e9 f7       	brne	.-6      	; 0x756 <main+0x56>
     75c:	ce 01       	movw	r24, r28
     75e:	01 96       	adiw	r24, 0x01	; 1
     760:	98 8f       	std	Y+24, r25	; 0x18
     762:	8f 8b       	std	Y+23, r24	; 0x17
pulseGen pg2 = initpulseGen(1, 4, &op);
     764:	7e 01       	movw	r14, r28
     766:	ab e1       	ldi	r26, 0x1B	; 27
     768:	ea 0e       	add	r14, r26
     76a:	f1 1c       	adc	r15, r1
     76c:	d7 01       	movw	r26, r14
     76e:	1d 92       	st	X+, r1
     770:	2a 95       	dec	r18
     772:	e9 f7       	brne	.-6      	; 0x76e <main+0x6e>
     774:	21 e0       	ldi	r18, 0x01	; 1
     776:	30 e0       	ldi	r19, 0x00	; 0
     778:	38 a3       	std	Y+32, r19	; 0x20
     77a:	2f 8f       	std	Y+31, r18	; 0x1f
     77c:	24 e0       	ldi	r18, 0x04	; 4
     77e:	30 e0       	ldi	r19, 0x00	; 0
     780:	3a a3       	std	Y+34, r19	; 0x22
     782:	29 a3       	std	Y+33, r18	; 0x21
     784:	9c a7       	std	Y+44, r25	; 0x2c
     786:	8b a7       	std	Y+43, r24	; 0x2b
GUI	graphics = initGUI(&pg1, &pg2);
     788:	18 aa       	std	Y+48, r1	; 0x30
     78a:	1f a6       	std	Y+47, r1	; 0x2f
     78c:	1a aa       	std	Y+50, r1	; 0x32
     78e:	19 aa       	std	Y+49, r1	; 0x31
     790:	41 e0       	ldi	r20, 0x01	; 1
     792:	50 e0       	ldi	r21, 0x00	; 0
     794:	60 e0       	ldi	r22, 0x00	; 0
     796:	70 e0       	ldi	r23, 0x00	; 0
     798:	4b ab       	std	Y+51, r20	; 0x33
     79a:	5c ab       	std	Y+52, r21	; 0x34
     79c:	6d ab       	std	Y+53, r22	; 0x35
     79e:	7e ab       	std	Y+54, r23	; 0x36
     7a0:	18 ae       	std	Y+56, r1	; 0x38
     7a2:	1f aa       	std	Y+55, r1	; 0x37
     7a4:	1a ae       	std	Y+58, r1	; 0x3a
     7a6:	19 ae       	std	Y+57, r1	; 0x39
     7a8:	1c ae       	std	Y+60, r1	; 0x3c
     7aa:	1b ae       	std	Y+59, r1	; 0x3b
     7ac:	fe af       	std	Y+62, r31	; 0x3e
     7ae:	ed af       	std	Y+61, r30	; 0x3d
     7b0:	21 96       	adiw	r28, 0x01	; 1
     7b2:	ff ae       	std	Y+63, r15	; 0x3f
     7b4:	ee ae       	std	Y+62, r14	; 0x3e
     7b6:	21 97       	sbiw	r28, 0x01	; 1
General Gnrl = initGeneral(&pg1, &pg2, &graphics);
     7b8:	8e 01       	movw	r16, r28
     7ba:	0f 5b       	subi	r16, 0xBF	; 191
     7bc:	1f 4f       	sbci	r17, 0xFF	; 255
     7be:	8e e0       	ldi	r24, 0x0E	; 14
     7c0:	d8 01       	movw	r26, r16
     7c2:	1d 92       	st	X+, r1
     7c4:	8a 95       	dec	r24
     7c6:	e9 f7       	brne	.-6      	; 0x7c2 <main+0xc2>
     7c8:	d8 01       	movw	r26, r16
     7ca:	15 96       	adiw	r26, 0x05	; 5
     7cc:	fc 93       	st	X, r31
     7ce:	ee 93       	st	-X, r30
     7d0:	14 97       	sbiw	r26, 0x04	; 4
     7d2:	17 96       	adiw	r26, 0x07	; 7
     7d4:	fc 92       	st	X, r15
     7d6:	ee 92       	st	-X, r14
     7d8:	16 97       	sbiw	r26, 0x06	; 6
     7da:	ce 01       	movw	r24, r28
     7dc:	8f 96       	adiw	r24, 0x2f	; 47
     7de:	19 96       	adiw	r26, 0x09	; 9
     7e0:	9c 93       	st	X, r25
     7e2:	8e 93       	st	-X, r24
     7e4:	18 97       	sbiw	r26, 0x08	; 8
     7e6:	1b 96       	adiw	r26, 0x0b	; 11
     7e8:	fc 93       	st	X, r31
     7ea:	ee 93       	st	-X, r30
     7ec:	1a 97       	sbiw	r26, 0x0a	; 10
pg1.observer = &graphics;
     7ee:	9a 8f       	std	Y+26, r25	; 0x1a
     7f0:	89 8f       	std	Y+25, r24	; 0x19
pg2.observer = &graphics;
     7f2:	9e a7       	std	Y+46, r25	; 0x2e
     7f4:	8d a7       	std	Y+45, r24	; 0x2d

LCD_Init();
     7f6:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LCD_Init>

INSTALL(&Gnrl, LRBuffer, IRQ_PCINT0);
     7fa:	41 e0       	ldi	r20, 0x01	; 1
     7fc:	6d e3       	ldi	r22, 0x3D	; 61
     7fe:	71 e0       	ldi	r23, 0x01	; 1
     800:	c8 01       	movw	r24, r16
     802:	0e 94 0d 12 	call	0x241a	; 0x241a <install>
INSTALL(&Gnrl, UpDownPushBuffer, IRQ_PCINT1);
     806:	42 e0       	ldi	r20, 0x02	; 2
     808:	6d e4       	ldi	r22, 0x4D	; 77
     80a:	70 e0       	ldi	r23, 0x00	; 0
     80c:	c8 01       	movw	r24, r16
     80e:	0e 94 0d 12 	call	0x241a	; 0x241a <install>
return TINYTIMBER(&Gnrl, start, 0);
     812:	40 e0       	ldi	r20, 0x00	; 0
     814:	50 e0       	ldi	r21, 0x00	; 0
     816:	6c eb       	ldi	r22, 0xBC	; 188
     818:	71 e0       	ldi	r23, 0x01	; 1
     81a:	c8 01       	movw	r24, r16
     81c:	0e 94 28 12 	call	0x2450	; 0x2450 <tinytimber>
     820:	c2 5b       	subi	r28, 0xB2	; 178
     822:	df 4f       	sbci	r29, 0xFF	; 255
     824:	0f b6       	in	r0, 0x3f	; 63
     826:	f8 94       	cli
     828:	de bf       	out	0x3e, r29	; 62
     82a:	0f be       	out	0x3f, r0	; 63
     82c:	cd bf       	out	0x3d, r28	; 61
     82e:	df 91       	pop	r29
     830:	cf 91       	pop	r28
     832:	1f 91       	pop	r17
     834:	0f 91       	pop	r16
     836:	ff 90       	pop	r15
     838:	ef 90       	pop	r14
     83a:	08 95       	ret

0000083c <pinPulse>:

void pinPulse(output *self, int x)
{
	// Look over
	
	if (x == 0)
     83c:	61 15       	cp	r22, r1
     83e:	71 05       	cpc	r23, r1
     840:	21 f4       	brne	.+8      	; 0x84a <pinPulse+0xe>
	{
		PORTE ^= (1 << 4);
     842:	9e b1       	in	r25, 0x0e	; 14
     844:	80 e1       	ldi	r24, 0x10	; 16
     846:	89 27       	eor	r24, r25
     848:	8e b9       	out	0x0e, r24	; 14
	}
	if (x == 1)
     84a:	61 30       	cpi	r22, 0x01	; 1
     84c:	71 05       	cpc	r23, r1
     84e:	21 f4       	brne	.+8      	; 0x858 <pinPulse+0x1c>
	{
		PORTE ^= (1 << 6);
     850:	9e b1       	in	r25, 0x0e	; 14
     852:	80 e4       	ldi	r24, 0x40	; 64
     854:	89 27       	eor	r24, r25
     856:	8e b9       	out	0x0e, r24	; 14
     858:	08 95       	ret

0000085a <plusPulse>:
#include "GUI.h"
#include "tinytimber.h"


void  plusPulse(pulseGen *self){
if (self->frequency < 99){
     85a:	fc 01       	movw	r30, r24
     85c:	26 81       	ldd	r18, Z+6	; 0x06
     85e:	37 81       	ldd	r19, Z+7	; 0x07
     860:	23 36       	cpi	r18, 0x63	; 99
     862:	31 05       	cpc	r19, r1
     864:	24 f4       	brge	.+8      	; 0x86e <plusPulse+0x14>
	self->frequency = self->frequency +1; 
     866:	2f 5f       	subi	r18, 0xFF	; 255
     868:	3f 4f       	sbci	r19, 0xFF	; 255
     86a:	37 83       	std	Z+7, r19	; 0x07
     86c:	26 83       	std	Z+6, r18	; 0x06
     86e:	08 95       	ret

00000870 <outputPulse>:
void notifyContPush(pulseGen *self){
	AFTER(SEC(1)/100, self->observer, recieveContPush, 0);
	
}

void  outputPulse(pulseGen *self){
     870:	cf 92       	push	r12
     872:	df 92       	push	r13
     874:	ef 92       	push	r14
     876:	ff 92       	push	r15
     878:	0f 93       	push	r16
     87a:	1f 93       	push	r17
     87c:	cf 93       	push	r28
     87e:	df 93       	push	r29
     880:	ec 01       	movw	r28, r24
	
	if (self->frequency != 0){
     882:	8e 81       	ldd	r24, Y+6	; 0x06
     884:	9f 81       	ldd	r25, Y+7	; 0x07
     886:	00 97       	sbiw	r24, 0x00	; 0
     888:	19 f1       	breq	.+70     	; 0x8d0 <outputPulse+0x60>
		pinPulse(self->op, self->target);				 //output frequency to oscilloscope
     88a:	6c 81       	ldd	r22, Y+4	; 0x04
     88c:	7d 81       	ldd	r23, Y+5	; 0x05
     88e:	88 89       	ldd	r24, Y+16	; 0x10
     890:	99 89       	ldd	r25, Y+17	; 0x11
     892:	0e 94 1e 04 	call	0x83c	; 0x83c <pinPulse>
		AFTER(((SEC(1)) /(self->frequency) /2), self, outputPulse, 0); //periodically checks if given pg should re-emit signals by checking the pulseCut variable.
     896:	2e 81       	ldd	r18, Y+6	; 0x06
     898:	3f 81       	ldd	r19, Y+7	; 0x07
     89a:	03 2e       	mov	r0, r19
     89c:	00 0c       	add	r0, r0
     89e:	44 0b       	sbc	r20, r20
     8a0:	55 0b       	sbc	r21, r21
     8a2:	69 e0       	ldi	r22, 0x09	; 9
     8a4:	7d e3       	ldi	r23, 0x3D	; 61
     8a6:	80 e0       	ldi	r24, 0x00	; 0
     8a8:	90 e0       	ldi	r25, 0x00	; 0
     8aa:	0e 94 c8 13 	call	0x2790	; 0x2790 <__divmodsi4>
     8ae:	ca 01       	movw	r24, r20
     8b0:	b9 01       	movw	r22, r18
     8b2:	c1 2c       	mov	r12, r1
     8b4:	d1 2c       	mov	r13, r1
     8b6:	0f 2e       	mov	r0, r31
     8b8:	f8 e3       	ldi	r31, 0x38	; 56
     8ba:	ef 2e       	mov	r14, r31
     8bc:	f4 e0       	ldi	r31, 0x04	; 4
     8be:	ff 2e       	mov	r15, r31
     8c0:	f0 2d       	mov	r31, r0
     8c2:	8e 01       	movw	r16, r28
     8c4:	20 e0       	ldi	r18, 0x00	; 0
     8c6:	30 e0       	ldi	r19, 0x00	; 0
     8c8:	a9 01       	movw	r20, r18
     8ca:	0e 94 2a 10 	call	0x2054	; 0x2054 <async>
     8ce:	14 c0       	rjmp	.+40     	; 0x8f8 <outputPulse+0x88>
	}
	else if (self->frequency == 0){
     8d0:	89 2b       	or	r24, r25
     8d2:	91 f4       	brne	.+36     	; 0x8f8 <outputPulse+0x88>
		AFTER(((SEC(1)) /10), self, outputPulse, 0); //periodically checks if given pg should re-emit signals by checking if frequency is 0.
     8d4:	c1 2c       	mov	r12, r1
     8d6:	d1 2c       	mov	r13, r1
     8d8:	0f 2e       	mov	r0, r31
     8da:	f8 e3       	ldi	r31, 0x38	; 56
     8dc:	ef 2e       	mov	r14, r31
     8de:	f4 e0       	ldi	r31, 0x04	; 4
     8e0:	ff 2e       	mov	r15, r31
     8e2:	f0 2d       	mov	r31, r0
     8e4:	8e 01       	movw	r16, r28
     8e6:	20 e0       	ldi	r18, 0x00	; 0
     8e8:	30 e0       	ldi	r19, 0x00	; 0
     8ea:	a9 01       	movw	r20, r18
     8ec:	65 e3       	ldi	r22, 0x35	; 53
     8ee:	7c e0       	ldi	r23, 0x0C	; 12
     8f0:	80 e0       	ldi	r24, 0x00	; 0
     8f2:	90 e0       	ldi	r25, 0x00	; 0
     8f4:	0e 94 2a 10 	call	0x2054	; 0x2054 <async>
	}
	
	
}
     8f8:	df 91       	pop	r29
     8fa:	cf 91       	pop	r28
     8fc:	1f 91       	pop	r17
     8fe:	0f 91       	pop	r16
     900:	ff 90       	pop	r15
     902:	ef 90       	pop	r14
     904:	df 90       	pop	r13
     906:	cf 90       	pop	r12
     908:	08 95       	ret

0000090a <minusPulse>:
	self->frequency = self->frequency +1; 
	}
}

void  minusPulse(pulseGen *self){
	if (self->frequency > 0){
     90a:	fc 01       	movw	r30, r24
     90c:	26 81       	ldd	r18, Z+6	; 0x06
     90e:	37 81       	ldd	r19, Z+7	; 0x07
     910:	12 16       	cp	r1, r18
     912:	13 06       	cpc	r1, r19
     914:	24 f4       	brge	.+8      	; 0x91e <minusPulse+0x14>
		self->frequency = self->frequency -1;
     916:	21 50       	subi	r18, 0x01	; 1
     918:	31 09       	sbc	r19, r1
     91a:	37 83       	std	Z+7, r19	; 0x07
     91c:	26 83       	std	Z+6, r18	; 0x06
     91e:	08 95       	ret

00000920 <delayContPush>:
	}
}

void delayContPush(pulseGen *self){
     920:	cf 92       	push	r12
     922:	df 92       	push	r13
     924:	ef 92       	push	r14
     926:	ff 92       	push	r15
     928:	0f 93       	push	r16
     92a:	1f 93       	push	r17
     92c:	cf 93       	push	r28
     92e:	df 93       	push	r29
     930:	ec 01       	movw	r28, r24
		if (!(PINB & (1 << 6)))							//Plus
     932:	1e 99       	sbic	0x03, 6	; 3
     934:	86 c0       	rjmp	.+268    	; 0xa42 <delayContPush+0x122>
	{
		if(self->firstPushFlag == 0){
     936:	8e 85       	ldd	r24, Y+14	; 0x0e
     938:	9f 85       	ldd	r25, Y+15	; 0x0f
     93a:	00 97       	sbiw	r24, 0x00	; 0
     93c:	c9 f5       	brne	.+114    	; 0x9b0 <delayContPush+0x90>
			self->firstPushFlag =1;
     93e:	81 e0       	ldi	r24, 0x01	; 1
     940:	90 e0       	ldi	r25, 0x00	; 0
     942:	9f 87       	std	Y+15, r25	; 0x0f
     944:	8e 87       	std	Y+14, r24	; 0x0e
			ASYNC(self->observer, setFrequency, self->frequency);
     946:	0a 89       	ldd	r16, Y+18	; 0x12
     948:	1b 89       	ldd	r17, Y+19	; 0x13
     94a:	ce 80       	ldd	r12, Y+6	; 0x06
     94c:	df 80       	ldd	r13, Y+7	; 0x07
     94e:	0f 2e       	mov	r0, r31
     950:	f3 e1       	ldi	r31, 0x13	; 19
     952:	ef 2e       	mov	r14, r31
     954:	f3 e0       	ldi	r31, 0x03	; 3
     956:	ff 2e       	mov	r15, r31
     958:	f0 2d       	mov	r31, r0
     95a:	20 e0       	ldi	r18, 0x00	; 0
     95c:	30 e0       	ldi	r19, 0x00	; 0
     95e:	a9 01       	movw	r20, r18
     960:	60 e0       	ldi	r22, 0x00	; 0
     962:	70 e0       	ldi	r23, 0x00	; 0
     964:	cb 01       	movw	r24, r22
     966:	0e 94 2a 10 	call	0x2054	; 0x2054 <async>
			ASYNC(self->observer, updateGUI, 0);
     96a:	0a 89       	ldd	r16, Y+18	; 0x12
     96c:	1b 89       	ldd	r17, Y+19	; 0x13
     96e:	c1 2c       	mov	r12, r1
     970:	d1 2c       	mov	r13, r1
     972:	0f 2e       	mov	r0, r31
     974:	fd e1       	ldi	r31, 0x1D	; 29
     976:	ef 2e       	mov	r14, r31
     978:	f3 e0       	ldi	r31, 0x03	; 3
     97a:	ff 2e       	mov	r15, r31
     97c:	f0 2d       	mov	r31, r0
     97e:	20 e0       	ldi	r18, 0x00	; 0
     980:	30 e0       	ldi	r19, 0x00	; 0
     982:	a9 01       	movw	r20, r18
     984:	60 e0       	ldi	r22, 0x00	; 0
     986:	70 e0       	ldi	r23, 0x00	; 0
     988:	cb 01       	movw	r24, r22
     98a:	0e 94 2a 10 	call	0x2054	; 0x2054 <async>
			AFTER(((SEC(5)/3)), self,  delayContPush, 0);
     98e:	0f 2e       	mov	r0, r31
     990:	f0 e9       	ldi	r31, 0x90	; 144
     992:	ef 2e       	mov	r14, r31
     994:	f4 e0       	ldi	r31, 0x04	; 4
     996:	ff 2e       	mov	r15, r31
     998:	f0 2d       	mov	r31, r0
     99a:	8e 01       	movw	r16, r28
     99c:	20 e0       	ldi	r18, 0x00	; 0
     99e:	30 e0       	ldi	r19, 0x00	; 0
     9a0:	a9 01       	movw	r20, r18
     9a2:	63 e7       	ldi	r22, 0x73	; 115
     9a4:	7b ec       	ldi	r23, 0xCB	; 203
     9a6:	80 e0       	ldi	r24, 0x00	; 0
     9a8:	90 e0       	ldi	r25, 0x00	; 0
     9aa:	0e 94 2a 10 	call	0x2054	; 0x2054 <async>
     9ae:	ea c0       	rjmp	.+468    	; 0xb84 <delayContPush+0x264>
			
		
		}else if (self->firstPushFlag == 1){
     9b0:	01 97       	sbiw	r24, 0x01	; 1
     9b2:	09 f0       	breq	.+2      	; 0x9b6 <delayContPush+0x96>
     9b4:	e7 c0       	rjmp	.+462    	; 0xb84 <delayContPush+0x264>
		ASYNC(self, plusPulse, 0);
     9b6:	c1 2c       	mov	r12, r1
     9b8:	d1 2c       	mov	r13, r1
     9ba:	0f 2e       	mov	r0, r31
     9bc:	fd e2       	ldi	r31, 0x2D	; 45
     9be:	ef 2e       	mov	r14, r31
     9c0:	f4 e0       	ldi	r31, 0x04	; 4
     9c2:	ff 2e       	mov	r15, r31
     9c4:	f0 2d       	mov	r31, r0
     9c6:	8e 01       	movw	r16, r28
     9c8:	20 e0       	ldi	r18, 0x00	; 0
     9ca:	30 e0       	ldi	r19, 0x00	; 0
     9cc:	a9 01       	movw	r20, r18
     9ce:	60 e0       	ldi	r22, 0x00	; 0
     9d0:	70 e0       	ldi	r23, 0x00	; 0
     9d2:	cb 01       	movw	r24, r22
     9d4:	0e 94 2a 10 	call	0x2054	; 0x2054 <async>
		ASYNC(self->observer, setFrequency, self->frequency);
     9d8:	0a 89       	ldd	r16, Y+18	; 0x12
     9da:	1b 89       	ldd	r17, Y+19	; 0x13
     9dc:	ce 80       	ldd	r12, Y+6	; 0x06
     9de:	df 80       	ldd	r13, Y+7	; 0x07
     9e0:	0f 2e       	mov	r0, r31
     9e2:	f3 e1       	ldi	r31, 0x13	; 19
     9e4:	ef 2e       	mov	r14, r31
     9e6:	f3 e0       	ldi	r31, 0x03	; 3
     9e8:	ff 2e       	mov	r15, r31
     9ea:	f0 2d       	mov	r31, r0
     9ec:	20 e0       	ldi	r18, 0x00	; 0
     9ee:	30 e0       	ldi	r19, 0x00	; 0
     9f0:	a9 01       	movw	r20, r18
     9f2:	60 e0       	ldi	r22, 0x00	; 0
     9f4:	70 e0       	ldi	r23, 0x00	; 0
     9f6:	cb 01       	movw	r24, r22
     9f8:	0e 94 2a 10 	call	0x2054	; 0x2054 <async>
		ASYNC(self->observer, updateGUI, 0);
     9fc:	0a 89       	ldd	r16, Y+18	; 0x12
     9fe:	1b 89       	ldd	r17, Y+19	; 0x13
     a00:	c1 2c       	mov	r12, r1
     a02:	d1 2c       	mov	r13, r1
     a04:	0f 2e       	mov	r0, r31
     a06:	fd e1       	ldi	r31, 0x1D	; 29
     a08:	ef 2e       	mov	r14, r31
     a0a:	f3 e0       	ldi	r31, 0x03	; 3
     a0c:	ff 2e       	mov	r15, r31
     a0e:	f0 2d       	mov	r31, r0
     a10:	20 e0       	ldi	r18, 0x00	; 0
     a12:	30 e0       	ldi	r19, 0x00	; 0
     a14:	a9 01       	movw	r20, r18
     a16:	60 e0       	ldi	r22, 0x00	; 0
     a18:	70 e0       	ldi	r23, 0x00	; 0
     a1a:	cb 01       	movw	r24, r22
     a1c:	0e 94 2a 10 	call	0x2054	; 0x2054 <async>
		AFTER(((SEC(1))/2), self,  delayContPush, 0);
     a20:	0f 2e       	mov	r0, r31
     a22:	f0 e9       	ldi	r31, 0x90	; 144
     a24:	ef 2e       	mov	r14, r31
     a26:	f4 e0       	ldi	r31, 0x04	; 4
     a28:	ff 2e       	mov	r15, r31
     a2a:	f0 2d       	mov	r31, r0
     a2c:	8e 01       	movw	r16, r28
     a2e:	20 e0       	ldi	r18, 0x00	; 0
     a30:	30 e0       	ldi	r19, 0x00	; 0
     a32:	a9 01       	movw	r20, r18
     a34:	69 e0       	ldi	r22, 0x09	; 9
     a36:	7d e3       	ldi	r23, 0x3D	; 61
     a38:	80 e0       	ldi	r24, 0x00	; 0
     a3a:	90 e0       	ldi	r25, 0x00	; 0
     a3c:	0e 94 2a 10 	call	0x2054	; 0x2054 <async>
     a40:	a1 c0       	rjmp	.+322    	; 0xb84 <delayContPush+0x264>
		
		}
	}
	
	else if (!(PINB & (1 << 7)))
     a42:	1f 99       	sbic	0x03, 7	; 3
     a44:	9b c0       	rjmp	.+310    	; 0xb7c <delayContPush+0x25c>
	{
		if(self->firstPushFlag == 0){
     a46:	8e 85       	ldd	r24, Y+14	; 0x0e
     a48:	9f 85       	ldd	r25, Y+15	; 0x0f
     a4a:	00 97       	sbiw	r24, 0x00	; 0
     a4c:	c9 f5       	brne	.+114    	; 0xac0 <delayContPush+0x1a0>
			self->firstPushFlag =1;
     a4e:	81 e0       	ldi	r24, 0x01	; 1
     a50:	90 e0       	ldi	r25, 0x00	; 0
     a52:	9f 87       	std	Y+15, r25	; 0x0f
     a54:	8e 87       	std	Y+14, r24	; 0x0e
			ASYNC(self->observer, setFrequency, self->frequency);
     a56:	0a 89       	ldd	r16, Y+18	; 0x12
     a58:	1b 89       	ldd	r17, Y+19	; 0x13
     a5a:	ce 80       	ldd	r12, Y+6	; 0x06
     a5c:	df 80       	ldd	r13, Y+7	; 0x07
     a5e:	0f 2e       	mov	r0, r31
     a60:	f3 e1       	ldi	r31, 0x13	; 19
     a62:	ef 2e       	mov	r14, r31
     a64:	f3 e0       	ldi	r31, 0x03	; 3
     a66:	ff 2e       	mov	r15, r31
     a68:	f0 2d       	mov	r31, r0
     a6a:	20 e0       	ldi	r18, 0x00	; 0
     a6c:	30 e0       	ldi	r19, 0x00	; 0
     a6e:	a9 01       	movw	r20, r18
     a70:	60 e0       	ldi	r22, 0x00	; 0
     a72:	70 e0       	ldi	r23, 0x00	; 0
     a74:	cb 01       	movw	r24, r22
     a76:	0e 94 2a 10 	call	0x2054	; 0x2054 <async>
			ASYNC(self->observer, updateGUI, 0);
     a7a:	0a 89       	ldd	r16, Y+18	; 0x12
     a7c:	1b 89       	ldd	r17, Y+19	; 0x13
     a7e:	c1 2c       	mov	r12, r1
     a80:	d1 2c       	mov	r13, r1
     a82:	0f 2e       	mov	r0, r31
     a84:	fd e1       	ldi	r31, 0x1D	; 29
     a86:	ef 2e       	mov	r14, r31
     a88:	f3 e0       	ldi	r31, 0x03	; 3
     a8a:	ff 2e       	mov	r15, r31
     a8c:	f0 2d       	mov	r31, r0
     a8e:	20 e0       	ldi	r18, 0x00	; 0
     a90:	30 e0       	ldi	r19, 0x00	; 0
     a92:	a9 01       	movw	r20, r18
     a94:	60 e0       	ldi	r22, 0x00	; 0
     a96:	70 e0       	ldi	r23, 0x00	; 0
     a98:	cb 01       	movw	r24, r22
     a9a:	0e 94 2a 10 	call	0x2054	; 0x2054 <async>
			AFTER(((SEC(5)/3)), self,  delayContPush, 0);
     a9e:	0f 2e       	mov	r0, r31
     aa0:	f0 e9       	ldi	r31, 0x90	; 144
     aa2:	ef 2e       	mov	r14, r31
     aa4:	f4 e0       	ldi	r31, 0x04	; 4
     aa6:	ff 2e       	mov	r15, r31
     aa8:	f0 2d       	mov	r31, r0
     aaa:	8e 01       	movw	r16, r28
     aac:	20 e0       	ldi	r18, 0x00	; 0
     aae:	30 e0       	ldi	r19, 0x00	; 0
     ab0:	a9 01       	movw	r20, r18
     ab2:	63 e7       	ldi	r22, 0x73	; 115
     ab4:	7b ec       	ldi	r23, 0xCB	; 203
     ab6:	80 e0       	ldi	r24, 0x00	; 0
     ab8:	90 e0       	ldi	r25, 0x00	; 0
     aba:	0e 94 2a 10 	call	0x2054	; 0x2054 <async>
     abe:	39 c0       	rjmp	.+114    	; 0xb32 <delayContPush+0x212>
			
			
		}else if (self->firstPushFlag == 1){
     ac0:	01 97       	sbiw	r24, 0x01	; 1
     ac2:	b9 f5       	brne	.+110    	; 0xb32 <delayContPush+0x212>
		minusPulse(self);			//Minus	
     ac4:	ce 01       	movw	r24, r28
     ac6:	0e 94 85 04 	call	0x90a	; 0x90a <minusPulse>
		ASYNC(self->observer, setFrequency, self->frequency);
     aca:	0a 89       	ldd	r16, Y+18	; 0x12
     acc:	1b 89       	ldd	r17, Y+19	; 0x13
     ace:	ce 80       	ldd	r12, Y+6	; 0x06
     ad0:	df 80       	ldd	r13, Y+7	; 0x07
     ad2:	0f 2e       	mov	r0, r31
     ad4:	f3 e1       	ldi	r31, 0x13	; 19
     ad6:	ef 2e       	mov	r14, r31
     ad8:	f3 e0       	ldi	r31, 0x03	; 3
     ada:	ff 2e       	mov	r15, r31
     adc:	f0 2d       	mov	r31, r0
     ade:	20 e0       	ldi	r18, 0x00	; 0
     ae0:	30 e0       	ldi	r19, 0x00	; 0
     ae2:	a9 01       	movw	r20, r18
     ae4:	60 e0       	ldi	r22, 0x00	; 0
     ae6:	70 e0       	ldi	r23, 0x00	; 0
     ae8:	cb 01       	movw	r24, r22
     aea:	0e 94 2a 10 	call	0x2054	; 0x2054 <async>
		ASYNC(self->observer, updateGUI, 0);
     aee:	0a 89       	ldd	r16, Y+18	; 0x12
     af0:	1b 89       	ldd	r17, Y+19	; 0x13
     af2:	c1 2c       	mov	r12, r1
     af4:	d1 2c       	mov	r13, r1
     af6:	0f 2e       	mov	r0, r31
     af8:	fd e1       	ldi	r31, 0x1D	; 29
     afa:	ef 2e       	mov	r14, r31
     afc:	f3 e0       	ldi	r31, 0x03	; 3
     afe:	ff 2e       	mov	r15, r31
     b00:	f0 2d       	mov	r31, r0
     b02:	20 e0       	ldi	r18, 0x00	; 0
     b04:	30 e0       	ldi	r19, 0x00	; 0
     b06:	a9 01       	movw	r20, r18
     b08:	60 e0       	ldi	r22, 0x00	; 0
     b0a:	70 e0       	ldi	r23, 0x00	; 0
     b0c:	cb 01       	movw	r24, r22
     b0e:	0e 94 2a 10 	call	0x2054	; 0x2054 <async>
		AFTER(((SEC(1))/2), self,  delayContPush, 0);
     b12:	0f 2e       	mov	r0, r31
     b14:	f0 e9       	ldi	r31, 0x90	; 144
     b16:	ef 2e       	mov	r14, r31
     b18:	f4 e0       	ldi	r31, 0x04	; 4
     b1a:	ff 2e       	mov	r15, r31
     b1c:	f0 2d       	mov	r31, r0
     b1e:	8e 01       	movw	r16, r28
     b20:	20 e0       	ldi	r18, 0x00	; 0
     b22:	30 e0       	ldi	r19, 0x00	; 0
     b24:	a9 01       	movw	r20, r18
     b26:	69 e0       	ldi	r22, 0x09	; 9
     b28:	7d e3       	ldi	r23, 0x3D	; 61
     b2a:	80 e0       	ldi	r24, 0x00	; 0
     b2c:	90 e0       	ldi	r25, 0x00	; 0
     b2e:	0e 94 2a 10 	call	0x2054	; 0x2054 <async>
		}
	ASYNC(self->observer, setFrequency, self->frequency);
     b32:	0a 89       	ldd	r16, Y+18	; 0x12
     b34:	1b 89       	ldd	r17, Y+19	; 0x13
     b36:	ce 80       	ldd	r12, Y+6	; 0x06
     b38:	df 80       	ldd	r13, Y+7	; 0x07
     b3a:	0f 2e       	mov	r0, r31
     b3c:	f3 e1       	ldi	r31, 0x13	; 19
     b3e:	ef 2e       	mov	r14, r31
     b40:	f3 e0       	ldi	r31, 0x03	; 3
     b42:	ff 2e       	mov	r15, r31
     b44:	f0 2d       	mov	r31, r0
     b46:	20 e0       	ldi	r18, 0x00	; 0
     b48:	30 e0       	ldi	r19, 0x00	; 0
     b4a:	a9 01       	movw	r20, r18
     b4c:	60 e0       	ldi	r22, 0x00	; 0
     b4e:	70 e0       	ldi	r23, 0x00	; 0
     b50:	cb 01       	movw	r24, r22
     b52:	0e 94 2a 10 	call	0x2054	; 0x2054 <async>
	ASYNC(self->observer, updateGUI, 0);
     b56:	0a 89       	ldd	r16, Y+18	; 0x12
     b58:	1b 89       	ldd	r17, Y+19	; 0x13
     b5a:	c1 2c       	mov	r12, r1
     b5c:	d1 2c       	mov	r13, r1
     b5e:	0f 2e       	mov	r0, r31
     b60:	fd e1       	ldi	r31, 0x1D	; 29
     b62:	ef 2e       	mov	r14, r31
     b64:	f3 e0       	ldi	r31, 0x03	; 3
     b66:	ff 2e       	mov	r15, r31
     b68:	f0 2d       	mov	r31, r0
     b6a:	20 e0       	ldi	r18, 0x00	; 0
     b6c:	30 e0       	ldi	r19, 0x00	; 0
     b6e:	a9 01       	movw	r20, r18
     b70:	60 e0       	ldi	r22, 0x00	; 0
     b72:	70 e0       	ldi	r23, 0x00	; 0
     b74:	cb 01       	movw	r24, r22
     b76:	0e 94 2a 10 	call	0x2054	; 0x2054 <async>
     b7a:	04 c0       	rjmp	.+8      	; 0xb84 <delayContPush+0x264>
	}
	
	else{
		self->upDownPushFlag = 0;		//prevents several inputs entering if pressed rapidly
     b7c:	1d 86       	std	Y+13, r1	; 0x0d
     b7e:	1c 86       	std	Y+12, r1	; 0x0c
		self->firstPushFlag = 0;
     b80:	1f 86       	std	Y+15, r1	; 0x0f
     b82:	1e 86       	std	Y+14, r1	; 0x0e
	}
	
}
     b84:	df 91       	pop	r29
     b86:	cf 91       	pop	r28
     b88:	1f 91       	pop	r17
     b8a:	0f 91       	pop	r16
     b8c:	ff 90       	pop	r15
     b8e:	ef 90       	pop	r14
     b90:	df 90       	pop	r13
     b92:	cf 90       	pop	r12
     b94:	08 95       	ret

00000b96 <savePulse>:

void savePulse(pulseGen *self){
     b96:	fc 01       	movw	r30, r24
	self->saved = self->frequency;
     b98:	86 81       	ldd	r24, Z+6	; 0x06
     b9a:	97 81       	ldd	r25, Z+7	; 0x07
     b9c:	91 87       	std	Z+9, r25	; 0x09
     b9e:	80 87       	std	Z+8, r24	; 0x08
	self->frequency = 0;
     ba0:	17 82       	std	Z+7, r1	; 0x07
     ba2:	16 82       	std	Z+6, r1	; 0x06
     ba4:	08 95       	ret

00000ba6 <restorePulse>:
	
}
void restorePulse(pulseGen *self){
	self->frequency = self->saved;
     ba6:	fc 01       	movw	r30, r24
     ba8:	20 85       	ldd	r18, Z+8	; 0x08
     baa:	31 85       	ldd	r19, Z+9	; 0x09
     bac:	37 83       	std	Z+7, r19	; 0x07
     bae:	26 83       	std	Z+6, r18	; 0x06
     bb0:	08 95       	ret

00000bb2 <initialize>:
    Time now;
    DISABLE(status);
    TIMERGET(now);
    ENABLE(status);
    return now - (status ? current->msg->baseline : timestamp);
}
     bb2:	cf 93       	push	r28
     bb4:	df 93       	push	r29
     bb6:	00 d0       	rcall	.+0      	; 0xbb8 <initialize+0x6>
     bb8:	00 d0       	rcall	.+0      	; 0xbba <initialize+0x8>
     bba:	cd b7       	in	r28, 0x3d	; 61
     bbc:	de b7       	in	r29, 0x3e	; 62
     bbe:	80 e0       	ldi	r24, 0x00	; 0
     bc0:	90 e0       	ldi	r25, 0x00	; 0
     bc2:	18 c0       	rjmp	.+48     	; 0xbf4 <initialize+0x42>
     bc4:	ac 01       	movw	r20, r24
     bc6:	4f 5f       	subi	r20, 0xFF	; 255
     bc8:	5f 4f       	sbci	r21, 0xFF	; 255
     bca:	9a 01       	movw	r18, r20
     bcc:	22 95       	swap	r18
     bce:	32 95       	swap	r19
     bd0:	30 7f       	andi	r19, 0xF0	; 240
     bd2:	32 27       	eor	r19, r18
     bd4:	20 7f       	andi	r18, 0xF0	; 240
     bd6:	32 27       	eor	r19, r18
     bd8:	25 5a       	subi	r18, 0xA5	; 165
     bda:	3d 4f       	sbci	r19, 0xFD	; 253
     bdc:	82 95       	swap	r24
     bde:	92 95       	swap	r25
     be0:	90 7f       	andi	r25, 0xF0	; 240
     be2:	98 27       	eor	r25, r24
     be4:	80 7f       	andi	r24, 0xF0	; 240
     be6:	98 27       	eor	r25, r24
     be8:	fc 01       	movw	r30, r24
     bea:	e5 5a       	subi	r30, 0xA5	; 165
     bec:	fd 4f       	sbci	r31, 0xFD	; 253
     bee:	31 83       	std	Z+1, r19	; 0x01
     bf0:	20 83       	st	Z, r18
     bf2:	ca 01       	movw	r24, r20
     bf4:	8e 30       	cpi	r24, 0x0E	; 14
     bf6:	91 05       	cpc	r25, r1
     bf8:	2c f3       	brlt	.-54     	; 0xbc4 <initialize+0x12>
     bfa:	10 92 3c 03 	sts	0x033C, r1	; 0x80033c <messages+0xe1>
     bfe:	10 92 3b 03 	sts	0x033B, r1	; 0x80033b <messages+0xe0>
     c02:	80 e0       	ldi	r24, 0x00	; 0
     c04:	90 e0       	ldi	r25, 0x00	; 0
     c06:	15 c0       	rjmp	.+42     	; 0xc32 <initialize+0x80>
     c08:	ac 01       	movw	r20, r24
     c0a:	4f 5f       	subi	r20, 0xFF	; 255
     c0c:	5f 4f       	sbci	r21, 0xFF	; 255
     c0e:	6d e1       	ldi	r22, 0x1D	; 29
     c10:	64 9f       	mul	r22, r20
     c12:	90 01       	movw	r18, r0
     c14:	65 9f       	mul	r22, r21
     c16:	30 0d       	add	r19, r0
     c18:	11 24       	eor	r1, r1
     c1a:	2a 55       	subi	r18, 0x5A	; 90
     c1c:	3e 4f       	sbci	r19, 0xFE	; 254
     c1e:	68 9f       	mul	r22, r24
     c20:	f0 01       	movw	r30, r0
     c22:	69 9f       	mul	r22, r25
     c24:	f0 0d       	add	r31, r0
     c26:	11 24       	eor	r1, r1
     c28:	ea 55       	subi	r30, 0x5A	; 90
     c2a:	fe 4f       	sbci	r31, 0xFE	; 254
     c2c:	31 83       	std	Z+1, r19	; 0x01
     c2e:	20 83       	st	Z, r18
     c30:	ca 01       	movw	r24, r20
     c32:	83 30       	cpi	r24, 0x03	; 3
     c34:	91 05       	cpc	r25, r1
     c36:	44 f3       	brlt	.-48     	; 0xc08 <initialize+0x56>
     c38:	10 92 fe 01 	sts	0x01FE, r1	; 0x8001fe <threads+0x58>
     c3c:	10 92 fd 01 	sts	0x01FD, r1	; 0x8001fd <threads+0x57>
     c40:	1a 82       	std	Y+2, r1	; 0x02
     c42:	19 82       	std	Y+1, r1	; 0x01
     c44:	32 c0       	rjmp	.+100    	; 0xcaa <initialize+0xf8>
     c46:	2d e1       	ldi	r18, 0x1D	; 29
     c48:	49 81       	ldd	r20, Y+1	; 0x01
     c4a:	5a 81       	ldd	r21, Y+2	; 0x02
     c4c:	24 9f       	mul	r18, r20
     c4e:	c0 01       	movw	r24, r0
     c50:	25 9f       	mul	r18, r21
     c52:	90 0d       	add	r25, r0
     c54:	11 24       	eor	r1, r1
     c56:	fc 01       	movw	r30, r24
     c58:	e4 55       	subi	r30, 0x54	; 84
     c5a:	fe 4f       	sbci	r31, 0xFE	; 254
     c5c:	fc 83       	std	Y+4, r31	; 0x04
     c5e:	eb 83       	std	Y+3, r30	; 0x03
     c60:	cf 01       	movw	r24, r30
     c62:	0e 94 09 14 	call	0x2812	; 0x2812 <setjmp>
     c66:	20 e6       	ldi	r18, 0x60	; 96
     c68:	49 81       	ldd	r20, Y+1	; 0x01
     c6a:	5a 81       	ldd	r21, Y+2	; 0x02
     c6c:	24 9f       	mul	r18, r20
     c6e:	c0 01       	movw	r24, r0
     c70:	25 9f       	mul	r18, r21
     c72:	90 0d       	add	r25, r0
     c74:	11 24       	eor	r1, r1
     c76:	89 55       	subi	r24, 0x59	; 89
     c78:	9c 4f       	sbci	r25, 0xFC	; 252
     c7a:	eb 81       	ldd	r30, Y+3	; 0x03
     c7c:	fc 81       	ldd	r31, Y+4	; 0x04
     c7e:	91 8b       	std	Z+17, r25	; 0x11
     c80:	80 8b       	std	Z+16, r24	; 0x10
     c82:	93 8b       	std	Z+19, r25	; 0x13
     c84:	82 8b       	std	Z+18, r24	; 0x12
     c86:	85 eb       	ldi	r24, 0xB5	; 181
     c88:	91 e1       	ldi	r25, 0x11	; 17
     c8a:	96 8b       	std	Z+22, r25	; 0x16
     c8c:	85 8b       	std	Z+21, r24	; 0x15
     c8e:	8d e1       	ldi	r24, 0x1D	; 29
     c90:	84 9f       	mul	r24, r20
     c92:	f0 01       	movw	r30, r0
     c94:	85 9f       	mul	r24, r21
     c96:	f0 0d       	add	r31, r0
     c98:	11 24       	eor	r1, r1
     c9a:	ea 55       	subi	r30, 0x5A	; 90
     c9c:	fe 4f       	sbci	r31, 0xFE	; 254
     c9e:	15 82       	std	Z+5, r1	; 0x05
     ca0:	14 82       	std	Z+4, r1	; 0x04
     ca2:	4f 5f       	subi	r20, 0xFF	; 255
     ca4:	5f 4f       	sbci	r21, 0xFF	; 255
     ca6:	5a 83       	std	Y+2, r21	; 0x02
     ca8:	49 83       	std	Y+1, r20	; 0x01
     caa:	29 81       	ldd	r18, Y+1	; 0x01
     cac:	3a 81       	ldd	r19, Y+2	; 0x02
     cae:	24 30       	cpi	r18, 0x04	; 4
     cb0:	31 05       	cpc	r19, r1
     cb2:	4c f2       	brlt	.-110    	; 0xc46 <initialize+0x94>
     cb4:	ee e3       	ldi	r30, 0x3E	; 62
     cb6:	f2 e0       	ldi	r31, 0x02	; 2
     cb8:	11 82       	std	Z+1, r1	; 0x01
     cba:	10 82       	st	Z, r1
     cbc:	15 82       	std	Z+5, r1	; 0x05
     cbe:	14 82       	std	Z+4, r1	; 0x04
     cc0:	13 82       	std	Z+3, r1	; 0x03
     cc2:	12 82       	std	Z+2, r1	; 0x02
     cc4:	e1 e6       	ldi	r30, 0x61	; 97
     cc6:	f0 e0       	ldi	r31, 0x00	; 0
     cc8:	80 e8       	ldi	r24, 0x80	; 128
     cca:	80 83       	st	Z, r24
     ccc:	10 82       	st	Z, r1
     cce:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     cd2:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     cd6:	84 e0       	ldi	r24, 0x04	; 4
     cd8:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7fc081>
     cdc:	81 e0       	ldi	r24, 0x01	; 1
     cde:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
     ce2:	0f 90       	pop	r0
     ce4:	0f 90       	pop	r0
     ce6:	0f 90       	pop	r0
     ce8:	0f 90       	pop	r0
     cea:	df 91       	pop	r29
     cec:	cf 91       	pop	r28
     cee:	08 95       	ret

00000cf0 <dispatch>:
     cf0:	cf 93       	push	r28
     cf2:	df 93       	push	r29
     cf4:	00 d0       	rcall	.+0      	; 0xcf6 <dispatch+0x6>
     cf6:	cd b7       	in	r28, 0x3d	; 61
     cf8:	de b7       	in	r29, 0x3e	; 62
     cfa:	9a 83       	std	Y+2, r25	; 0x02
     cfc:	89 83       	std	Y+1, r24	; 0x01
     cfe:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <current>
     d02:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <current+0x1>
     d06:	06 96       	adiw	r24, 0x06	; 6
     d08:	0e 94 09 14 	call	0x2812	; 0x2812 <setjmp>
     d0c:	89 2b       	or	r24, r25
     d0e:	59 f4       	brne	.+22     	; 0xd26 <dispatch+0x36>
     d10:	89 81       	ldd	r24, Y+1	; 0x01
     d12:	9a 81       	ldd	r25, Y+2	; 0x02
     d14:	90 93 71 01 	sts	0x0171, r25	; 0x800171 <current+0x1>
     d18:	80 93 70 01 	sts	0x0170, r24	; 0x800170 <current>
     d1c:	61 e0       	ldi	r22, 0x01	; 1
     d1e:	70 e0       	ldi	r23, 0x00	; 0
     d20:	06 96       	adiw	r24, 0x06	; 6
     d22:	0e 94 29 14 	call	0x2852	; 0x2852 <longjmp>
     d26:	0f 90       	pop	r0
     d28:	0f 90       	pop	r0
     d2a:	df 91       	pop	r29
     d2c:	cf 91       	pop	r28
     d2e:	08 95       	ret

00000d30 <enqueueByDeadline>:
     d30:	0f 93       	push	r16
     d32:	1f 93       	push	r17
     d34:	cf 93       	push	r28
     d36:	df 93       	push	r29
     d38:	dc 01       	movw	r26, r24
     d3a:	cb 01       	movw	r24, r22
     d3c:	eb 01       	movw	r28, r22
     d3e:	e8 81       	ld	r30, Y
     d40:	f9 81       	ldd	r31, Y+1	; 0x01
     d42:	c0 e0       	ldi	r28, 0x00	; 0
     d44:	d0 e0       	ldi	r29, 0x00	; 0
     d46:	04 c0       	rjmp	.+8      	; 0xd50 <enqueueByDeadline+0x20>
     d48:	ef 01       	movw	r28, r30
     d4a:	01 90       	ld	r0, Z+
     d4c:	f0 81       	ld	r31, Z
     d4e:	e0 2d       	mov	r30, r0
     d50:	30 97       	sbiw	r30, 0x00	; 0
     d52:	79 f0       	breq	.+30     	; 0xd72 <enqueueByDeadline+0x42>
     d54:	06 81       	ldd	r16, Z+6	; 0x06
     d56:	17 81       	ldd	r17, Z+7	; 0x07
     d58:	20 85       	ldd	r18, Z+8	; 0x08
     d5a:	31 85       	ldd	r19, Z+9	; 0x09
     d5c:	16 96       	adiw	r26, 0x06	; 6
     d5e:	4d 91       	ld	r20, X+
     d60:	5d 91       	ld	r21, X+
     d62:	6d 91       	ld	r22, X+
     d64:	7c 91       	ld	r23, X
     d66:	19 97       	sbiw	r26, 0x09	; 9
     d68:	40 17       	cp	r20, r16
     d6a:	51 07       	cpc	r21, r17
     d6c:	62 07       	cpc	r22, r18
     d6e:	73 07       	cpc	r23, r19
     d70:	5c f7       	brge	.-42     	; 0xd48 <enqueueByDeadline+0x18>
     d72:	11 96       	adiw	r26, 0x01	; 1
     d74:	fc 93       	st	X, r31
     d76:	ee 93       	st	-X, r30
     d78:	20 97       	sbiw	r28, 0x00	; 0
     d7a:	21 f4       	brne	.+8      	; 0xd84 <enqueueByDeadline+0x54>
     d7c:	fc 01       	movw	r30, r24
     d7e:	b1 83       	std	Z+1, r27	; 0x01
     d80:	a0 83       	st	Z, r26
     d82:	02 c0       	rjmp	.+4      	; 0xd88 <enqueueByDeadline+0x58>
     d84:	b9 83       	std	Y+1, r27	; 0x01
     d86:	a8 83       	st	Y, r26
     d88:	df 91       	pop	r29
     d8a:	cf 91       	pop	r28
     d8c:	1f 91       	pop	r17
     d8e:	0f 91       	pop	r16
     d90:	08 95       	ret

00000d92 <enqueueByBaseline>:
     d92:	0f 93       	push	r16
     d94:	1f 93       	push	r17
     d96:	cf 93       	push	r28
     d98:	df 93       	push	r29
     d9a:	dc 01       	movw	r26, r24
     d9c:	cb 01       	movw	r24, r22
     d9e:	eb 01       	movw	r28, r22
     da0:	e8 81       	ld	r30, Y
     da2:	f9 81       	ldd	r31, Y+1	; 0x01
     da4:	c0 e0       	ldi	r28, 0x00	; 0
     da6:	d0 e0       	ldi	r29, 0x00	; 0
     da8:	04 c0       	rjmp	.+8      	; 0xdb2 <enqueueByBaseline+0x20>
     daa:	ef 01       	movw	r28, r30
     dac:	01 90       	ld	r0, Z+
     dae:	f0 81       	ld	r31, Z
     db0:	e0 2d       	mov	r30, r0
     db2:	30 97       	sbiw	r30, 0x00	; 0
     db4:	79 f0       	breq	.+30     	; 0xdd4 <enqueueByBaseline+0x42>
     db6:	02 81       	ldd	r16, Z+2	; 0x02
     db8:	13 81       	ldd	r17, Z+3	; 0x03
     dba:	24 81       	ldd	r18, Z+4	; 0x04
     dbc:	35 81       	ldd	r19, Z+5	; 0x05
     dbe:	12 96       	adiw	r26, 0x02	; 2
     dc0:	4d 91       	ld	r20, X+
     dc2:	5d 91       	ld	r21, X+
     dc4:	6d 91       	ld	r22, X+
     dc6:	7c 91       	ld	r23, X
     dc8:	15 97       	sbiw	r26, 0x05	; 5
     dca:	40 17       	cp	r20, r16
     dcc:	51 07       	cpc	r21, r17
     dce:	62 07       	cpc	r22, r18
     dd0:	73 07       	cpc	r23, r19
     dd2:	5c f7       	brge	.-42     	; 0xdaa <enqueueByBaseline+0x18>
     dd4:	11 96       	adiw	r26, 0x01	; 1
     dd6:	fc 93       	st	X, r31
     dd8:	ee 93       	st	-X, r30
     dda:	20 97       	sbiw	r28, 0x00	; 0
     ddc:	21 f4       	brne	.+8      	; 0xde6 <enqueueByBaseline+0x54>
     dde:	fc 01       	movw	r30, r24
     de0:	b1 83       	std	Z+1, r27	; 0x01
     de2:	a0 83       	st	Z, r26
     de4:	02 c0       	rjmp	.+4      	; 0xdea <enqueueByBaseline+0x58>
     de6:	b9 83       	std	Y+1, r27	; 0x01
     de8:	a8 83       	st	Y, r26
     dea:	df 91       	pop	r29
     dec:	cf 91       	pop	r28
     dee:	1f 91       	pop	r17
     df0:	0f 91       	pop	r16
     df2:	08 95       	ret

00000df4 <dequeue>:
     df4:	dc 01       	movw	r26, r24
     df6:	ed 91       	ld	r30, X+
     df8:	fc 91       	ld	r31, X
     dfa:	11 97       	sbiw	r26, 0x01	; 1
     dfc:	30 97       	sbiw	r30, 0x00	; 0
     dfe:	59 f4       	brne	.+22     	; 0xe16 <dequeue+0x22>
     e00:	8f ef       	ldi	r24, 0xFF	; 255
     e02:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
     e06:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
     e0a:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
     e0e:	81 e0       	ldi	r24, 0x01	; 1
     e10:	83 bf       	out	0x33, r24	; 51
     e12:	88 95       	sleep
     e14:	fc cf       	rjmp	.-8      	; 0xe0e <dequeue+0x1a>
     e16:	20 81       	ld	r18, Z
     e18:	31 81       	ldd	r19, Z+1	; 0x01
     e1a:	2d 93       	st	X+, r18
     e1c:	3c 93       	st	X, r19
     e1e:	cf 01       	movw	r24, r30
     e20:	08 95       	ret

00000e22 <insert>:
     e22:	fb 01       	movw	r30, r22
     e24:	20 81       	ld	r18, Z
     e26:	31 81       	ldd	r19, Z+1	; 0x01
     e28:	fc 01       	movw	r30, r24
     e2a:	31 83       	std	Z+1, r19	; 0x01
     e2c:	20 83       	st	Z, r18
     e2e:	fb 01       	movw	r30, r22
     e30:	91 83       	std	Z+1, r25	; 0x01
     e32:	80 83       	st	Z, r24
     e34:	08 95       	ret

00000e36 <push>:
     e36:	fb 01       	movw	r30, r22
     e38:	20 81       	ld	r18, Z
     e3a:	31 81       	ldd	r19, Z+1	; 0x01
     e3c:	fc 01       	movw	r30, r24
     e3e:	31 83       	std	Z+1, r19	; 0x01
     e40:	20 83       	st	Z, r18
     e42:	fb 01       	movw	r30, r22
     e44:	91 83       	std	Z+1, r25	; 0x01
     e46:	80 83       	st	Z, r24
     e48:	08 95       	ret

00000e4a <pop>:
     e4a:	dc 01       	movw	r26, r24
     e4c:	ed 91       	ld	r30, X+
     e4e:	fc 91       	ld	r31, X
     e50:	11 97       	sbiw	r26, 0x01	; 1
     e52:	20 81       	ld	r18, Z
     e54:	31 81       	ldd	r19, Z+1	; 0x01
     e56:	2d 93       	st	X+, r18
     e58:	3c 93       	st	X, r19
     e5a:	cf 01       	movw	r24, r30
     e5c:	08 95       	ret

00000e5e <schedule>:
     e5e:	cf 93       	push	r28
     e60:	df 93       	push	r29
     e62:	e0 91 72 01 	lds	r30, 0x0172	; 0x800172 <activeStack>
     e66:	f0 91 73 01 	lds	r31, 0x0173	; 0x800173 <activeStack+0x1>
     e6a:	c2 81       	ldd	r28, Z+2	; 0x02
     e6c:	d3 81       	ldd	r29, Z+3	; 0x03
     e6e:	e0 91 80 01 	lds	r30, 0x0180	; 0x800180 <msgQ>
     e72:	f0 91 81 01 	lds	r31, 0x0181	; 0x800181 <msgQ+0x1>
     e76:	30 97       	sbiw	r30, 0x00	; 0
     e78:	19 f1       	breq	.+70     	; 0xec0 <schedule+0x62>
     e7a:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <threadPool>
     e7e:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <threadPool+0x1>
     e82:	89 2b       	or	r24, r25
     e84:	e9 f0       	breq	.+58     	; 0xec0 <schedule+0x62>
     e86:	20 97       	sbiw	r28, 0x00	; 0
     e88:	69 f0       	breq	.+26     	; 0xea4 <schedule+0x46>
     e8a:	86 81       	ldd	r24, Z+6	; 0x06
     e8c:	97 81       	ldd	r25, Z+7	; 0x07
     e8e:	a0 85       	ldd	r26, Z+8	; 0x08
     e90:	b1 85       	ldd	r27, Z+9	; 0x09
     e92:	4e 81       	ldd	r20, Y+6	; 0x06
     e94:	5f 81       	ldd	r21, Y+7	; 0x07
     e96:	68 85       	ldd	r22, Y+8	; 0x08
     e98:	79 85       	ldd	r23, Y+9	; 0x09
     e9a:	84 1b       	sub	r24, r20
     e9c:	95 0b       	sbc	r25, r21
     e9e:	a6 0b       	sbc	r26, r22
     ea0:	b7 0b       	sbc	r27, r23
     ea2:	72 f4       	brpl	.+28     	; 0xec0 <schedule+0x62>
     ea4:	84 e7       	ldi	r24, 0x74	; 116
     ea6:	91 e0       	ldi	r25, 0x01	; 1
     ea8:	0e 94 25 07 	call	0xe4a	; 0xe4a <pop>
     eac:	62 e7       	ldi	r22, 0x72	; 114
     eae:	71 e0       	ldi	r23, 0x01	; 1
     eb0:	0e 94 1b 07 	call	0xe36	; 0xe36 <push>
     eb4:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <activeStack>
     eb8:	90 91 73 01 	lds	r25, 0x0173	; 0x800173 <activeStack+0x1>
     ebc:	0e 94 78 06 	call	0xcf0	; 0xcf0 <dispatch>
     ec0:	df 91       	pop	r29
     ec2:	cf 91       	pop	r28
     ec4:	08 95       	ret

00000ec6 <__vector_1>:
     ec6:	1f 92       	push	r1
     ec8:	0f 92       	push	r0
     eca:	0f b6       	in	r0, 0x3f	; 63
     ecc:	0f 92       	push	r0
     ece:	11 24       	eor	r1, r1
     ed0:	0f 93       	push	r16
     ed2:	1f 93       	push	r17
     ed4:	2f 93       	push	r18
     ed6:	3f 93       	push	r19
     ed8:	4f 93       	push	r20
     eda:	5f 93       	push	r21
     edc:	6f 93       	push	r22
     ede:	7f 93       	push	r23
     ee0:	8f 93       	push	r24
     ee2:	9f 93       	push	r25
     ee4:	af 93       	push	r26
     ee6:	bf 93       	push	r27
     ee8:	ef 93       	push	r30
     eea:	ff 93       	push	r31
     eec:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
     ef0:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <__data_end+0x1>
     ef4:	ac 01       	movw	r20, r24
     ef6:	09 2e       	mov	r0, r25
     ef8:	00 0c       	add	r0, r0
     efa:	66 0b       	sbc	r22, r22
     efc:	77 0b       	sbc	r23, r23
     efe:	9a 01       	movw	r18, r20
     f00:	11 27       	eor	r17, r17
     f02:	00 27       	eor	r16, r16
     f04:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f08:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f0c:	60 e0       	ldi	r22, 0x00	; 0
     f0e:	70 e0       	ldi	r23, 0x00	; 0
     f10:	40 2b       	or	r20, r16
     f12:	51 2b       	or	r21, r17
     f14:	62 2b       	or	r22, r18
     f16:	73 2b       	or	r23, r19
     f18:	40 93 7a 01 	sts	0x017A, r20	; 0x80017a <timestamp>
     f1c:	50 93 7b 01 	sts	0x017B, r21	; 0x80017b <timestamp+0x1>
     f20:	60 93 7c 01 	sts	0x017C, r22	; 0x80017c <timestamp+0x2>
     f24:	70 93 7d 01 	sts	0x017D, r23	; 0x80017d <timestamp+0x3>
     f28:	b0 9b       	sbis	0x16, 0	; 22
     f2a:	1a c0       	rjmp	.+52     	; 0xf60 <__vector_1+0x9a>
     f2c:	01 96       	adiw	r24, 0x01	; 1
     f2e:	09 2e       	mov	r0, r25
     f30:	00 0c       	add	r0, r0
     f32:	aa 0b       	sbc	r26, r26
     f34:	bb 0b       	sbc	r27, r27
     f36:	bc 01       	movw	r22, r24
     f38:	55 27       	eor	r21, r21
     f3a:	44 27       	eor	r20, r20
     f3c:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f40:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f44:	a0 e0       	ldi	r26, 0x00	; 0
     f46:	b0 e0       	ldi	r27, 0x00	; 0
     f48:	84 2b       	or	r24, r20
     f4a:	95 2b       	or	r25, r21
     f4c:	a6 2b       	or	r26, r22
     f4e:	b7 2b       	or	r27, r23
     f50:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
     f54:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
     f58:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
     f5c:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
     f60:	e0 91 1a 02 	lds	r30, 0x021A	; 0x80021a <mtable>
     f64:	f0 91 1b 02 	lds	r31, 0x021B	; 0x80021b <mtable+0x1>
     f68:	30 97       	sbiw	r30, 0x00	; 0
     f6a:	39 f0       	breq	.+14     	; 0xf7a <__vector_1+0xb4>
     f6c:	60 e0       	ldi	r22, 0x00	; 0
     f6e:	70 e0       	ldi	r23, 0x00	; 0
     f70:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <otable>
     f74:	90 91 83 01 	lds	r25, 0x0183	; 0x800183 <otable+0x1>
     f78:	09 95       	icall
     f7a:	0e 94 2f 07 	call	0xe5e	; 0xe5e <schedule>
     f7e:	ff 91       	pop	r31
     f80:	ef 91       	pop	r30
     f82:	bf 91       	pop	r27
     f84:	af 91       	pop	r26
     f86:	9f 91       	pop	r25
     f88:	8f 91       	pop	r24
     f8a:	7f 91       	pop	r23
     f8c:	6f 91       	pop	r22
     f8e:	5f 91       	pop	r21
     f90:	4f 91       	pop	r20
     f92:	3f 91       	pop	r19
     f94:	2f 91       	pop	r18
     f96:	1f 91       	pop	r17
     f98:	0f 91       	pop	r16
     f9a:	0f 90       	pop	r0
     f9c:	0f be       	out	0x3f, r0	; 63
     f9e:	0f 90       	pop	r0
     fa0:	1f 90       	pop	r1
     fa2:	18 95       	reti

00000fa4 <__vector_2>:
     fa4:	1f 92       	push	r1
     fa6:	0f 92       	push	r0
     fa8:	0f b6       	in	r0, 0x3f	; 63
     faa:	0f 92       	push	r0
     fac:	11 24       	eor	r1, r1
     fae:	0f 93       	push	r16
     fb0:	1f 93       	push	r17
     fb2:	2f 93       	push	r18
     fb4:	3f 93       	push	r19
     fb6:	4f 93       	push	r20
     fb8:	5f 93       	push	r21
     fba:	6f 93       	push	r22
     fbc:	7f 93       	push	r23
     fbe:	8f 93       	push	r24
     fc0:	9f 93       	push	r25
     fc2:	af 93       	push	r26
     fc4:	bf 93       	push	r27
     fc6:	ef 93       	push	r30
     fc8:	ff 93       	push	r31
     fca:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
     fce:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <__data_end+0x1>
     fd2:	ac 01       	movw	r20, r24
     fd4:	09 2e       	mov	r0, r25
     fd6:	00 0c       	add	r0, r0
     fd8:	66 0b       	sbc	r22, r22
     fda:	77 0b       	sbc	r23, r23
     fdc:	9a 01       	movw	r18, r20
     fde:	11 27       	eor	r17, r17
     fe0:	00 27       	eor	r16, r16
     fe2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     fe6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     fea:	60 e0       	ldi	r22, 0x00	; 0
     fec:	70 e0       	ldi	r23, 0x00	; 0
     fee:	40 2b       	or	r20, r16
     ff0:	51 2b       	or	r21, r17
     ff2:	62 2b       	or	r22, r18
     ff4:	73 2b       	or	r23, r19
     ff6:	40 93 7a 01 	sts	0x017A, r20	; 0x80017a <timestamp>
     ffa:	50 93 7b 01 	sts	0x017B, r21	; 0x80017b <timestamp+0x1>
     ffe:	60 93 7c 01 	sts	0x017C, r22	; 0x80017c <timestamp+0x2>
    1002:	70 93 7d 01 	sts	0x017D, r23	; 0x80017d <timestamp+0x3>
    1006:	b0 9b       	sbis	0x16, 0	; 22
    1008:	1a c0       	rjmp	.+52     	; 0x103e <__vector_2+0x9a>
    100a:	01 96       	adiw	r24, 0x01	; 1
    100c:	09 2e       	mov	r0, r25
    100e:	00 0c       	add	r0, r0
    1010:	aa 0b       	sbc	r26, r26
    1012:	bb 0b       	sbc	r27, r27
    1014:	bc 01       	movw	r22, r24
    1016:	55 27       	eor	r21, r21
    1018:	44 27       	eor	r20, r20
    101a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    101e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1022:	a0 e0       	ldi	r26, 0x00	; 0
    1024:	b0 e0       	ldi	r27, 0x00	; 0
    1026:	84 2b       	or	r24, r20
    1028:	95 2b       	or	r25, r21
    102a:	a6 2b       	or	r26, r22
    102c:	b7 2b       	or	r27, r23
    102e:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    1032:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    1036:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    103a:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    103e:	e0 91 1c 02 	lds	r30, 0x021C	; 0x80021c <mtable+0x2>
    1042:	f0 91 1d 02 	lds	r31, 0x021D	; 0x80021d <mtable+0x3>
    1046:	30 97       	sbiw	r30, 0x00	; 0
    1048:	39 f0       	breq	.+14     	; 0x1058 <__vector_2+0xb4>
    104a:	61 e0       	ldi	r22, 0x01	; 1
    104c:	70 e0       	ldi	r23, 0x00	; 0
    104e:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <otable+0x2>
    1052:	90 91 85 01 	lds	r25, 0x0185	; 0x800185 <otable+0x3>
    1056:	09 95       	icall
    1058:	0e 94 2f 07 	call	0xe5e	; 0xe5e <schedule>
    105c:	ff 91       	pop	r31
    105e:	ef 91       	pop	r30
    1060:	bf 91       	pop	r27
    1062:	af 91       	pop	r26
    1064:	9f 91       	pop	r25
    1066:	8f 91       	pop	r24
    1068:	7f 91       	pop	r23
    106a:	6f 91       	pop	r22
    106c:	5f 91       	pop	r21
    106e:	4f 91       	pop	r20
    1070:	3f 91       	pop	r19
    1072:	2f 91       	pop	r18
    1074:	1f 91       	pop	r17
    1076:	0f 91       	pop	r16
    1078:	0f 90       	pop	r0
    107a:	0f be       	out	0x3f, r0	; 63
    107c:	0f 90       	pop	r0
    107e:	1f 90       	pop	r1
    1080:	18 95       	reti

00001082 <__vector_3>:
    1082:	1f 92       	push	r1
    1084:	0f 92       	push	r0
    1086:	0f b6       	in	r0, 0x3f	; 63
    1088:	0f 92       	push	r0
    108a:	11 24       	eor	r1, r1
    108c:	0f 93       	push	r16
    108e:	1f 93       	push	r17
    1090:	2f 93       	push	r18
    1092:	3f 93       	push	r19
    1094:	4f 93       	push	r20
    1096:	5f 93       	push	r21
    1098:	6f 93       	push	r22
    109a:	7f 93       	push	r23
    109c:	8f 93       	push	r24
    109e:	9f 93       	push	r25
    10a0:	af 93       	push	r26
    10a2:	bf 93       	push	r27
    10a4:	ef 93       	push	r30
    10a6:	ff 93       	push	r31
    10a8:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
    10ac:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <__data_end+0x1>
    10b0:	ac 01       	movw	r20, r24
    10b2:	09 2e       	mov	r0, r25
    10b4:	00 0c       	add	r0, r0
    10b6:	66 0b       	sbc	r22, r22
    10b8:	77 0b       	sbc	r23, r23
    10ba:	9a 01       	movw	r18, r20
    10bc:	11 27       	eor	r17, r17
    10be:	00 27       	eor	r16, r16
    10c0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    10c4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    10c8:	60 e0       	ldi	r22, 0x00	; 0
    10ca:	70 e0       	ldi	r23, 0x00	; 0
    10cc:	40 2b       	or	r20, r16
    10ce:	51 2b       	or	r21, r17
    10d0:	62 2b       	or	r22, r18
    10d2:	73 2b       	or	r23, r19
    10d4:	40 93 7a 01 	sts	0x017A, r20	; 0x80017a <timestamp>
    10d8:	50 93 7b 01 	sts	0x017B, r21	; 0x80017b <timestamp+0x1>
    10dc:	60 93 7c 01 	sts	0x017C, r22	; 0x80017c <timestamp+0x2>
    10e0:	70 93 7d 01 	sts	0x017D, r23	; 0x80017d <timestamp+0x3>
    10e4:	b0 9b       	sbis	0x16, 0	; 22
    10e6:	1a c0       	rjmp	.+52     	; 0x111c <__vector_3+0x9a>
    10e8:	01 96       	adiw	r24, 0x01	; 1
    10ea:	09 2e       	mov	r0, r25
    10ec:	00 0c       	add	r0, r0
    10ee:	aa 0b       	sbc	r26, r26
    10f0:	bb 0b       	sbc	r27, r27
    10f2:	bc 01       	movw	r22, r24
    10f4:	55 27       	eor	r21, r21
    10f6:	44 27       	eor	r20, r20
    10f8:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    10fc:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1100:	a0 e0       	ldi	r26, 0x00	; 0
    1102:	b0 e0       	ldi	r27, 0x00	; 0
    1104:	84 2b       	or	r24, r20
    1106:	95 2b       	or	r25, r21
    1108:	a6 2b       	or	r26, r22
    110a:	b7 2b       	or	r27, r23
    110c:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    1110:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    1114:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    1118:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    111c:	e0 91 1e 02 	lds	r30, 0x021E	; 0x80021e <mtable+0x4>
    1120:	f0 91 1f 02 	lds	r31, 0x021F	; 0x80021f <mtable+0x5>
    1124:	30 97       	sbiw	r30, 0x00	; 0
    1126:	39 f0       	breq	.+14     	; 0x1136 <__vector_3+0xb4>
    1128:	62 e0       	ldi	r22, 0x02	; 2
    112a:	70 e0       	ldi	r23, 0x00	; 0
    112c:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <otable+0x4>
    1130:	90 91 87 01 	lds	r25, 0x0187	; 0x800187 <otable+0x5>
    1134:	09 95       	icall
    1136:	0e 94 2f 07 	call	0xe5e	; 0xe5e <schedule>
    113a:	ff 91       	pop	r31
    113c:	ef 91       	pop	r30
    113e:	bf 91       	pop	r27
    1140:	af 91       	pop	r26
    1142:	9f 91       	pop	r25
    1144:	8f 91       	pop	r24
    1146:	7f 91       	pop	r23
    1148:	6f 91       	pop	r22
    114a:	5f 91       	pop	r21
    114c:	4f 91       	pop	r20
    114e:	3f 91       	pop	r19
    1150:	2f 91       	pop	r18
    1152:	1f 91       	pop	r17
    1154:	0f 91       	pop	r16
    1156:	0f 90       	pop	r0
    1158:	0f be       	out	0x3f, r0	; 63
    115a:	0f 90       	pop	r0
    115c:	1f 90       	pop	r1
    115e:	18 95       	reti

00001160 <__vector_4>:
    1160:	1f 92       	push	r1
    1162:	0f 92       	push	r0
    1164:	0f b6       	in	r0, 0x3f	; 63
    1166:	0f 92       	push	r0
    1168:	11 24       	eor	r1, r1
    116a:	0f 93       	push	r16
    116c:	1f 93       	push	r17
    116e:	2f 93       	push	r18
    1170:	3f 93       	push	r19
    1172:	4f 93       	push	r20
    1174:	5f 93       	push	r21
    1176:	6f 93       	push	r22
    1178:	7f 93       	push	r23
    117a:	8f 93       	push	r24
    117c:	9f 93       	push	r25
    117e:	af 93       	push	r26
    1180:	bf 93       	push	r27
    1182:	ef 93       	push	r30
    1184:	ff 93       	push	r31
    1186:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
    118a:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <__data_end+0x1>
    118e:	ac 01       	movw	r20, r24
    1190:	09 2e       	mov	r0, r25
    1192:	00 0c       	add	r0, r0
    1194:	66 0b       	sbc	r22, r22
    1196:	77 0b       	sbc	r23, r23
    1198:	9a 01       	movw	r18, r20
    119a:	11 27       	eor	r17, r17
    119c:	00 27       	eor	r16, r16
    119e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    11a2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    11a6:	60 e0       	ldi	r22, 0x00	; 0
    11a8:	70 e0       	ldi	r23, 0x00	; 0
    11aa:	40 2b       	or	r20, r16
    11ac:	51 2b       	or	r21, r17
    11ae:	62 2b       	or	r22, r18
    11b0:	73 2b       	or	r23, r19
    11b2:	40 93 7a 01 	sts	0x017A, r20	; 0x80017a <timestamp>
    11b6:	50 93 7b 01 	sts	0x017B, r21	; 0x80017b <timestamp+0x1>
    11ba:	60 93 7c 01 	sts	0x017C, r22	; 0x80017c <timestamp+0x2>
    11be:	70 93 7d 01 	sts	0x017D, r23	; 0x80017d <timestamp+0x3>
    11c2:	b0 9b       	sbis	0x16, 0	; 22
    11c4:	1a c0       	rjmp	.+52     	; 0x11fa <__vector_4+0x9a>
    11c6:	01 96       	adiw	r24, 0x01	; 1
    11c8:	09 2e       	mov	r0, r25
    11ca:	00 0c       	add	r0, r0
    11cc:	aa 0b       	sbc	r26, r26
    11ce:	bb 0b       	sbc	r27, r27
    11d0:	bc 01       	movw	r22, r24
    11d2:	55 27       	eor	r21, r21
    11d4:	44 27       	eor	r20, r20
    11d6:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    11da:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    11de:	a0 e0       	ldi	r26, 0x00	; 0
    11e0:	b0 e0       	ldi	r27, 0x00	; 0
    11e2:	84 2b       	or	r24, r20
    11e4:	95 2b       	or	r25, r21
    11e6:	a6 2b       	or	r26, r22
    11e8:	b7 2b       	or	r27, r23
    11ea:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    11ee:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    11f2:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    11f6:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    11fa:	e0 91 20 02 	lds	r30, 0x0220	; 0x800220 <mtable+0x6>
    11fe:	f0 91 21 02 	lds	r31, 0x0221	; 0x800221 <mtable+0x7>
    1202:	30 97       	sbiw	r30, 0x00	; 0
    1204:	39 f0       	breq	.+14     	; 0x1214 <__vector_4+0xb4>
    1206:	63 e0       	ldi	r22, 0x03	; 3
    1208:	70 e0       	ldi	r23, 0x00	; 0
    120a:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <otable+0x6>
    120e:	90 91 89 01 	lds	r25, 0x0189	; 0x800189 <otable+0x7>
    1212:	09 95       	icall
    1214:	0e 94 2f 07 	call	0xe5e	; 0xe5e <schedule>
    1218:	ff 91       	pop	r31
    121a:	ef 91       	pop	r30
    121c:	bf 91       	pop	r27
    121e:	af 91       	pop	r26
    1220:	9f 91       	pop	r25
    1222:	8f 91       	pop	r24
    1224:	7f 91       	pop	r23
    1226:	6f 91       	pop	r22
    1228:	5f 91       	pop	r21
    122a:	4f 91       	pop	r20
    122c:	3f 91       	pop	r19
    122e:	2f 91       	pop	r18
    1230:	1f 91       	pop	r17
    1232:	0f 91       	pop	r16
    1234:	0f 90       	pop	r0
    1236:	0f be       	out	0x3f, r0	; 63
    1238:	0f 90       	pop	r0
    123a:	1f 90       	pop	r1
    123c:	18 95       	reti

0000123e <__vector_5>:
    123e:	1f 92       	push	r1
    1240:	0f 92       	push	r0
    1242:	0f b6       	in	r0, 0x3f	; 63
    1244:	0f 92       	push	r0
    1246:	11 24       	eor	r1, r1
    1248:	0f 93       	push	r16
    124a:	1f 93       	push	r17
    124c:	2f 93       	push	r18
    124e:	3f 93       	push	r19
    1250:	4f 93       	push	r20
    1252:	5f 93       	push	r21
    1254:	6f 93       	push	r22
    1256:	7f 93       	push	r23
    1258:	8f 93       	push	r24
    125a:	9f 93       	push	r25
    125c:	af 93       	push	r26
    125e:	bf 93       	push	r27
    1260:	ef 93       	push	r30
    1262:	ff 93       	push	r31
    1264:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
    1268:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <__data_end+0x1>
    126c:	ac 01       	movw	r20, r24
    126e:	09 2e       	mov	r0, r25
    1270:	00 0c       	add	r0, r0
    1272:	66 0b       	sbc	r22, r22
    1274:	77 0b       	sbc	r23, r23
    1276:	9a 01       	movw	r18, r20
    1278:	11 27       	eor	r17, r17
    127a:	00 27       	eor	r16, r16
    127c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1280:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1284:	60 e0       	ldi	r22, 0x00	; 0
    1286:	70 e0       	ldi	r23, 0x00	; 0
    1288:	40 2b       	or	r20, r16
    128a:	51 2b       	or	r21, r17
    128c:	62 2b       	or	r22, r18
    128e:	73 2b       	or	r23, r19
    1290:	40 93 7a 01 	sts	0x017A, r20	; 0x80017a <timestamp>
    1294:	50 93 7b 01 	sts	0x017B, r21	; 0x80017b <timestamp+0x1>
    1298:	60 93 7c 01 	sts	0x017C, r22	; 0x80017c <timestamp+0x2>
    129c:	70 93 7d 01 	sts	0x017D, r23	; 0x80017d <timestamp+0x3>
    12a0:	b0 9b       	sbis	0x16, 0	; 22
    12a2:	1a c0       	rjmp	.+52     	; 0x12d8 <__vector_5+0x9a>
    12a4:	01 96       	adiw	r24, 0x01	; 1
    12a6:	09 2e       	mov	r0, r25
    12a8:	00 0c       	add	r0, r0
    12aa:	aa 0b       	sbc	r26, r26
    12ac:	bb 0b       	sbc	r27, r27
    12ae:	bc 01       	movw	r22, r24
    12b0:	55 27       	eor	r21, r21
    12b2:	44 27       	eor	r20, r20
    12b4:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    12b8:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    12bc:	a0 e0       	ldi	r26, 0x00	; 0
    12be:	b0 e0       	ldi	r27, 0x00	; 0
    12c0:	84 2b       	or	r24, r20
    12c2:	95 2b       	or	r25, r21
    12c4:	a6 2b       	or	r26, r22
    12c6:	b7 2b       	or	r27, r23
    12c8:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    12cc:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    12d0:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    12d4:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    12d8:	e0 91 22 02 	lds	r30, 0x0222	; 0x800222 <mtable+0x8>
    12dc:	f0 91 23 02 	lds	r31, 0x0223	; 0x800223 <mtable+0x9>
    12e0:	30 97       	sbiw	r30, 0x00	; 0
    12e2:	39 f0       	breq	.+14     	; 0x12f2 <__vector_5+0xb4>
    12e4:	64 e0       	ldi	r22, 0x04	; 4
    12e6:	70 e0       	ldi	r23, 0x00	; 0
    12e8:	80 91 8a 01 	lds	r24, 0x018A	; 0x80018a <otable+0x8>
    12ec:	90 91 8b 01 	lds	r25, 0x018B	; 0x80018b <otable+0x9>
    12f0:	09 95       	icall
    12f2:	0e 94 2f 07 	call	0xe5e	; 0xe5e <schedule>
    12f6:	ff 91       	pop	r31
    12f8:	ef 91       	pop	r30
    12fa:	bf 91       	pop	r27
    12fc:	af 91       	pop	r26
    12fe:	9f 91       	pop	r25
    1300:	8f 91       	pop	r24
    1302:	7f 91       	pop	r23
    1304:	6f 91       	pop	r22
    1306:	5f 91       	pop	r21
    1308:	4f 91       	pop	r20
    130a:	3f 91       	pop	r19
    130c:	2f 91       	pop	r18
    130e:	1f 91       	pop	r17
    1310:	0f 91       	pop	r16
    1312:	0f 90       	pop	r0
    1314:	0f be       	out	0x3f, r0	; 63
    1316:	0f 90       	pop	r0
    1318:	1f 90       	pop	r1
    131a:	18 95       	reti

0000131c <__vector_10>:
    131c:	1f 92       	push	r1
    131e:	0f 92       	push	r0
    1320:	0f b6       	in	r0, 0x3f	; 63
    1322:	0f 92       	push	r0
    1324:	11 24       	eor	r1, r1
    1326:	0f 93       	push	r16
    1328:	1f 93       	push	r17
    132a:	2f 93       	push	r18
    132c:	3f 93       	push	r19
    132e:	4f 93       	push	r20
    1330:	5f 93       	push	r21
    1332:	6f 93       	push	r22
    1334:	7f 93       	push	r23
    1336:	8f 93       	push	r24
    1338:	9f 93       	push	r25
    133a:	af 93       	push	r26
    133c:	bf 93       	push	r27
    133e:	ef 93       	push	r30
    1340:	ff 93       	push	r31
    1342:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
    1346:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <__data_end+0x1>
    134a:	ac 01       	movw	r20, r24
    134c:	09 2e       	mov	r0, r25
    134e:	00 0c       	add	r0, r0
    1350:	66 0b       	sbc	r22, r22
    1352:	77 0b       	sbc	r23, r23
    1354:	9a 01       	movw	r18, r20
    1356:	11 27       	eor	r17, r17
    1358:	00 27       	eor	r16, r16
    135a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    135e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1362:	60 e0       	ldi	r22, 0x00	; 0
    1364:	70 e0       	ldi	r23, 0x00	; 0
    1366:	40 2b       	or	r20, r16
    1368:	51 2b       	or	r21, r17
    136a:	62 2b       	or	r22, r18
    136c:	73 2b       	or	r23, r19
    136e:	40 93 7a 01 	sts	0x017A, r20	; 0x80017a <timestamp>
    1372:	50 93 7b 01 	sts	0x017B, r21	; 0x80017b <timestamp+0x1>
    1376:	60 93 7c 01 	sts	0x017C, r22	; 0x80017c <timestamp+0x2>
    137a:	70 93 7d 01 	sts	0x017D, r23	; 0x80017d <timestamp+0x3>
    137e:	b0 9b       	sbis	0x16, 0	; 22
    1380:	1a c0       	rjmp	.+52     	; 0x13b6 <__vector_10+0x9a>
    1382:	01 96       	adiw	r24, 0x01	; 1
    1384:	09 2e       	mov	r0, r25
    1386:	00 0c       	add	r0, r0
    1388:	aa 0b       	sbc	r26, r26
    138a:	bb 0b       	sbc	r27, r27
    138c:	bc 01       	movw	r22, r24
    138e:	55 27       	eor	r21, r21
    1390:	44 27       	eor	r20, r20
    1392:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1396:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    139a:	a0 e0       	ldi	r26, 0x00	; 0
    139c:	b0 e0       	ldi	r27, 0x00	; 0
    139e:	84 2b       	or	r24, r20
    13a0:	95 2b       	or	r25, r21
    13a2:	a6 2b       	or	r26, r22
    13a4:	b7 2b       	or	r27, r23
    13a6:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    13aa:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    13ae:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    13b2:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    13b6:	e0 91 24 02 	lds	r30, 0x0224	; 0x800224 <mtable+0xa>
    13ba:	f0 91 25 02 	lds	r31, 0x0225	; 0x800225 <mtable+0xb>
    13be:	30 97       	sbiw	r30, 0x00	; 0
    13c0:	39 f0       	breq	.+14     	; 0x13d0 <__vector_10+0xb4>
    13c2:	65 e0       	ldi	r22, 0x05	; 5
    13c4:	70 e0       	ldi	r23, 0x00	; 0
    13c6:	80 91 8c 01 	lds	r24, 0x018C	; 0x80018c <otable+0xa>
    13ca:	90 91 8d 01 	lds	r25, 0x018D	; 0x80018d <otable+0xb>
    13ce:	09 95       	icall
    13d0:	0e 94 2f 07 	call	0xe5e	; 0xe5e <schedule>
    13d4:	ff 91       	pop	r31
    13d6:	ef 91       	pop	r30
    13d8:	bf 91       	pop	r27
    13da:	af 91       	pop	r26
    13dc:	9f 91       	pop	r25
    13de:	8f 91       	pop	r24
    13e0:	7f 91       	pop	r23
    13e2:	6f 91       	pop	r22
    13e4:	5f 91       	pop	r21
    13e6:	4f 91       	pop	r20
    13e8:	3f 91       	pop	r19
    13ea:	2f 91       	pop	r18
    13ec:	1f 91       	pop	r17
    13ee:	0f 91       	pop	r16
    13f0:	0f 90       	pop	r0
    13f2:	0f be       	out	0x3f, r0	; 63
    13f4:	0f 90       	pop	r0
    13f6:	1f 90       	pop	r1
    13f8:	18 95       	reti

000013fa <__vector_11>:
    13fa:	1f 92       	push	r1
    13fc:	0f 92       	push	r0
    13fe:	0f b6       	in	r0, 0x3f	; 63
    1400:	0f 92       	push	r0
    1402:	11 24       	eor	r1, r1
    1404:	0f 93       	push	r16
    1406:	1f 93       	push	r17
    1408:	2f 93       	push	r18
    140a:	3f 93       	push	r19
    140c:	4f 93       	push	r20
    140e:	5f 93       	push	r21
    1410:	6f 93       	push	r22
    1412:	7f 93       	push	r23
    1414:	8f 93       	push	r24
    1416:	9f 93       	push	r25
    1418:	af 93       	push	r26
    141a:	bf 93       	push	r27
    141c:	ef 93       	push	r30
    141e:	ff 93       	push	r31
    1420:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
    1424:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <__data_end+0x1>
    1428:	ac 01       	movw	r20, r24
    142a:	09 2e       	mov	r0, r25
    142c:	00 0c       	add	r0, r0
    142e:	66 0b       	sbc	r22, r22
    1430:	77 0b       	sbc	r23, r23
    1432:	9a 01       	movw	r18, r20
    1434:	11 27       	eor	r17, r17
    1436:	00 27       	eor	r16, r16
    1438:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    143c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1440:	60 e0       	ldi	r22, 0x00	; 0
    1442:	70 e0       	ldi	r23, 0x00	; 0
    1444:	40 2b       	or	r20, r16
    1446:	51 2b       	or	r21, r17
    1448:	62 2b       	or	r22, r18
    144a:	73 2b       	or	r23, r19
    144c:	40 93 7a 01 	sts	0x017A, r20	; 0x80017a <timestamp>
    1450:	50 93 7b 01 	sts	0x017B, r21	; 0x80017b <timestamp+0x1>
    1454:	60 93 7c 01 	sts	0x017C, r22	; 0x80017c <timestamp+0x2>
    1458:	70 93 7d 01 	sts	0x017D, r23	; 0x80017d <timestamp+0x3>
    145c:	b0 9b       	sbis	0x16, 0	; 22
    145e:	1a c0       	rjmp	.+52     	; 0x1494 <__vector_11+0x9a>
    1460:	01 96       	adiw	r24, 0x01	; 1
    1462:	09 2e       	mov	r0, r25
    1464:	00 0c       	add	r0, r0
    1466:	aa 0b       	sbc	r26, r26
    1468:	bb 0b       	sbc	r27, r27
    146a:	bc 01       	movw	r22, r24
    146c:	55 27       	eor	r21, r21
    146e:	44 27       	eor	r20, r20
    1470:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1474:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1478:	a0 e0       	ldi	r26, 0x00	; 0
    147a:	b0 e0       	ldi	r27, 0x00	; 0
    147c:	84 2b       	or	r24, r20
    147e:	95 2b       	or	r25, r21
    1480:	a6 2b       	or	r26, r22
    1482:	b7 2b       	or	r27, r23
    1484:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    1488:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    148c:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    1490:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    1494:	e0 91 26 02 	lds	r30, 0x0226	; 0x800226 <mtable+0xc>
    1498:	f0 91 27 02 	lds	r31, 0x0227	; 0x800227 <mtable+0xd>
    149c:	30 97       	sbiw	r30, 0x00	; 0
    149e:	39 f0       	breq	.+14     	; 0x14ae <__vector_11+0xb4>
    14a0:	66 e0       	ldi	r22, 0x06	; 6
    14a2:	70 e0       	ldi	r23, 0x00	; 0
    14a4:	80 91 8e 01 	lds	r24, 0x018E	; 0x80018e <otable+0xc>
    14a8:	90 91 8f 01 	lds	r25, 0x018F	; 0x80018f <otable+0xd>
    14ac:	09 95       	icall
    14ae:	0e 94 2f 07 	call	0xe5e	; 0xe5e <schedule>
    14b2:	ff 91       	pop	r31
    14b4:	ef 91       	pop	r30
    14b6:	bf 91       	pop	r27
    14b8:	af 91       	pop	r26
    14ba:	9f 91       	pop	r25
    14bc:	8f 91       	pop	r24
    14be:	7f 91       	pop	r23
    14c0:	6f 91       	pop	r22
    14c2:	5f 91       	pop	r21
    14c4:	4f 91       	pop	r20
    14c6:	3f 91       	pop	r19
    14c8:	2f 91       	pop	r18
    14ca:	1f 91       	pop	r17
    14cc:	0f 91       	pop	r16
    14ce:	0f 90       	pop	r0
    14d0:	0f be       	out	0x3f, r0	; 63
    14d2:	0f 90       	pop	r0
    14d4:	1f 90       	pop	r1
    14d6:	18 95       	reti

000014d8 <__vector_12>:
    14d8:	1f 92       	push	r1
    14da:	0f 92       	push	r0
    14dc:	0f b6       	in	r0, 0x3f	; 63
    14de:	0f 92       	push	r0
    14e0:	11 24       	eor	r1, r1
    14e2:	0f 93       	push	r16
    14e4:	1f 93       	push	r17
    14e6:	2f 93       	push	r18
    14e8:	3f 93       	push	r19
    14ea:	4f 93       	push	r20
    14ec:	5f 93       	push	r21
    14ee:	6f 93       	push	r22
    14f0:	7f 93       	push	r23
    14f2:	8f 93       	push	r24
    14f4:	9f 93       	push	r25
    14f6:	af 93       	push	r26
    14f8:	bf 93       	push	r27
    14fa:	ef 93       	push	r30
    14fc:	ff 93       	push	r31
    14fe:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
    1502:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <__data_end+0x1>
    1506:	ac 01       	movw	r20, r24
    1508:	09 2e       	mov	r0, r25
    150a:	00 0c       	add	r0, r0
    150c:	66 0b       	sbc	r22, r22
    150e:	77 0b       	sbc	r23, r23
    1510:	9a 01       	movw	r18, r20
    1512:	11 27       	eor	r17, r17
    1514:	00 27       	eor	r16, r16
    1516:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    151a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    151e:	60 e0       	ldi	r22, 0x00	; 0
    1520:	70 e0       	ldi	r23, 0x00	; 0
    1522:	40 2b       	or	r20, r16
    1524:	51 2b       	or	r21, r17
    1526:	62 2b       	or	r22, r18
    1528:	73 2b       	or	r23, r19
    152a:	40 93 7a 01 	sts	0x017A, r20	; 0x80017a <timestamp>
    152e:	50 93 7b 01 	sts	0x017B, r21	; 0x80017b <timestamp+0x1>
    1532:	60 93 7c 01 	sts	0x017C, r22	; 0x80017c <timestamp+0x2>
    1536:	70 93 7d 01 	sts	0x017D, r23	; 0x80017d <timestamp+0x3>
    153a:	b0 9b       	sbis	0x16, 0	; 22
    153c:	1a c0       	rjmp	.+52     	; 0x1572 <__vector_12+0x9a>
    153e:	01 96       	adiw	r24, 0x01	; 1
    1540:	09 2e       	mov	r0, r25
    1542:	00 0c       	add	r0, r0
    1544:	aa 0b       	sbc	r26, r26
    1546:	bb 0b       	sbc	r27, r27
    1548:	bc 01       	movw	r22, r24
    154a:	55 27       	eor	r21, r21
    154c:	44 27       	eor	r20, r20
    154e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1552:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1556:	a0 e0       	ldi	r26, 0x00	; 0
    1558:	b0 e0       	ldi	r27, 0x00	; 0
    155a:	84 2b       	or	r24, r20
    155c:	95 2b       	or	r25, r21
    155e:	a6 2b       	or	r26, r22
    1560:	b7 2b       	or	r27, r23
    1562:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    1566:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    156a:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    156e:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    1572:	e0 91 28 02 	lds	r30, 0x0228	; 0x800228 <mtable+0xe>
    1576:	f0 91 29 02 	lds	r31, 0x0229	; 0x800229 <mtable+0xf>
    157a:	30 97       	sbiw	r30, 0x00	; 0
    157c:	39 f0       	breq	.+14     	; 0x158c <__vector_12+0xb4>
    157e:	67 e0       	ldi	r22, 0x07	; 7
    1580:	70 e0       	ldi	r23, 0x00	; 0
    1582:	80 91 90 01 	lds	r24, 0x0190	; 0x800190 <otable+0xe>
    1586:	90 91 91 01 	lds	r25, 0x0191	; 0x800191 <otable+0xf>
    158a:	09 95       	icall
    158c:	0e 94 2f 07 	call	0xe5e	; 0xe5e <schedule>
    1590:	ff 91       	pop	r31
    1592:	ef 91       	pop	r30
    1594:	bf 91       	pop	r27
    1596:	af 91       	pop	r26
    1598:	9f 91       	pop	r25
    159a:	8f 91       	pop	r24
    159c:	7f 91       	pop	r23
    159e:	6f 91       	pop	r22
    15a0:	5f 91       	pop	r21
    15a2:	4f 91       	pop	r20
    15a4:	3f 91       	pop	r19
    15a6:	2f 91       	pop	r18
    15a8:	1f 91       	pop	r17
    15aa:	0f 91       	pop	r16
    15ac:	0f 90       	pop	r0
    15ae:	0f be       	out	0x3f, r0	; 63
    15b0:	0f 90       	pop	r0
    15b2:	1f 90       	pop	r1
    15b4:	18 95       	reti

000015b6 <__vector_13>:
    15b6:	1f 92       	push	r1
    15b8:	0f 92       	push	r0
    15ba:	0f b6       	in	r0, 0x3f	; 63
    15bc:	0f 92       	push	r0
    15be:	11 24       	eor	r1, r1
    15c0:	0f 93       	push	r16
    15c2:	1f 93       	push	r17
    15c4:	2f 93       	push	r18
    15c6:	3f 93       	push	r19
    15c8:	4f 93       	push	r20
    15ca:	5f 93       	push	r21
    15cc:	6f 93       	push	r22
    15ce:	7f 93       	push	r23
    15d0:	8f 93       	push	r24
    15d2:	9f 93       	push	r25
    15d4:	af 93       	push	r26
    15d6:	bf 93       	push	r27
    15d8:	ef 93       	push	r30
    15da:	ff 93       	push	r31
    15dc:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
    15e0:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <__data_end+0x1>
    15e4:	ac 01       	movw	r20, r24
    15e6:	09 2e       	mov	r0, r25
    15e8:	00 0c       	add	r0, r0
    15ea:	66 0b       	sbc	r22, r22
    15ec:	77 0b       	sbc	r23, r23
    15ee:	9a 01       	movw	r18, r20
    15f0:	11 27       	eor	r17, r17
    15f2:	00 27       	eor	r16, r16
    15f4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    15f8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    15fc:	60 e0       	ldi	r22, 0x00	; 0
    15fe:	70 e0       	ldi	r23, 0x00	; 0
    1600:	40 2b       	or	r20, r16
    1602:	51 2b       	or	r21, r17
    1604:	62 2b       	or	r22, r18
    1606:	73 2b       	or	r23, r19
    1608:	40 93 7a 01 	sts	0x017A, r20	; 0x80017a <timestamp>
    160c:	50 93 7b 01 	sts	0x017B, r21	; 0x80017b <timestamp+0x1>
    1610:	60 93 7c 01 	sts	0x017C, r22	; 0x80017c <timestamp+0x2>
    1614:	70 93 7d 01 	sts	0x017D, r23	; 0x80017d <timestamp+0x3>
    1618:	b0 9b       	sbis	0x16, 0	; 22
    161a:	1a c0       	rjmp	.+52     	; 0x1650 <__vector_13+0x9a>
    161c:	01 96       	adiw	r24, 0x01	; 1
    161e:	09 2e       	mov	r0, r25
    1620:	00 0c       	add	r0, r0
    1622:	aa 0b       	sbc	r26, r26
    1624:	bb 0b       	sbc	r27, r27
    1626:	bc 01       	movw	r22, r24
    1628:	55 27       	eor	r21, r21
    162a:	44 27       	eor	r20, r20
    162c:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1630:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1634:	a0 e0       	ldi	r26, 0x00	; 0
    1636:	b0 e0       	ldi	r27, 0x00	; 0
    1638:	84 2b       	or	r24, r20
    163a:	95 2b       	or	r25, r21
    163c:	a6 2b       	or	r26, r22
    163e:	b7 2b       	or	r27, r23
    1640:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    1644:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    1648:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    164c:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    1650:	e0 91 2a 02 	lds	r30, 0x022A	; 0x80022a <mtable+0x10>
    1654:	f0 91 2b 02 	lds	r31, 0x022B	; 0x80022b <mtable+0x11>
    1658:	30 97       	sbiw	r30, 0x00	; 0
    165a:	39 f0       	breq	.+14     	; 0x166a <__vector_13+0xb4>
    165c:	68 e0       	ldi	r22, 0x08	; 8
    165e:	70 e0       	ldi	r23, 0x00	; 0
    1660:	80 91 92 01 	lds	r24, 0x0192	; 0x800192 <otable+0x10>
    1664:	90 91 93 01 	lds	r25, 0x0193	; 0x800193 <otable+0x11>
    1668:	09 95       	icall
    166a:	0e 94 2f 07 	call	0xe5e	; 0xe5e <schedule>
    166e:	ff 91       	pop	r31
    1670:	ef 91       	pop	r30
    1672:	bf 91       	pop	r27
    1674:	af 91       	pop	r26
    1676:	9f 91       	pop	r25
    1678:	8f 91       	pop	r24
    167a:	7f 91       	pop	r23
    167c:	6f 91       	pop	r22
    167e:	5f 91       	pop	r21
    1680:	4f 91       	pop	r20
    1682:	3f 91       	pop	r19
    1684:	2f 91       	pop	r18
    1686:	1f 91       	pop	r17
    1688:	0f 91       	pop	r16
    168a:	0f 90       	pop	r0
    168c:	0f be       	out	0x3f, r0	; 63
    168e:	0f 90       	pop	r0
    1690:	1f 90       	pop	r1
    1692:	18 95       	reti

00001694 <__vector_14>:
    1694:	1f 92       	push	r1
    1696:	0f 92       	push	r0
    1698:	0f b6       	in	r0, 0x3f	; 63
    169a:	0f 92       	push	r0
    169c:	11 24       	eor	r1, r1
    169e:	0f 93       	push	r16
    16a0:	1f 93       	push	r17
    16a2:	2f 93       	push	r18
    16a4:	3f 93       	push	r19
    16a6:	4f 93       	push	r20
    16a8:	5f 93       	push	r21
    16aa:	6f 93       	push	r22
    16ac:	7f 93       	push	r23
    16ae:	8f 93       	push	r24
    16b0:	9f 93       	push	r25
    16b2:	af 93       	push	r26
    16b4:	bf 93       	push	r27
    16b6:	ef 93       	push	r30
    16b8:	ff 93       	push	r31
    16ba:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
    16be:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <__data_end+0x1>
    16c2:	ac 01       	movw	r20, r24
    16c4:	09 2e       	mov	r0, r25
    16c6:	00 0c       	add	r0, r0
    16c8:	66 0b       	sbc	r22, r22
    16ca:	77 0b       	sbc	r23, r23
    16cc:	9a 01       	movw	r18, r20
    16ce:	11 27       	eor	r17, r17
    16d0:	00 27       	eor	r16, r16
    16d2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    16d6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    16da:	60 e0       	ldi	r22, 0x00	; 0
    16dc:	70 e0       	ldi	r23, 0x00	; 0
    16de:	40 2b       	or	r20, r16
    16e0:	51 2b       	or	r21, r17
    16e2:	62 2b       	or	r22, r18
    16e4:	73 2b       	or	r23, r19
    16e6:	40 93 7a 01 	sts	0x017A, r20	; 0x80017a <timestamp>
    16ea:	50 93 7b 01 	sts	0x017B, r21	; 0x80017b <timestamp+0x1>
    16ee:	60 93 7c 01 	sts	0x017C, r22	; 0x80017c <timestamp+0x2>
    16f2:	70 93 7d 01 	sts	0x017D, r23	; 0x80017d <timestamp+0x3>
    16f6:	b0 9b       	sbis	0x16, 0	; 22
    16f8:	1a c0       	rjmp	.+52     	; 0x172e <__vector_14+0x9a>
    16fa:	01 96       	adiw	r24, 0x01	; 1
    16fc:	09 2e       	mov	r0, r25
    16fe:	00 0c       	add	r0, r0
    1700:	aa 0b       	sbc	r26, r26
    1702:	bb 0b       	sbc	r27, r27
    1704:	bc 01       	movw	r22, r24
    1706:	55 27       	eor	r21, r21
    1708:	44 27       	eor	r20, r20
    170a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    170e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1712:	a0 e0       	ldi	r26, 0x00	; 0
    1714:	b0 e0       	ldi	r27, 0x00	; 0
    1716:	84 2b       	or	r24, r20
    1718:	95 2b       	or	r25, r21
    171a:	a6 2b       	or	r26, r22
    171c:	b7 2b       	or	r27, r23
    171e:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    1722:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    1726:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    172a:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    172e:	e0 91 2c 02 	lds	r30, 0x022C	; 0x80022c <mtable+0x12>
    1732:	f0 91 2d 02 	lds	r31, 0x022D	; 0x80022d <mtable+0x13>
    1736:	30 97       	sbiw	r30, 0x00	; 0
    1738:	39 f0       	breq	.+14     	; 0x1748 <__vector_14+0xb4>
    173a:	69 e0       	ldi	r22, 0x09	; 9
    173c:	70 e0       	ldi	r23, 0x00	; 0
    173e:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <otable+0x12>
    1742:	90 91 95 01 	lds	r25, 0x0195	; 0x800195 <otable+0x13>
    1746:	09 95       	icall
    1748:	0e 94 2f 07 	call	0xe5e	; 0xe5e <schedule>
    174c:	ff 91       	pop	r31
    174e:	ef 91       	pop	r30
    1750:	bf 91       	pop	r27
    1752:	af 91       	pop	r26
    1754:	9f 91       	pop	r25
    1756:	8f 91       	pop	r24
    1758:	7f 91       	pop	r23
    175a:	6f 91       	pop	r22
    175c:	5f 91       	pop	r21
    175e:	4f 91       	pop	r20
    1760:	3f 91       	pop	r19
    1762:	2f 91       	pop	r18
    1764:	1f 91       	pop	r17
    1766:	0f 91       	pop	r16
    1768:	0f 90       	pop	r0
    176a:	0f be       	out	0x3f, r0	; 63
    176c:	0f 90       	pop	r0
    176e:	1f 90       	pop	r1
    1770:	18 95       	reti

00001772 <__vector_15>:
    1772:	1f 92       	push	r1
    1774:	0f 92       	push	r0
    1776:	0f b6       	in	r0, 0x3f	; 63
    1778:	0f 92       	push	r0
    177a:	11 24       	eor	r1, r1
    177c:	0f 93       	push	r16
    177e:	1f 93       	push	r17
    1780:	2f 93       	push	r18
    1782:	3f 93       	push	r19
    1784:	4f 93       	push	r20
    1786:	5f 93       	push	r21
    1788:	6f 93       	push	r22
    178a:	7f 93       	push	r23
    178c:	8f 93       	push	r24
    178e:	9f 93       	push	r25
    1790:	af 93       	push	r26
    1792:	bf 93       	push	r27
    1794:	ef 93       	push	r30
    1796:	ff 93       	push	r31
    1798:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
    179c:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <__data_end+0x1>
    17a0:	ac 01       	movw	r20, r24
    17a2:	09 2e       	mov	r0, r25
    17a4:	00 0c       	add	r0, r0
    17a6:	66 0b       	sbc	r22, r22
    17a8:	77 0b       	sbc	r23, r23
    17aa:	9a 01       	movw	r18, r20
    17ac:	11 27       	eor	r17, r17
    17ae:	00 27       	eor	r16, r16
    17b0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    17b4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    17b8:	60 e0       	ldi	r22, 0x00	; 0
    17ba:	70 e0       	ldi	r23, 0x00	; 0
    17bc:	40 2b       	or	r20, r16
    17be:	51 2b       	or	r21, r17
    17c0:	62 2b       	or	r22, r18
    17c2:	73 2b       	or	r23, r19
    17c4:	40 93 7a 01 	sts	0x017A, r20	; 0x80017a <timestamp>
    17c8:	50 93 7b 01 	sts	0x017B, r21	; 0x80017b <timestamp+0x1>
    17cc:	60 93 7c 01 	sts	0x017C, r22	; 0x80017c <timestamp+0x2>
    17d0:	70 93 7d 01 	sts	0x017D, r23	; 0x80017d <timestamp+0x3>
    17d4:	b0 9b       	sbis	0x16, 0	; 22
    17d6:	1a c0       	rjmp	.+52     	; 0x180c <__vector_15+0x9a>
    17d8:	01 96       	adiw	r24, 0x01	; 1
    17da:	09 2e       	mov	r0, r25
    17dc:	00 0c       	add	r0, r0
    17de:	aa 0b       	sbc	r26, r26
    17e0:	bb 0b       	sbc	r27, r27
    17e2:	bc 01       	movw	r22, r24
    17e4:	55 27       	eor	r21, r21
    17e6:	44 27       	eor	r20, r20
    17e8:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    17ec:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    17f0:	a0 e0       	ldi	r26, 0x00	; 0
    17f2:	b0 e0       	ldi	r27, 0x00	; 0
    17f4:	84 2b       	or	r24, r20
    17f6:	95 2b       	or	r25, r21
    17f8:	a6 2b       	or	r26, r22
    17fa:	b7 2b       	or	r27, r23
    17fc:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    1800:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    1804:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    1808:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    180c:	e0 91 2e 02 	lds	r30, 0x022E	; 0x80022e <mtable+0x14>
    1810:	f0 91 2f 02 	lds	r31, 0x022F	; 0x80022f <mtable+0x15>
    1814:	30 97       	sbiw	r30, 0x00	; 0
    1816:	39 f0       	breq	.+14     	; 0x1826 <__vector_15+0xb4>
    1818:	6a e0       	ldi	r22, 0x0A	; 10
    181a:	70 e0       	ldi	r23, 0x00	; 0
    181c:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <otable+0x14>
    1820:	90 91 97 01 	lds	r25, 0x0197	; 0x800197 <otable+0x15>
    1824:	09 95       	icall
    1826:	0e 94 2f 07 	call	0xe5e	; 0xe5e <schedule>
    182a:	ff 91       	pop	r31
    182c:	ef 91       	pop	r30
    182e:	bf 91       	pop	r27
    1830:	af 91       	pop	r26
    1832:	9f 91       	pop	r25
    1834:	8f 91       	pop	r24
    1836:	7f 91       	pop	r23
    1838:	6f 91       	pop	r22
    183a:	5f 91       	pop	r21
    183c:	4f 91       	pop	r20
    183e:	3f 91       	pop	r19
    1840:	2f 91       	pop	r18
    1842:	1f 91       	pop	r17
    1844:	0f 91       	pop	r16
    1846:	0f 90       	pop	r0
    1848:	0f be       	out	0x3f, r0	; 63
    184a:	0f 90       	pop	r0
    184c:	1f 90       	pop	r1
    184e:	18 95       	reti

00001850 <__vector_16>:
    1850:	1f 92       	push	r1
    1852:	0f 92       	push	r0
    1854:	0f b6       	in	r0, 0x3f	; 63
    1856:	0f 92       	push	r0
    1858:	11 24       	eor	r1, r1
    185a:	0f 93       	push	r16
    185c:	1f 93       	push	r17
    185e:	2f 93       	push	r18
    1860:	3f 93       	push	r19
    1862:	4f 93       	push	r20
    1864:	5f 93       	push	r21
    1866:	6f 93       	push	r22
    1868:	7f 93       	push	r23
    186a:	8f 93       	push	r24
    186c:	9f 93       	push	r25
    186e:	af 93       	push	r26
    1870:	bf 93       	push	r27
    1872:	ef 93       	push	r30
    1874:	ff 93       	push	r31
    1876:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
    187a:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <__data_end+0x1>
    187e:	ac 01       	movw	r20, r24
    1880:	09 2e       	mov	r0, r25
    1882:	00 0c       	add	r0, r0
    1884:	66 0b       	sbc	r22, r22
    1886:	77 0b       	sbc	r23, r23
    1888:	9a 01       	movw	r18, r20
    188a:	11 27       	eor	r17, r17
    188c:	00 27       	eor	r16, r16
    188e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1892:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1896:	60 e0       	ldi	r22, 0x00	; 0
    1898:	70 e0       	ldi	r23, 0x00	; 0
    189a:	40 2b       	or	r20, r16
    189c:	51 2b       	or	r21, r17
    189e:	62 2b       	or	r22, r18
    18a0:	73 2b       	or	r23, r19
    18a2:	40 93 7a 01 	sts	0x017A, r20	; 0x80017a <timestamp>
    18a6:	50 93 7b 01 	sts	0x017B, r21	; 0x80017b <timestamp+0x1>
    18aa:	60 93 7c 01 	sts	0x017C, r22	; 0x80017c <timestamp+0x2>
    18ae:	70 93 7d 01 	sts	0x017D, r23	; 0x80017d <timestamp+0x3>
    18b2:	b0 9b       	sbis	0x16, 0	; 22
    18b4:	1a c0       	rjmp	.+52     	; 0x18ea <__vector_16+0x9a>
    18b6:	01 96       	adiw	r24, 0x01	; 1
    18b8:	09 2e       	mov	r0, r25
    18ba:	00 0c       	add	r0, r0
    18bc:	aa 0b       	sbc	r26, r26
    18be:	bb 0b       	sbc	r27, r27
    18c0:	bc 01       	movw	r22, r24
    18c2:	55 27       	eor	r21, r21
    18c4:	44 27       	eor	r20, r20
    18c6:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    18ca:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    18ce:	a0 e0       	ldi	r26, 0x00	; 0
    18d0:	b0 e0       	ldi	r27, 0x00	; 0
    18d2:	84 2b       	or	r24, r20
    18d4:	95 2b       	or	r25, r21
    18d6:	a6 2b       	or	r26, r22
    18d8:	b7 2b       	or	r27, r23
    18da:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    18de:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    18e2:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    18e6:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    18ea:	e0 91 30 02 	lds	r30, 0x0230	; 0x800230 <mtable+0x16>
    18ee:	f0 91 31 02 	lds	r31, 0x0231	; 0x800231 <mtable+0x17>
    18f2:	30 97       	sbiw	r30, 0x00	; 0
    18f4:	39 f0       	breq	.+14     	; 0x1904 <__vector_16+0xb4>
    18f6:	6b e0       	ldi	r22, 0x0B	; 11
    18f8:	70 e0       	ldi	r23, 0x00	; 0
    18fa:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <otable+0x16>
    18fe:	90 91 99 01 	lds	r25, 0x0199	; 0x800199 <otable+0x17>
    1902:	09 95       	icall
    1904:	0e 94 2f 07 	call	0xe5e	; 0xe5e <schedule>
    1908:	ff 91       	pop	r31
    190a:	ef 91       	pop	r30
    190c:	bf 91       	pop	r27
    190e:	af 91       	pop	r26
    1910:	9f 91       	pop	r25
    1912:	8f 91       	pop	r24
    1914:	7f 91       	pop	r23
    1916:	6f 91       	pop	r22
    1918:	5f 91       	pop	r21
    191a:	4f 91       	pop	r20
    191c:	3f 91       	pop	r19
    191e:	2f 91       	pop	r18
    1920:	1f 91       	pop	r17
    1922:	0f 91       	pop	r16
    1924:	0f 90       	pop	r0
    1926:	0f be       	out	0x3f, r0	; 63
    1928:	0f 90       	pop	r0
    192a:	1f 90       	pop	r1
    192c:	18 95       	reti

0000192e <__vector_17>:
    192e:	1f 92       	push	r1
    1930:	0f 92       	push	r0
    1932:	0f b6       	in	r0, 0x3f	; 63
    1934:	0f 92       	push	r0
    1936:	11 24       	eor	r1, r1
    1938:	0f 93       	push	r16
    193a:	1f 93       	push	r17
    193c:	2f 93       	push	r18
    193e:	3f 93       	push	r19
    1940:	4f 93       	push	r20
    1942:	5f 93       	push	r21
    1944:	6f 93       	push	r22
    1946:	7f 93       	push	r23
    1948:	8f 93       	push	r24
    194a:	9f 93       	push	r25
    194c:	af 93       	push	r26
    194e:	bf 93       	push	r27
    1950:	ef 93       	push	r30
    1952:	ff 93       	push	r31
    1954:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
    1958:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <__data_end+0x1>
    195c:	ac 01       	movw	r20, r24
    195e:	09 2e       	mov	r0, r25
    1960:	00 0c       	add	r0, r0
    1962:	66 0b       	sbc	r22, r22
    1964:	77 0b       	sbc	r23, r23
    1966:	9a 01       	movw	r18, r20
    1968:	11 27       	eor	r17, r17
    196a:	00 27       	eor	r16, r16
    196c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1970:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1974:	60 e0       	ldi	r22, 0x00	; 0
    1976:	70 e0       	ldi	r23, 0x00	; 0
    1978:	40 2b       	or	r20, r16
    197a:	51 2b       	or	r21, r17
    197c:	62 2b       	or	r22, r18
    197e:	73 2b       	or	r23, r19
    1980:	40 93 7a 01 	sts	0x017A, r20	; 0x80017a <timestamp>
    1984:	50 93 7b 01 	sts	0x017B, r21	; 0x80017b <timestamp+0x1>
    1988:	60 93 7c 01 	sts	0x017C, r22	; 0x80017c <timestamp+0x2>
    198c:	70 93 7d 01 	sts	0x017D, r23	; 0x80017d <timestamp+0x3>
    1990:	b0 9b       	sbis	0x16, 0	; 22
    1992:	1a c0       	rjmp	.+52     	; 0x19c8 <__vector_17+0x9a>
    1994:	01 96       	adiw	r24, 0x01	; 1
    1996:	09 2e       	mov	r0, r25
    1998:	00 0c       	add	r0, r0
    199a:	aa 0b       	sbc	r26, r26
    199c:	bb 0b       	sbc	r27, r27
    199e:	bc 01       	movw	r22, r24
    19a0:	55 27       	eor	r21, r21
    19a2:	44 27       	eor	r20, r20
    19a4:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    19a8:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    19ac:	a0 e0       	ldi	r26, 0x00	; 0
    19ae:	b0 e0       	ldi	r27, 0x00	; 0
    19b0:	84 2b       	or	r24, r20
    19b2:	95 2b       	or	r25, r21
    19b4:	a6 2b       	or	r26, r22
    19b6:	b7 2b       	or	r27, r23
    19b8:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    19bc:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    19c0:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    19c4:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    19c8:	e0 91 32 02 	lds	r30, 0x0232	; 0x800232 <mtable+0x18>
    19cc:	f0 91 33 02 	lds	r31, 0x0233	; 0x800233 <mtable+0x19>
    19d0:	30 97       	sbiw	r30, 0x00	; 0
    19d2:	39 f0       	breq	.+14     	; 0x19e2 <__vector_17+0xb4>
    19d4:	6c e0       	ldi	r22, 0x0C	; 12
    19d6:	70 e0       	ldi	r23, 0x00	; 0
    19d8:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <otable+0x18>
    19dc:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <otable+0x19>
    19e0:	09 95       	icall
    19e2:	0e 94 2f 07 	call	0xe5e	; 0xe5e <schedule>
    19e6:	ff 91       	pop	r31
    19e8:	ef 91       	pop	r30
    19ea:	bf 91       	pop	r27
    19ec:	af 91       	pop	r26
    19ee:	9f 91       	pop	r25
    19f0:	8f 91       	pop	r24
    19f2:	7f 91       	pop	r23
    19f4:	6f 91       	pop	r22
    19f6:	5f 91       	pop	r21
    19f8:	4f 91       	pop	r20
    19fa:	3f 91       	pop	r19
    19fc:	2f 91       	pop	r18
    19fe:	1f 91       	pop	r17
    1a00:	0f 91       	pop	r16
    1a02:	0f 90       	pop	r0
    1a04:	0f be       	out	0x3f, r0	; 63
    1a06:	0f 90       	pop	r0
    1a08:	1f 90       	pop	r1
    1a0a:	18 95       	reti

00001a0c <__vector_18>:
    1a0c:	1f 92       	push	r1
    1a0e:	0f 92       	push	r0
    1a10:	0f b6       	in	r0, 0x3f	; 63
    1a12:	0f 92       	push	r0
    1a14:	11 24       	eor	r1, r1
    1a16:	0f 93       	push	r16
    1a18:	1f 93       	push	r17
    1a1a:	2f 93       	push	r18
    1a1c:	3f 93       	push	r19
    1a1e:	4f 93       	push	r20
    1a20:	5f 93       	push	r21
    1a22:	6f 93       	push	r22
    1a24:	7f 93       	push	r23
    1a26:	8f 93       	push	r24
    1a28:	9f 93       	push	r25
    1a2a:	af 93       	push	r26
    1a2c:	bf 93       	push	r27
    1a2e:	ef 93       	push	r30
    1a30:	ff 93       	push	r31
    1a32:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
    1a36:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <__data_end+0x1>
    1a3a:	ac 01       	movw	r20, r24
    1a3c:	09 2e       	mov	r0, r25
    1a3e:	00 0c       	add	r0, r0
    1a40:	66 0b       	sbc	r22, r22
    1a42:	77 0b       	sbc	r23, r23
    1a44:	9a 01       	movw	r18, r20
    1a46:	11 27       	eor	r17, r17
    1a48:	00 27       	eor	r16, r16
    1a4a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1a4e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1a52:	60 e0       	ldi	r22, 0x00	; 0
    1a54:	70 e0       	ldi	r23, 0x00	; 0
    1a56:	40 2b       	or	r20, r16
    1a58:	51 2b       	or	r21, r17
    1a5a:	62 2b       	or	r22, r18
    1a5c:	73 2b       	or	r23, r19
    1a5e:	40 93 7a 01 	sts	0x017A, r20	; 0x80017a <timestamp>
    1a62:	50 93 7b 01 	sts	0x017B, r21	; 0x80017b <timestamp+0x1>
    1a66:	60 93 7c 01 	sts	0x017C, r22	; 0x80017c <timestamp+0x2>
    1a6a:	70 93 7d 01 	sts	0x017D, r23	; 0x80017d <timestamp+0x3>
    1a6e:	b0 9b       	sbis	0x16, 0	; 22
    1a70:	1a c0       	rjmp	.+52     	; 0x1aa6 <__vector_18+0x9a>
    1a72:	01 96       	adiw	r24, 0x01	; 1
    1a74:	09 2e       	mov	r0, r25
    1a76:	00 0c       	add	r0, r0
    1a78:	aa 0b       	sbc	r26, r26
    1a7a:	bb 0b       	sbc	r27, r27
    1a7c:	bc 01       	movw	r22, r24
    1a7e:	55 27       	eor	r21, r21
    1a80:	44 27       	eor	r20, r20
    1a82:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1a86:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1a8a:	a0 e0       	ldi	r26, 0x00	; 0
    1a8c:	b0 e0       	ldi	r27, 0x00	; 0
    1a8e:	84 2b       	or	r24, r20
    1a90:	95 2b       	or	r25, r21
    1a92:	a6 2b       	or	r26, r22
    1a94:	b7 2b       	or	r27, r23
    1a96:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    1a9a:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    1a9e:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    1aa2:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    1aa6:	e0 91 34 02 	lds	r30, 0x0234	; 0x800234 <mtable+0x1a>
    1aaa:	f0 91 35 02 	lds	r31, 0x0235	; 0x800235 <mtable+0x1b>
    1aae:	30 97       	sbiw	r30, 0x00	; 0
    1ab0:	39 f0       	breq	.+14     	; 0x1ac0 <__vector_18+0xb4>
    1ab2:	6d e0       	ldi	r22, 0x0D	; 13
    1ab4:	70 e0       	ldi	r23, 0x00	; 0
    1ab6:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <otable+0x1a>
    1aba:	90 91 9d 01 	lds	r25, 0x019D	; 0x80019d <otable+0x1b>
    1abe:	09 95       	icall
    1ac0:	0e 94 2f 07 	call	0xe5e	; 0xe5e <schedule>
    1ac4:	ff 91       	pop	r31
    1ac6:	ef 91       	pop	r30
    1ac8:	bf 91       	pop	r27
    1aca:	af 91       	pop	r26
    1acc:	9f 91       	pop	r25
    1ace:	8f 91       	pop	r24
    1ad0:	7f 91       	pop	r23
    1ad2:	6f 91       	pop	r22
    1ad4:	5f 91       	pop	r21
    1ad6:	4f 91       	pop	r20
    1ad8:	3f 91       	pop	r19
    1ada:	2f 91       	pop	r18
    1adc:	1f 91       	pop	r17
    1ade:	0f 91       	pop	r16
    1ae0:	0f 90       	pop	r0
    1ae2:	0f be       	out	0x3f, r0	; 63
    1ae4:	0f 90       	pop	r0
    1ae6:	1f 90       	pop	r1
    1ae8:	18 95       	reti

00001aea <__vector_19>:
    1aea:	1f 92       	push	r1
    1aec:	0f 92       	push	r0
    1aee:	0f b6       	in	r0, 0x3f	; 63
    1af0:	0f 92       	push	r0
    1af2:	11 24       	eor	r1, r1
    1af4:	0f 93       	push	r16
    1af6:	1f 93       	push	r17
    1af8:	2f 93       	push	r18
    1afa:	3f 93       	push	r19
    1afc:	4f 93       	push	r20
    1afe:	5f 93       	push	r21
    1b00:	6f 93       	push	r22
    1b02:	7f 93       	push	r23
    1b04:	8f 93       	push	r24
    1b06:	9f 93       	push	r25
    1b08:	af 93       	push	r26
    1b0a:	bf 93       	push	r27
    1b0c:	ef 93       	push	r30
    1b0e:	ff 93       	push	r31
    1b10:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
    1b14:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <__data_end+0x1>
    1b18:	ac 01       	movw	r20, r24
    1b1a:	09 2e       	mov	r0, r25
    1b1c:	00 0c       	add	r0, r0
    1b1e:	66 0b       	sbc	r22, r22
    1b20:	77 0b       	sbc	r23, r23
    1b22:	9a 01       	movw	r18, r20
    1b24:	11 27       	eor	r17, r17
    1b26:	00 27       	eor	r16, r16
    1b28:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1b2c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b30:	60 e0       	ldi	r22, 0x00	; 0
    1b32:	70 e0       	ldi	r23, 0x00	; 0
    1b34:	40 2b       	or	r20, r16
    1b36:	51 2b       	or	r21, r17
    1b38:	62 2b       	or	r22, r18
    1b3a:	73 2b       	or	r23, r19
    1b3c:	40 93 7a 01 	sts	0x017A, r20	; 0x80017a <timestamp>
    1b40:	50 93 7b 01 	sts	0x017B, r21	; 0x80017b <timestamp+0x1>
    1b44:	60 93 7c 01 	sts	0x017C, r22	; 0x80017c <timestamp+0x2>
    1b48:	70 93 7d 01 	sts	0x017D, r23	; 0x80017d <timestamp+0x3>
    1b4c:	b0 9b       	sbis	0x16, 0	; 22
    1b4e:	1a c0       	rjmp	.+52     	; 0x1b84 <__vector_19+0x9a>
    1b50:	01 96       	adiw	r24, 0x01	; 1
    1b52:	09 2e       	mov	r0, r25
    1b54:	00 0c       	add	r0, r0
    1b56:	aa 0b       	sbc	r26, r26
    1b58:	bb 0b       	sbc	r27, r27
    1b5a:	bc 01       	movw	r22, r24
    1b5c:	55 27       	eor	r21, r21
    1b5e:	44 27       	eor	r20, r20
    1b60:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1b64:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b68:	a0 e0       	ldi	r26, 0x00	; 0
    1b6a:	b0 e0       	ldi	r27, 0x00	; 0
    1b6c:	84 2b       	or	r24, r20
    1b6e:	95 2b       	or	r25, r21
    1b70:	a6 2b       	or	r26, r22
    1b72:	b7 2b       	or	r27, r23
    1b74:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    1b78:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    1b7c:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    1b80:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    1b84:	e0 91 36 02 	lds	r30, 0x0236	; 0x800236 <mtable+0x1c>
    1b88:	f0 91 37 02 	lds	r31, 0x0237	; 0x800237 <mtable+0x1d>
    1b8c:	30 97       	sbiw	r30, 0x00	; 0
    1b8e:	39 f0       	breq	.+14     	; 0x1b9e <__vector_19+0xb4>
    1b90:	6e e0       	ldi	r22, 0x0E	; 14
    1b92:	70 e0       	ldi	r23, 0x00	; 0
    1b94:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <otable+0x1c>
    1b98:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <otable+0x1d>
    1b9c:	09 95       	icall
    1b9e:	0e 94 2f 07 	call	0xe5e	; 0xe5e <schedule>
    1ba2:	ff 91       	pop	r31
    1ba4:	ef 91       	pop	r30
    1ba6:	bf 91       	pop	r27
    1ba8:	af 91       	pop	r26
    1baa:	9f 91       	pop	r25
    1bac:	8f 91       	pop	r24
    1bae:	7f 91       	pop	r23
    1bb0:	6f 91       	pop	r22
    1bb2:	5f 91       	pop	r21
    1bb4:	4f 91       	pop	r20
    1bb6:	3f 91       	pop	r19
    1bb8:	2f 91       	pop	r18
    1bba:	1f 91       	pop	r17
    1bbc:	0f 91       	pop	r16
    1bbe:	0f 90       	pop	r0
    1bc0:	0f be       	out	0x3f, r0	; 63
    1bc2:	0f 90       	pop	r0
    1bc4:	1f 90       	pop	r1
    1bc6:	18 95       	reti

00001bc8 <__vector_20>:
    1bc8:	1f 92       	push	r1
    1bca:	0f 92       	push	r0
    1bcc:	0f b6       	in	r0, 0x3f	; 63
    1bce:	0f 92       	push	r0
    1bd0:	11 24       	eor	r1, r1
    1bd2:	0f 93       	push	r16
    1bd4:	1f 93       	push	r17
    1bd6:	2f 93       	push	r18
    1bd8:	3f 93       	push	r19
    1bda:	4f 93       	push	r20
    1bdc:	5f 93       	push	r21
    1bde:	6f 93       	push	r22
    1be0:	7f 93       	push	r23
    1be2:	8f 93       	push	r24
    1be4:	9f 93       	push	r25
    1be6:	af 93       	push	r26
    1be8:	bf 93       	push	r27
    1bea:	ef 93       	push	r30
    1bec:	ff 93       	push	r31
    1bee:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
    1bf2:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <__data_end+0x1>
    1bf6:	ac 01       	movw	r20, r24
    1bf8:	09 2e       	mov	r0, r25
    1bfa:	00 0c       	add	r0, r0
    1bfc:	66 0b       	sbc	r22, r22
    1bfe:	77 0b       	sbc	r23, r23
    1c00:	9a 01       	movw	r18, r20
    1c02:	11 27       	eor	r17, r17
    1c04:	00 27       	eor	r16, r16
    1c06:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1c0a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1c0e:	60 e0       	ldi	r22, 0x00	; 0
    1c10:	70 e0       	ldi	r23, 0x00	; 0
    1c12:	40 2b       	or	r20, r16
    1c14:	51 2b       	or	r21, r17
    1c16:	62 2b       	or	r22, r18
    1c18:	73 2b       	or	r23, r19
    1c1a:	40 93 7a 01 	sts	0x017A, r20	; 0x80017a <timestamp>
    1c1e:	50 93 7b 01 	sts	0x017B, r21	; 0x80017b <timestamp+0x1>
    1c22:	60 93 7c 01 	sts	0x017C, r22	; 0x80017c <timestamp+0x2>
    1c26:	70 93 7d 01 	sts	0x017D, r23	; 0x80017d <timestamp+0x3>
    1c2a:	b0 9b       	sbis	0x16, 0	; 22
    1c2c:	1a c0       	rjmp	.+52     	; 0x1c62 <__vector_20+0x9a>
    1c2e:	01 96       	adiw	r24, 0x01	; 1
    1c30:	09 2e       	mov	r0, r25
    1c32:	00 0c       	add	r0, r0
    1c34:	aa 0b       	sbc	r26, r26
    1c36:	bb 0b       	sbc	r27, r27
    1c38:	bc 01       	movw	r22, r24
    1c3a:	55 27       	eor	r21, r21
    1c3c:	44 27       	eor	r20, r20
    1c3e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1c42:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1c46:	a0 e0       	ldi	r26, 0x00	; 0
    1c48:	b0 e0       	ldi	r27, 0x00	; 0
    1c4a:	84 2b       	or	r24, r20
    1c4c:	95 2b       	or	r25, r21
    1c4e:	a6 2b       	or	r26, r22
    1c50:	b7 2b       	or	r27, r23
    1c52:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    1c56:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    1c5a:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    1c5e:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    1c62:	e0 91 38 02 	lds	r30, 0x0238	; 0x800238 <mtable+0x1e>
    1c66:	f0 91 39 02 	lds	r31, 0x0239	; 0x800239 <mtable+0x1f>
    1c6a:	30 97       	sbiw	r30, 0x00	; 0
    1c6c:	39 f0       	breq	.+14     	; 0x1c7c <__vector_20+0xb4>
    1c6e:	6f e0       	ldi	r22, 0x0F	; 15
    1c70:	70 e0       	ldi	r23, 0x00	; 0
    1c72:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <otable+0x1e>
    1c76:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <otable+0x1f>
    1c7a:	09 95       	icall
    1c7c:	0e 94 2f 07 	call	0xe5e	; 0xe5e <schedule>
    1c80:	ff 91       	pop	r31
    1c82:	ef 91       	pop	r30
    1c84:	bf 91       	pop	r27
    1c86:	af 91       	pop	r26
    1c88:	9f 91       	pop	r25
    1c8a:	8f 91       	pop	r24
    1c8c:	7f 91       	pop	r23
    1c8e:	6f 91       	pop	r22
    1c90:	5f 91       	pop	r21
    1c92:	4f 91       	pop	r20
    1c94:	3f 91       	pop	r19
    1c96:	2f 91       	pop	r18
    1c98:	1f 91       	pop	r17
    1c9a:	0f 91       	pop	r16
    1c9c:	0f 90       	pop	r0
    1c9e:	0f be       	out	0x3f, r0	; 63
    1ca0:	0f 90       	pop	r0
    1ca2:	1f 90       	pop	r1
    1ca4:	18 95       	reti

00001ca6 <__vector_21>:
    1ca6:	1f 92       	push	r1
    1ca8:	0f 92       	push	r0
    1caa:	0f b6       	in	r0, 0x3f	; 63
    1cac:	0f 92       	push	r0
    1cae:	11 24       	eor	r1, r1
    1cb0:	0f 93       	push	r16
    1cb2:	1f 93       	push	r17
    1cb4:	2f 93       	push	r18
    1cb6:	3f 93       	push	r19
    1cb8:	4f 93       	push	r20
    1cba:	5f 93       	push	r21
    1cbc:	6f 93       	push	r22
    1cbe:	7f 93       	push	r23
    1cc0:	8f 93       	push	r24
    1cc2:	9f 93       	push	r25
    1cc4:	af 93       	push	r26
    1cc6:	bf 93       	push	r27
    1cc8:	ef 93       	push	r30
    1cca:	ff 93       	push	r31
    1ccc:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
    1cd0:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <__data_end+0x1>
    1cd4:	ac 01       	movw	r20, r24
    1cd6:	09 2e       	mov	r0, r25
    1cd8:	00 0c       	add	r0, r0
    1cda:	66 0b       	sbc	r22, r22
    1cdc:	77 0b       	sbc	r23, r23
    1cde:	9a 01       	movw	r18, r20
    1ce0:	11 27       	eor	r17, r17
    1ce2:	00 27       	eor	r16, r16
    1ce4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1ce8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1cec:	60 e0       	ldi	r22, 0x00	; 0
    1cee:	70 e0       	ldi	r23, 0x00	; 0
    1cf0:	40 2b       	or	r20, r16
    1cf2:	51 2b       	or	r21, r17
    1cf4:	62 2b       	or	r22, r18
    1cf6:	73 2b       	or	r23, r19
    1cf8:	40 93 7a 01 	sts	0x017A, r20	; 0x80017a <timestamp>
    1cfc:	50 93 7b 01 	sts	0x017B, r21	; 0x80017b <timestamp+0x1>
    1d00:	60 93 7c 01 	sts	0x017C, r22	; 0x80017c <timestamp+0x2>
    1d04:	70 93 7d 01 	sts	0x017D, r23	; 0x80017d <timestamp+0x3>
    1d08:	b0 9b       	sbis	0x16, 0	; 22
    1d0a:	1a c0       	rjmp	.+52     	; 0x1d40 <__vector_21+0x9a>
    1d0c:	01 96       	adiw	r24, 0x01	; 1
    1d0e:	09 2e       	mov	r0, r25
    1d10:	00 0c       	add	r0, r0
    1d12:	aa 0b       	sbc	r26, r26
    1d14:	bb 0b       	sbc	r27, r27
    1d16:	bc 01       	movw	r22, r24
    1d18:	55 27       	eor	r21, r21
    1d1a:	44 27       	eor	r20, r20
    1d1c:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1d20:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1d24:	a0 e0       	ldi	r26, 0x00	; 0
    1d26:	b0 e0       	ldi	r27, 0x00	; 0
    1d28:	84 2b       	or	r24, r20
    1d2a:	95 2b       	or	r25, r21
    1d2c:	a6 2b       	or	r26, r22
    1d2e:	b7 2b       	or	r27, r23
    1d30:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    1d34:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    1d38:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    1d3c:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    1d40:	e0 91 3a 02 	lds	r30, 0x023A	; 0x80023a <mtable+0x20>
    1d44:	f0 91 3b 02 	lds	r31, 0x023B	; 0x80023b <mtable+0x21>
    1d48:	30 97       	sbiw	r30, 0x00	; 0
    1d4a:	39 f0       	breq	.+14     	; 0x1d5a <__vector_21+0xb4>
    1d4c:	60 e1       	ldi	r22, 0x10	; 16
    1d4e:	70 e0       	ldi	r23, 0x00	; 0
    1d50:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <otable+0x20>
    1d54:	90 91 a3 01 	lds	r25, 0x01A3	; 0x8001a3 <otable+0x21>
    1d58:	09 95       	icall
    1d5a:	0e 94 2f 07 	call	0xe5e	; 0xe5e <schedule>
    1d5e:	ff 91       	pop	r31
    1d60:	ef 91       	pop	r30
    1d62:	bf 91       	pop	r27
    1d64:	af 91       	pop	r26
    1d66:	9f 91       	pop	r25
    1d68:	8f 91       	pop	r24
    1d6a:	7f 91       	pop	r23
    1d6c:	6f 91       	pop	r22
    1d6e:	5f 91       	pop	r21
    1d70:	4f 91       	pop	r20
    1d72:	3f 91       	pop	r19
    1d74:	2f 91       	pop	r18
    1d76:	1f 91       	pop	r17
    1d78:	0f 91       	pop	r16
    1d7a:	0f 90       	pop	r0
    1d7c:	0f be       	out	0x3f, r0	; 63
    1d7e:	0f 90       	pop	r0
    1d80:	1f 90       	pop	r1
    1d82:	18 95       	reti

00001d84 <__vector_22>:
    1d84:	1f 92       	push	r1
    1d86:	0f 92       	push	r0
    1d88:	0f b6       	in	r0, 0x3f	; 63
    1d8a:	0f 92       	push	r0
    1d8c:	11 24       	eor	r1, r1
    1d8e:	0f 93       	push	r16
    1d90:	1f 93       	push	r17
    1d92:	2f 93       	push	r18
    1d94:	3f 93       	push	r19
    1d96:	4f 93       	push	r20
    1d98:	5f 93       	push	r21
    1d9a:	6f 93       	push	r22
    1d9c:	7f 93       	push	r23
    1d9e:	8f 93       	push	r24
    1da0:	9f 93       	push	r25
    1da2:	af 93       	push	r26
    1da4:	bf 93       	push	r27
    1da6:	ef 93       	push	r30
    1da8:	ff 93       	push	r31
    1daa:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
    1dae:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <__data_end+0x1>
    1db2:	ac 01       	movw	r20, r24
    1db4:	09 2e       	mov	r0, r25
    1db6:	00 0c       	add	r0, r0
    1db8:	66 0b       	sbc	r22, r22
    1dba:	77 0b       	sbc	r23, r23
    1dbc:	9a 01       	movw	r18, r20
    1dbe:	11 27       	eor	r17, r17
    1dc0:	00 27       	eor	r16, r16
    1dc2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1dc6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1dca:	60 e0       	ldi	r22, 0x00	; 0
    1dcc:	70 e0       	ldi	r23, 0x00	; 0
    1dce:	40 2b       	or	r20, r16
    1dd0:	51 2b       	or	r21, r17
    1dd2:	62 2b       	or	r22, r18
    1dd4:	73 2b       	or	r23, r19
    1dd6:	40 93 7a 01 	sts	0x017A, r20	; 0x80017a <timestamp>
    1dda:	50 93 7b 01 	sts	0x017B, r21	; 0x80017b <timestamp+0x1>
    1dde:	60 93 7c 01 	sts	0x017C, r22	; 0x80017c <timestamp+0x2>
    1de2:	70 93 7d 01 	sts	0x017D, r23	; 0x80017d <timestamp+0x3>
    1de6:	b0 9b       	sbis	0x16, 0	; 22
    1de8:	1a c0       	rjmp	.+52     	; 0x1e1e <__vector_22+0x9a>
    1dea:	01 96       	adiw	r24, 0x01	; 1
    1dec:	09 2e       	mov	r0, r25
    1dee:	00 0c       	add	r0, r0
    1df0:	aa 0b       	sbc	r26, r26
    1df2:	bb 0b       	sbc	r27, r27
    1df4:	bc 01       	movw	r22, r24
    1df6:	55 27       	eor	r21, r21
    1df8:	44 27       	eor	r20, r20
    1dfa:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1dfe:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1e02:	a0 e0       	ldi	r26, 0x00	; 0
    1e04:	b0 e0       	ldi	r27, 0x00	; 0
    1e06:	84 2b       	or	r24, r20
    1e08:	95 2b       	or	r25, r21
    1e0a:	a6 2b       	or	r26, r22
    1e0c:	b7 2b       	or	r27, r23
    1e0e:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    1e12:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    1e16:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    1e1a:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    1e1e:	e0 91 3c 02 	lds	r30, 0x023C	; 0x80023c <mtable+0x22>
    1e22:	f0 91 3d 02 	lds	r31, 0x023D	; 0x80023d <mtable+0x23>
    1e26:	30 97       	sbiw	r30, 0x00	; 0
    1e28:	39 f0       	breq	.+14     	; 0x1e38 <__vector_22+0xb4>
    1e2a:	61 e1       	ldi	r22, 0x11	; 17
    1e2c:	70 e0       	ldi	r23, 0x00	; 0
    1e2e:	80 91 a4 01 	lds	r24, 0x01A4	; 0x8001a4 <otable+0x22>
    1e32:	90 91 a5 01 	lds	r25, 0x01A5	; 0x8001a5 <otable+0x23>
    1e36:	09 95       	icall
    1e38:	0e 94 2f 07 	call	0xe5e	; 0xe5e <schedule>
    1e3c:	ff 91       	pop	r31
    1e3e:	ef 91       	pop	r30
    1e40:	bf 91       	pop	r27
    1e42:	af 91       	pop	r26
    1e44:	9f 91       	pop	r25
    1e46:	8f 91       	pop	r24
    1e48:	7f 91       	pop	r23
    1e4a:	6f 91       	pop	r22
    1e4c:	5f 91       	pop	r21
    1e4e:	4f 91       	pop	r20
    1e50:	3f 91       	pop	r19
    1e52:	2f 91       	pop	r18
    1e54:	1f 91       	pop	r17
    1e56:	0f 91       	pop	r16
    1e58:	0f 90       	pop	r0
    1e5a:	0f be       	out	0x3f, r0	; 63
    1e5c:	0f 90       	pop	r0
    1e5e:	1f 90       	pop	r1
    1e60:	18 95       	reti

00001e62 <idle>:
    1e62:	0e 94 2f 07 	call	0xe5e	; 0xe5e <schedule>
    1e66:	78 94       	sei
    1e68:	81 e0       	ldi	r24, 0x01	; 1
    1e6a:	83 bf       	out	0x33, r24	; 51
    1e6c:	88 95       	sleep
    1e6e:	fc cf       	rjmp	.-8      	; 0x1e68 <idle+0x6>

00001e70 <__vector_9>:
    1e70:	1f 92       	push	r1
    1e72:	0f 92       	push	r0
    1e74:	0f b6       	in	r0, 0x3f	; 63
    1e76:	0f 92       	push	r0
    1e78:	11 24       	eor	r1, r1
    1e7a:	2f 93       	push	r18
    1e7c:	3f 93       	push	r19
    1e7e:	4f 93       	push	r20
    1e80:	5f 93       	push	r21
    1e82:	6f 93       	push	r22
    1e84:	7f 93       	push	r23
    1e86:	8f 93       	push	r24
    1e88:	9f 93       	push	r25
    1e8a:	ef 93       	push	r30
    1e8c:	ff 93       	push	r31
    1e8e:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
    1e92:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <__data_end+0x1>
    1e96:	01 96       	adiw	r24, 0x01	; 1
    1e98:	90 93 79 01 	sts	0x0179, r25	; 0x800179 <__data_end+0x1>
    1e9c:	80 93 78 01 	sts	0x0178, r24	; 0x800178 <__data_end>
    1ea0:	e0 91 7e 01 	lds	r30, 0x017E	; 0x80017e <timerQ>
    1ea4:	f0 91 7f 01 	lds	r31, 0x017F	; 0x80017f <timerQ+0x1>
    1ea8:	30 97       	sbiw	r30, 0x00	; 0
    1eaa:	01 f1       	breq	.+64     	; 0x1eec <__vector_9+0x7c>
    1eac:	42 81       	ldd	r20, Z+2	; 0x02
    1eae:	53 81       	ldd	r21, Z+3	; 0x03
    1eb0:	64 81       	ldd	r22, Z+4	; 0x04
    1eb2:	75 81       	ldd	r23, Z+5	; 0x05
    1eb4:	86 17       	cp	r24, r22
    1eb6:	97 07       	cpc	r25, r23
    1eb8:	c9 f4       	brne	.+50     	; 0x1eec <__vector_9+0x7c>
    1eba:	ca 01       	movw	r24, r20
    1ebc:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1ec0:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1ec4:	42 1b       	sub	r20, r18
    1ec6:	53 0b       	sbc	r21, r19
    1ec8:	41 30       	cpi	r20, 0x01	; 1
    1eca:	51 05       	cpc	r21, r1
    1ecc:	29 f4       	brne	.+10     	; 0x1ed8 <__vector_9+0x68>
    1ece:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1ed2:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1ed6:	01 96       	adiw	r24, 0x01	; 1
    1ed8:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1edc:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1ee0:	ef e6       	ldi	r30, 0x6F	; 111
    1ee2:	f0 e0       	ldi	r31, 0x00	; 0
    1ee4:	80 81       	ld	r24, Z
    1ee6:	82 60       	ori	r24, 0x02	; 2
    1ee8:	80 83       	st	Z, r24
    1eea:	05 c0       	rjmp	.+10     	; 0x1ef6 <__vector_9+0x86>
    1eec:	ef e6       	ldi	r30, 0x6F	; 111
    1eee:	f0 e0       	ldi	r31, 0x00	; 0
    1ef0:	80 81       	ld	r24, Z
    1ef2:	8d 7f       	andi	r24, 0xFD	; 253
    1ef4:	80 83       	st	Z, r24
    1ef6:	ff 91       	pop	r31
    1ef8:	ef 91       	pop	r30
    1efa:	9f 91       	pop	r25
    1efc:	8f 91       	pop	r24
    1efe:	7f 91       	pop	r23
    1f00:	6f 91       	pop	r22
    1f02:	5f 91       	pop	r21
    1f04:	4f 91       	pop	r20
    1f06:	3f 91       	pop	r19
    1f08:	2f 91       	pop	r18
    1f0a:	0f 90       	pop	r0
    1f0c:	0f be       	out	0x3f, r0	; 63
    1f0e:	0f 90       	pop	r0
    1f10:	1f 90       	pop	r1
    1f12:	18 95       	reti

00001f14 <__vector_7>:
    1f14:	1f 92       	push	r1
    1f16:	0f 92       	push	r0
    1f18:	0f b6       	in	r0, 0x3f	; 63
    1f1a:	0f 92       	push	r0
    1f1c:	11 24       	eor	r1, r1
    1f1e:	cf 92       	push	r12
    1f20:	df 92       	push	r13
    1f22:	ef 92       	push	r14
    1f24:	ff 92       	push	r15
    1f26:	2f 93       	push	r18
    1f28:	3f 93       	push	r19
    1f2a:	4f 93       	push	r20
    1f2c:	5f 93       	push	r21
    1f2e:	6f 93       	push	r22
    1f30:	7f 93       	push	r23
    1f32:	8f 93       	push	r24
    1f34:	9f 93       	push	r25
    1f36:	af 93       	push	r26
    1f38:	bf 93       	push	r27
    1f3a:	ef 93       	push	r30
    1f3c:	ff 93       	push	r31
    1f3e:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
    1f42:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <__data_end+0x1>
    1f46:	6c 01       	movw	r12, r24
    1f48:	09 2e       	mov	r0, r25
    1f4a:	00 0c       	add	r0, r0
    1f4c:	ee 08       	sbc	r14, r14
    1f4e:	ff 08       	sbc	r15, r15
    1f50:	76 01       	movw	r14, r12
    1f52:	dd 24       	eor	r13, r13
    1f54:	cc 24       	eor	r12, r12
    1f56:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1f5a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1f5e:	60 e0       	ldi	r22, 0x00	; 0
    1f60:	70 e0       	ldi	r23, 0x00	; 0
    1f62:	c4 2a       	or	r12, r20
    1f64:	d5 2a       	or	r13, r21
    1f66:	e6 2a       	or	r14, r22
    1f68:	f7 2a       	or	r15, r23
    1f6a:	b0 9b       	sbis	0x16, 0	; 22
    1f6c:	1e c0       	rjmp	.+60     	; 0x1faa <__vector_7+0x96>
    1f6e:	6c 01       	movw	r12, r24
    1f70:	2f ef       	ldi	r18, 0xFF	; 255
    1f72:	c2 1a       	sub	r12, r18
    1f74:	d2 0a       	sbc	r13, r18
    1f76:	0d 2c       	mov	r0, r13
    1f78:	00 0c       	add	r0, r0
    1f7a:	ee 08       	sbc	r14, r14
    1f7c:	ff 08       	sbc	r15, r15
    1f7e:	d6 01       	movw	r26, r12
    1f80:	99 27       	eor	r25, r25
    1f82:	88 27       	eor	r24, r24
    1f84:	c0 90 84 00 	lds	r12, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1f88:	d0 90 85 00 	lds	r13, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1f8c:	e1 2c       	mov	r14, r1
    1f8e:	f1 2c       	mov	r15, r1
    1f90:	c8 2a       	or	r12, r24
    1f92:	d9 2a       	or	r13, r25
    1f94:	ea 2a       	or	r14, r26
    1f96:	fb 2a       	or	r15, r27
    1f98:	08 c0       	rjmp	.+16     	; 0x1faa <__vector_7+0x96>
    1f9a:	8e e7       	ldi	r24, 0x7E	; 126
    1f9c:	91 e0       	ldi	r25, 0x01	; 1
    1f9e:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <dequeue>
    1fa2:	60 e8       	ldi	r22, 0x80	; 128
    1fa4:	71 e0       	ldi	r23, 0x01	; 1
    1fa6:	0e 94 98 06 	call	0xd30	; 0xd30 <enqueueByDeadline>
    1faa:	e0 91 7e 01 	lds	r30, 0x017E	; 0x80017e <timerQ>
    1fae:	f0 91 7f 01 	lds	r31, 0x017F	; 0x80017f <timerQ+0x1>
    1fb2:	30 97       	sbiw	r30, 0x00	; 0
    1fb4:	69 f0       	breq	.+26     	; 0x1fd0 <__vector_7+0xbc>
    1fb6:	82 81       	ldd	r24, Z+2	; 0x02
    1fb8:	93 81       	ldd	r25, Z+3	; 0x03
    1fba:	a4 81       	ldd	r26, Z+4	; 0x04
    1fbc:	b5 81       	ldd	r27, Z+5	; 0x05
    1fbe:	8c 19       	sub	r24, r12
    1fc0:	9d 09       	sbc	r25, r13
    1fc2:	ae 09       	sbc	r26, r14
    1fc4:	bf 09       	sbc	r27, r15
    1fc6:	18 16       	cp	r1, r24
    1fc8:	19 06       	cpc	r1, r25
    1fca:	1a 06       	cpc	r1, r26
    1fcc:	1b 06       	cpc	r1, r27
    1fce:	2c f7       	brge	.-54     	; 0x1f9a <__vector_7+0x86>
    1fd0:	30 97       	sbiw	r30, 0x00	; 0
    1fd2:	21 f1       	breq	.+72     	; 0x201c <__vector_7+0x108>
    1fd4:	82 81       	ldd	r24, Z+2	; 0x02
    1fd6:	93 81       	ldd	r25, Z+3	; 0x03
    1fd8:	a4 81       	ldd	r26, Z+4	; 0x04
    1fda:	b5 81       	ldd	r27, Z+5	; 0x05
    1fdc:	20 91 78 01 	lds	r18, 0x0178	; 0x800178 <__data_end>
    1fe0:	30 91 79 01 	lds	r19, 0x0179	; 0x800179 <__data_end+0x1>
    1fe4:	2a 17       	cp	r18, r26
    1fe6:	3b 07       	cpc	r19, r27
    1fe8:	c9 f4       	brne	.+50     	; 0x201c <__vector_7+0x108>
    1fea:	9c 01       	movw	r18, r24
    1fec:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1ff0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1ff4:	84 1b       	sub	r24, r20
    1ff6:	95 0b       	sbc	r25, r21
    1ff8:	01 97       	sbiw	r24, 0x01	; 1
    1ffa:	31 f4       	brne	.+12     	; 0x2008 <__vector_7+0xf4>
    1ffc:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    2000:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    2004:	2f 5f       	subi	r18, 0xFF	; 255
    2006:	3f 4f       	sbci	r19, 0xFF	; 255
    2008:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    200c:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    2010:	ef e6       	ldi	r30, 0x6F	; 111
    2012:	f0 e0       	ldi	r31, 0x00	; 0
    2014:	80 81       	ld	r24, Z
    2016:	82 60       	ori	r24, 0x02	; 2
    2018:	80 83       	st	Z, r24
    201a:	05 c0       	rjmp	.+10     	; 0x2026 <__vector_7+0x112>
    201c:	ef e6       	ldi	r30, 0x6F	; 111
    201e:	f0 e0       	ldi	r31, 0x00	; 0
    2020:	80 81       	ld	r24, Z
    2022:	8d 7f       	andi	r24, 0xFD	; 253
    2024:	80 83       	st	Z, r24
    2026:	0e 94 2f 07 	call	0xe5e	; 0xe5e <schedule>
    202a:	ff 91       	pop	r31
    202c:	ef 91       	pop	r30
    202e:	bf 91       	pop	r27
    2030:	af 91       	pop	r26
    2032:	9f 91       	pop	r25
    2034:	8f 91       	pop	r24
    2036:	7f 91       	pop	r23
    2038:	6f 91       	pop	r22
    203a:	5f 91       	pop	r21
    203c:	4f 91       	pop	r20
    203e:	3f 91       	pop	r19
    2040:	2f 91       	pop	r18
    2042:	ff 90       	pop	r15
    2044:	ef 90       	pop	r14
    2046:	df 90       	pop	r13
    2048:	cf 90       	pop	r12
    204a:	0f 90       	pop	r0
    204c:	0f be       	out	0x3f, r0	; 63
    204e:	0f 90       	pop	r0
    2050:	1f 90       	pop	r1
    2052:	18 95       	reti

00002054 <async>:
    2054:	3f 92       	push	r3
    2056:	4f 92       	push	r4
    2058:	5f 92       	push	r5
    205a:	6f 92       	push	r6
    205c:	7f 92       	push	r7
    205e:	8f 92       	push	r8
    2060:	9f 92       	push	r9
    2062:	af 92       	push	r10
    2064:	bf 92       	push	r11
    2066:	cf 92       	push	r12
    2068:	df 92       	push	r13
    206a:	ef 92       	push	r14
    206c:	ff 92       	push	r15
    206e:	0f 93       	push	r16
    2070:	1f 93       	push	r17
    2072:	cf 93       	push	r28
    2074:	df 93       	push	r29
    2076:	2b 01       	movw	r4, r22
    2078:	3c 01       	movw	r6, r24
    207a:	49 01       	movw	r8, r18
    207c:	5a 01       	movw	r10, r20
    207e:	8f b7       	in	r24, 0x3f	; 63
    2080:	80 78       	andi	r24, 0x80	; 128
    2082:	38 2e       	mov	r3, r24
    2084:	f8 94       	cli
    2086:	86 e7       	ldi	r24, 0x76	; 118
    2088:	91 e0       	ldi	r25, 0x01	; 1
    208a:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <dequeue>
    208e:	ec 01       	movw	r28, r24
    2090:	1b 87       	std	Y+11, r17	; 0x0b
    2092:	0a 87       	std	Y+10, r16	; 0x0a
    2094:	fd 86       	std	Y+13, r15	; 0x0d
    2096:	ec 86       	std	Y+12, r14	; 0x0c
    2098:	df 86       	std	Y+15, r13	; 0x0f
    209a:	ce 86       	std	Y+14, r12	; 0x0e
    209c:	33 20       	and	r3, r3
    209e:	61 f0       	breq	.+24     	; 0x20b8 <async+0x64>
    20a0:	e0 91 70 01 	lds	r30, 0x0170	; 0x800170 <current>
    20a4:	f0 91 71 01 	lds	r31, 0x0171	; 0x800171 <current+0x1>
    20a8:	02 80       	ldd	r0, Z+2	; 0x02
    20aa:	f3 81       	ldd	r31, Z+3	; 0x03
    20ac:	e0 2d       	mov	r30, r0
    20ae:	82 81       	ldd	r24, Z+2	; 0x02
    20b0:	93 81       	ldd	r25, Z+3	; 0x03
    20b2:	a4 81       	ldd	r26, Z+4	; 0x04
    20b4:	b5 81       	ldd	r27, Z+5	; 0x05
    20b6:	08 c0       	rjmp	.+16     	; 0x20c8 <async+0x74>
    20b8:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <timestamp>
    20bc:	90 91 7b 01 	lds	r25, 0x017B	; 0x80017b <timestamp+0x1>
    20c0:	a0 91 7c 01 	lds	r26, 0x017C	; 0x80017c <timestamp+0x2>
    20c4:	b0 91 7d 01 	lds	r27, 0x017D	; 0x80017d <timestamp+0x3>
    20c8:	48 0e       	add	r4, r24
    20ca:	59 1e       	adc	r5, r25
    20cc:	6a 1e       	adc	r6, r26
    20ce:	7b 1e       	adc	r7, r27
    20d0:	4a 82       	std	Y+2, r4	; 0x02
    20d2:	5b 82       	std	Y+3, r5	; 0x03
    20d4:	6c 82       	std	Y+4, r6	; 0x04
    20d6:	7d 82       	std	Y+5, r7	; 0x05
    20d8:	18 14       	cp	r1, r8
    20da:	19 04       	cpc	r1, r9
    20dc:	1a 04       	cpc	r1, r10
    20de:	1b 04       	cpc	r1, r11
    20e0:	44 f0       	brlt	.+16     	; 0x20f2 <async+0x9e>
    20e2:	0f 2e       	mov	r0, r31
    20e4:	88 24       	eor	r8, r8
    20e6:	8a 94       	dec	r8
    20e8:	98 2c       	mov	r9, r8
    20ea:	a8 2c       	mov	r10, r8
    20ec:	ff e7       	ldi	r31, 0x7F	; 127
    20ee:	bf 2e       	mov	r11, r31
    20f0:	f0 2d       	mov	r31, r0
    20f2:	84 0c       	add	r8, r4
    20f4:	95 1c       	adc	r9, r5
    20f6:	a6 1c       	adc	r10, r6
    20f8:	b7 1c       	adc	r11, r7
    20fa:	8e 82       	std	Y+6, r8	; 0x06
    20fc:	9f 82       	std	Y+7, r9	; 0x07
    20fe:	a8 86       	std	Y+8, r10	; 0x08
    2100:	b9 86       	std	Y+9, r11	; 0x09
    2102:	20 91 78 01 	lds	r18, 0x0178	; 0x800178 <__data_end>
    2106:	30 91 79 01 	lds	r19, 0x0179	; 0x800179 <__data_end+0x1>
    210a:	c9 01       	movw	r24, r18
    210c:	03 2e       	mov	r0, r19
    210e:	00 0c       	add	r0, r0
    2110:	aa 0b       	sbc	r26, r26
    2112:	bb 0b       	sbc	r27, r27
    2114:	dc 01       	movw	r26, r24
    2116:	99 27       	eor	r25, r25
    2118:	88 27       	eor	r24, r24
    211a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    211e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    2122:	60 e0       	ldi	r22, 0x00	; 0
    2124:	70 e0       	ldi	r23, 0x00	; 0
    2126:	84 2b       	or	r24, r20
    2128:	95 2b       	or	r25, r21
    212a:	a6 2b       	or	r26, r22
    212c:	b7 2b       	or	r27, r23
    212e:	b0 9b       	sbis	0x16, 0	; 22
    2130:	13 c0       	rjmp	.+38     	; 0x2158 <async+0x104>
    2132:	c9 01       	movw	r24, r18
    2134:	01 96       	adiw	r24, 0x01	; 1
    2136:	09 2e       	mov	r0, r25
    2138:	00 0c       	add	r0, r0
    213a:	aa 0b       	sbc	r26, r26
    213c:	bb 0b       	sbc	r27, r27
    213e:	dc 01       	movw	r26, r24
    2140:	99 27       	eor	r25, r25
    2142:	88 27       	eor	r24, r24
    2144:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    2148:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    214c:	60 e0       	ldi	r22, 0x00	; 0
    214e:	70 e0       	ldi	r23, 0x00	; 0
    2150:	84 2b       	or	r24, r20
    2152:	95 2b       	or	r25, r21
    2154:	a6 2b       	or	r26, r22
    2156:	b7 2b       	or	r27, r23
    2158:	48 1a       	sub	r4, r24
    215a:	59 0a       	sbc	r5, r25
    215c:	6a 0a       	sbc	r6, r26
    215e:	7b 0a       	sbc	r7, r27
    2160:	14 14       	cp	r1, r4
    2162:	15 04       	cpc	r1, r5
    2164:	16 04       	cpc	r1, r6
    2166:	17 04       	cpc	r1, r7
    2168:	ac f5       	brge	.+106    	; 0x21d4 <async+0x180>
    216a:	6e e7       	ldi	r22, 0x7E	; 126
    216c:	71 e0       	ldi	r23, 0x01	; 1
    216e:	ce 01       	movw	r24, r28
    2170:	0e 94 c9 06 	call	0xd92	; 0xd92 <enqueueByBaseline>
    2174:	e0 91 7e 01 	lds	r30, 0x017E	; 0x80017e <timerQ>
    2178:	f0 91 7f 01 	lds	r31, 0x017F	; 0x80017f <timerQ+0x1>
    217c:	30 97       	sbiw	r30, 0x00	; 0
    217e:	21 f1       	breq	.+72     	; 0x21c8 <async+0x174>
    2180:	82 81       	ldd	r24, Z+2	; 0x02
    2182:	93 81       	ldd	r25, Z+3	; 0x03
    2184:	a4 81       	ldd	r26, Z+4	; 0x04
    2186:	b5 81       	ldd	r27, Z+5	; 0x05
    2188:	20 91 78 01 	lds	r18, 0x0178	; 0x800178 <__data_end>
    218c:	30 91 79 01 	lds	r19, 0x0179	; 0x800179 <__data_end+0x1>
    2190:	2a 17       	cp	r18, r26
    2192:	3b 07       	cpc	r19, r27
    2194:	c9 f4       	brne	.+50     	; 0x21c8 <async+0x174>
    2196:	9c 01       	movw	r18, r24
    2198:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    219c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    21a0:	84 1b       	sub	r24, r20
    21a2:	95 0b       	sbc	r25, r21
    21a4:	01 97       	sbiw	r24, 0x01	; 1
    21a6:	31 f4       	brne	.+12     	; 0x21b4 <async+0x160>
    21a8:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    21ac:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    21b0:	2f 5f       	subi	r18, 0xFF	; 255
    21b2:	3f 4f       	sbci	r19, 0xFF	; 255
    21b4:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    21b8:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    21bc:	ef e6       	ldi	r30, 0x6F	; 111
    21be:	f0 e0       	ldi	r31, 0x00	; 0
    21c0:	80 81       	ld	r24, Z
    21c2:	82 60       	ori	r24, 0x02	; 2
    21c4:	80 83       	st	Z, r24
    21c6:	39 c0       	rjmp	.+114    	; 0x223a <async+0x1e6>
    21c8:	ef e6       	ldi	r30, 0x6F	; 111
    21ca:	f0 e0       	ldi	r31, 0x00	; 0
    21cc:	80 81       	ld	r24, Z
    21ce:	8d 7f       	andi	r24, 0xFD	; 253
    21d0:	80 83       	st	Z, r24
    21d2:	33 c0       	rjmp	.+102    	; 0x223a <async+0x1e6>
    21d4:	60 e8       	ldi	r22, 0x80	; 128
    21d6:	71 e0       	ldi	r23, 0x01	; 1
    21d8:	ce 01       	movw	r24, r28
    21da:	0e 94 98 06 	call	0xd30	; 0xd30 <enqueueByDeadline>
    21de:	33 20       	and	r3, r3
    21e0:	61 f1       	breq	.+88     	; 0x223a <async+0x1e6>
    21e2:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <threadPool>
    21e6:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <threadPool+0x1>
    21ea:	89 2b       	or	r24, r25
    21ec:	31 f1       	breq	.+76     	; 0x223a <async+0x1e6>
    21ee:	e0 91 80 01 	lds	r30, 0x0180	; 0x800180 <msgQ>
    21f2:	f0 91 81 01 	lds	r31, 0x0181	; 0x800181 <msgQ+0x1>
    21f6:	86 81       	ldd	r24, Z+6	; 0x06
    21f8:	97 81       	ldd	r25, Z+7	; 0x07
    21fa:	a0 85       	ldd	r26, Z+8	; 0x08
    21fc:	b1 85       	ldd	r27, Z+9	; 0x09
    21fe:	e0 91 72 01 	lds	r30, 0x0172	; 0x800172 <activeStack>
    2202:	f0 91 73 01 	lds	r31, 0x0173	; 0x800173 <activeStack+0x1>
    2206:	02 80       	ldd	r0, Z+2	; 0x02
    2208:	f3 81       	ldd	r31, Z+3	; 0x03
    220a:	e0 2d       	mov	r30, r0
    220c:	46 81       	ldd	r20, Z+6	; 0x06
    220e:	57 81       	ldd	r21, Z+7	; 0x07
    2210:	60 85       	ldd	r22, Z+8	; 0x08
    2212:	71 85       	ldd	r23, Z+9	; 0x09
    2214:	84 1b       	sub	r24, r20
    2216:	95 0b       	sbc	r25, r21
    2218:	a6 0b       	sbc	r26, r22
    221a:	b7 0b       	sbc	r27, r23
    221c:	72 f4       	brpl	.+28     	; 0x223a <async+0x1e6>
    221e:	84 e7       	ldi	r24, 0x74	; 116
    2220:	91 e0       	ldi	r25, 0x01	; 1
    2222:	0e 94 25 07 	call	0xe4a	; 0xe4a <pop>
    2226:	62 e7       	ldi	r22, 0x72	; 114
    2228:	71 e0       	ldi	r23, 0x01	; 1
    222a:	0e 94 1b 07 	call	0xe36	; 0xe36 <push>
    222e:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <activeStack>
    2232:	90 91 73 01 	lds	r25, 0x0173	; 0x800173 <activeStack+0x1>
    2236:	0e 94 78 06 	call	0xcf0	; 0xcf0 <dispatch>
    223a:	33 20       	and	r3, r3
    223c:	09 f0       	breq	.+2      	; 0x2240 <async+0x1ec>
    223e:	78 94       	sei
    2240:	ce 01       	movw	r24, r28
    2242:	df 91       	pop	r29
    2244:	cf 91       	pop	r28
    2246:	1f 91       	pop	r17
    2248:	0f 91       	pop	r16
    224a:	ff 90       	pop	r15
    224c:	ef 90       	pop	r14
    224e:	df 90       	pop	r13
    2250:	cf 90       	pop	r12
    2252:	bf 90       	pop	r11
    2254:	af 90       	pop	r10
    2256:	9f 90       	pop	r9
    2258:	8f 90       	pop	r8
    225a:	7f 90       	pop	r7
    225c:	6f 90       	pop	r6
    225e:	5f 90       	pop	r5
    2260:	4f 90       	pop	r4
    2262:	3f 90       	pop	r3
    2264:	08 95       	ret

00002266 <sync>:
    2266:	cf 92       	push	r12
    2268:	df 92       	push	r13
    226a:	ef 92       	push	r14
    226c:	ff 92       	push	r15
    226e:	0f 93       	push	r16
    2270:	1f 93       	push	r17
    2272:	cf 93       	push	r28
    2274:	df 93       	push	r29
    2276:	ec 01       	movw	r28, r24
    2278:	7b 01       	movw	r14, r22
    227a:	6a 01       	movw	r12, r20
    227c:	1f b7       	in	r17, 0x3f	; 63
    227e:	10 78       	andi	r17, 0x80	; 128
    2280:	f8 94       	cli
    2282:	a8 81       	ld	r26, Y
    2284:	b9 81       	ldd	r27, Y+1	; 0x01
    2286:	10 97       	sbiw	r26, 0x00	; 0
    2288:	19 f4       	brne	.+6      	; 0x2290 <sync+0x2a>
    228a:	35 c0       	rjmp	.+106    	; 0x22f6 <sync+0x90>
    228c:	a0 81       	ld	r26, Z
    228e:	b1 81       	ldd	r27, Z+1	; 0x01
    2290:	14 96       	adiw	r26, 0x04	; 4
    2292:	ed 91       	ld	r30, X+
    2294:	fc 91       	ld	r31, X
    2296:	15 97       	sbiw	r26, 0x05	; 5
    2298:	30 97       	sbiw	r30, 0x00	; 0
    229a:	c1 f7       	brne	.-16     	; 0x228c <sync+0x26>
    229c:	20 91 70 01 	lds	r18, 0x0170	; 0x800170 <current>
    22a0:	30 91 71 01 	lds	r19, 0x0171	; 0x800171 <current+0x1>
    22a4:	a2 17       	cp	r26, r18
    22a6:	b3 07       	cpc	r27, r19
    22a8:	11 f0       	breq	.+4      	; 0x22ae <sync+0x48>
    22aa:	11 11       	cpse	r17, r1
    22ac:	07 c0       	rjmp	.+14     	; 0x22bc <sync+0x56>
    22ae:	11 23       	and	r17, r17
    22b0:	09 f4       	brne	.+2      	; 0x22b4 <sync+0x4e>
    22b2:	4a c0       	rjmp	.+148    	; 0x2348 <sync+0xe2>
    22b4:	78 94       	sei
    22b6:	8f ef       	ldi	r24, 0xFF	; 255
    22b8:	9f ef       	ldi	r25, 0xFF	; 255
    22ba:	4e c0       	rjmp	.+156    	; 0x2358 <sync+0xf2>
    22bc:	8a 81       	ldd	r24, Y+2	; 0x02
    22be:	9b 81       	ldd	r25, Y+3	; 0x03
    22c0:	00 97       	sbiw	r24, 0x00	; 0
    22c2:	19 f0       	breq	.+6      	; 0x22ca <sync+0x64>
    22c4:	fc 01       	movw	r30, r24
    22c6:	15 82       	std	Z+5, r1	; 0x05
    22c8:	14 82       	std	Z+4, r1	; 0x04
    22ca:	3b 83       	std	Y+3, r19	; 0x03
    22cc:	2a 83       	std	Y+2, r18	; 0x02
    22ce:	f9 01       	movw	r30, r18
    22d0:	d5 83       	std	Z+5, r29	; 0x05
    22d2:	c4 83       	std	Z+4, r28	; 0x04
    22d4:	cd 01       	movw	r24, r26
    22d6:	0e 94 78 06 	call	0xcf0	; 0xcf0 <dispatch>
    22da:	e0 91 70 01 	lds	r30, 0x0170	; 0x800170 <current>
    22de:	f0 91 71 01 	lds	r31, 0x0171	; 0x800171 <current+0x1>
    22e2:	82 81       	ldd	r24, Z+2	; 0x02
    22e4:	93 81       	ldd	r25, Z+3	; 0x03
    22e6:	89 2b       	or	r24, r25
    22e8:	31 f4       	brne	.+12     	; 0x22f6 <sync+0x90>
    22ea:	11 23       	and	r17, r17
    22ec:	81 f1       	breq	.+96     	; 0x234e <sync+0xe8>
    22ee:	78 94       	sei
    22f0:	80 e0       	ldi	r24, 0x00	; 0
    22f2:	90 e0       	ldi	r25, 0x00	; 0
    22f4:	31 c0       	rjmp	.+98     	; 0x2358 <sync+0xf2>
    22f6:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <current>
    22fa:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <current+0x1>
    22fe:	99 83       	std	Y+1, r25	; 0x01
    2300:	88 83       	st	Y, r24
    2302:	11 23       	and	r17, r17
    2304:	29 f0       	breq	.+10     	; 0x2310 <sync+0xaa>
    2306:	8a 81       	ldd	r24, Y+2	; 0x02
    2308:	9b 81       	ldd	r25, Y+3	; 0x03
    230a:	01 97       	sbiw	r24, 0x01	; 1
    230c:	09 f0       	breq	.+2      	; 0x2310 <sync+0xaa>
    230e:	78 94       	sei
    2310:	b6 01       	movw	r22, r12
    2312:	ce 01       	movw	r24, r28
    2314:	f7 01       	movw	r30, r14
    2316:	09 95       	icall
    2318:	f8 2e       	mov	r15, r24
    231a:	09 2f       	mov	r16, r25
    231c:	8f b7       	in	r24, 0x3f	; 63
    231e:	f8 94       	cli
    2320:	19 82       	std	Y+1, r1	; 0x01
    2322:	18 82       	st	Y, r1
    2324:	8a 81       	ldd	r24, Y+2	; 0x02
    2326:	9b 81       	ldd	r25, Y+3	; 0x03
    2328:	82 30       	cpi	r24, 0x02	; 2
    232a:	91 05       	cpc	r25, r1
    232c:	38 f0       	brcs	.+14     	; 0x233c <sync+0xd6>
    232e:	1b 82       	std	Y+3, r1	; 0x03
    2330:	1a 82       	std	Y+2, r1	; 0x02
    2332:	fc 01       	movw	r30, r24
    2334:	15 82       	std	Z+5, r1	; 0x05
    2336:	14 82       	std	Z+4, r1	; 0x04
    2338:	0e 94 78 06 	call	0xcf0	; 0xcf0 <dispatch>
    233c:	11 23       	and	r17, r17
    233e:	51 f0       	breq	.+20     	; 0x2354 <sync+0xee>
    2340:	78 94       	sei
    2342:	8f 2d       	mov	r24, r15
    2344:	90 2f       	mov	r25, r16
    2346:	08 c0       	rjmp	.+16     	; 0x2358 <sync+0xf2>
    2348:	8f ef       	ldi	r24, 0xFF	; 255
    234a:	9f ef       	ldi	r25, 0xFF	; 255
    234c:	05 c0       	rjmp	.+10     	; 0x2358 <sync+0xf2>
    234e:	80 e0       	ldi	r24, 0x00	; 0
    2350:	90 e0       	ldi	r25, 0x00	; 0
    2352:	02 c0       	rjmp	.+4      	; 0x2358 <sync+0xf2>
    2354:	8f 2d       	mov	r24, r15
    2356:	90 2f       	mov	r25, r16
    2358:	df 91       	pop	r29
    235a:	cf 91       	pop	r28
    235c:	1f 91       	pop	r17
    235e:	0f 91       	pop	r16
    2360:	ff 90       	pop	r15
    2362:	ef 90       	pop	r14
    2364:	df 90       	pop	r13
    2366:	cf 90       	pop	r12
    2368:	08 95       	ret

0000236a <run>:
    236a:	00 91 70 01 	lds	r16, 0x0170	; 0x800170 <current>
    236e:	10 91 71 01 	lds	r17, 0x0171	; 0x800171 <current+0x1>
    2372:	80 e8       	ldi	r24, 0x80	; 128
    2374:	91 e0       	ldi	r25, 0x01	; 1
    2376:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <dequeue>
    237a:	ec 01       	movw	r28, r24
    237c:	f8 01       	movw	r30, r16
    237e:	93 83       	std	Z+3, r25	; 0x03
    2380:	82 83       	std	Z+2, r24	; 0x02
    2382:	78 94       	sei
    2384:	6c 85       	ldd	r22, Y+12	; 0x0c
    2386:	7d 85       	ldd	r23, Y+13	; 0x0d
    2388:	4e 85       	ldd	r20, Y+14	; 0x0e
    238a:	5f 85       	ldd	r21, Y+15	; 0x0f
    238c:	8a 85       	ldd	r24, Y+10	; 0x0a
    238e:	9b 85       	ldd	r25, Y+11	; 0x0b
    2390:	0e 94 33 11 	call	0x2266	; 0x2266 <sync>
    2394:	8f b7       	in	r24, 0x3f	; 63
    2396:	f8 94       	cli
    2398:	66 e7       	ldi	r22, 0x76	; 118
    239a:	71 e0       	ldi	r23, 0x01	; 1
    239c:	ce 01       	movw	r24, r28
    239e:	0e 94 11 07 	call	0xe22	; 0xe22 <insert>
    23a2:	e0 91 72 01 	lds	r30, 0x0172	; 0x800172 <activeStack>
    23a6:	f0 91 73 01 	lds	r31, 0x0173	; 0x800173 <activeStack+0x1>
    23aa:	01 90       	ld	r0, Z+
    23ac:	f0 81       	ld	r31, Z
    23ae:	e0 2d       	mov	r30, r0
    23b0:	c2 81       	ldd	r28, Z+2	; 0x02
    23b2:	d3 81       	ldd	r29, Z+3	; 0x03
    23b4:	e0 91 80 01 	lds	r30, 0x0180	; 0x800180 <msgQ>
    23b8:	f0 91 81 01 	lds	r31, 0x0181	; 0x800181 <msgQ+0x1>
    23bc:	30 97       	sbiw	r30, 0x00	; 0
    23be:	a1 f0       	breq	.+40     	; 0x23e8 <run+0x7e>
    23c0:	20 97       	sbiw	r28, 0x00	; 0
    23c2:	99 f2       	breq	.-90     	; 0x236a <run>
    23c4:	86 81       	ldd	r24, Z+6	; 0x06
    23c6:	97 81       	ldd	r25, Z+7	; 0x07
    23c8:	a0 85       	ldd	r26, Z+8	; 0x08
    23ca:	b1 85       	ldd	r27, Z+9	; 0x09
    23cc:	4e 81       	ldd	r20, Y+6	; 0x06
    23ce:	5f 81       	ldd	r21, Y+7	; 0x07
    23d0:	68 85       	ldd	r22, Y+8	; 0x08
    23d2:	79 85       	ldd	r23, Y+9	; 0x09
    23d4:	84 1b       	sub	r24, r20
    23d6:	95 0b       	sbc	r25, r21
    23d8:	a6 0b       	sbc	r26, r22
    23da:	b7 0b       	sbc	r27, r23
    23dc:	18 16       	cp	r1, r24
    23de:	19 06       	cpc	r1, r25
    23e0:	1a 06       	cpc	r1, r26
    23e2:	1b 06       	cpc	r1, r27
    23e4:	0c f0       	brlt	.+2      	; 0x23e8 <run+0x7e>
    23e6:	c1 cf       	rjmp	.-126    	; 0x236a <run>
    23e8:	82 e7       	ldi	r24, 0x72	; 114
    23ea:	91 e0       	ldi	r25, 0x01	; 1
    23ec:	0e 94 25 07 	call	0xe4a	; 0xe4a <pop>
    23f0:	64 e7       	ldi	r22, 0x74	; 116
    23f2:	71 e0       	ldi	r23, 0x01	; 1
    23f4:	0e 94 1b 07 	call	0xe36	; 0xe36 <push>
    23f8:	a0 91 72 01 	lds	r26, 0x0172	; 0x800172 <activeStack>
    23fc:	b0 91 73 01 	lds	r27, 0x0173	; 0x800173 <activeStack+0x1>
    2400:	02 c0       	rjmp	.+4      	; 0x2406 <run+0x9c>
    2402:	a0 81       	ld	r26, Z
    2404:	b1 81       	ldd	r27, Z+1	; 0x01
    2406:	14 96       	adiw	r26, 0x04	; 4
    2408:	ed 91       	ld	r30, X+
    240a:	fc 91       	ld	r31, X
    240c:	15 97       	sbiw	r26, 0x05	; 5
    240e:	30 97       	sbiw	r30, 0x00	; 0
    2410:	c1 f7       	brne	.-16     	; 0x2402 <run+0x98>
    2412:	cd 01       	movw	r24, r26
    2414:	0e 94 78 06 	call	0xcf0	; 0xcf0 <dispatch>
    2418:	a8 cf       	rjmp	.-176    	; 0x236a <run>

0000241a <install>:
    thread0.msg = NULL;
    
    TIMER_INIT();
}

void install(Object *obj, Method m, enum Vector i) {
    241a:	fc 01       	movw	r30, r24
    if (i >= 0 && i < N_VECTORS) {
    241c:	42 31       	cpi	r20, 0x12	; 18
    241e:	b8 f4       	brcc	.+46     	; 0x244e <install+0x34>
        char status;
        DISABLE(status);
    2420:	9f b7       	in	r25, 0x3f	; 63
    2422:	90 78       	andi	r25, 0x80	; 128
    2424:	f8 94       	cli
        otable[i] = obj;
    2426:	50 e0       	ldi	r21, 0x00	; 0
    2428:	44 0f       	add	r20, r20
    242a:	55 1f       	adc	r21, r21
    242c:	da 01       	movw	r26, r20
    242e:	ae 57       	subi	r26, 0x7E	; 126
    2430:	be 4f       	sbci	r27, 0xFE	; 254
    2432:	ed 93       	st	X+, r30
    2434:	fc 93       	st	X, r31
        mtable[i] = m;
    2436:	da 01       	movw	r26, r20
    2438:	a6 5e       	subi	r26, 0xE6	; 230
    243a:	bd 4f       	sbci	r27, 0xFD	; 253
    243c:	6d 93       	st	X+, r22
    243e:	7c 93       	st	X, r23
        obj->wantedBy = INSTALLED_TAG;  // Mark object as subject to synchronization by interrupt disabling
    2440:	21 e0       	ldi	r18, 0x01	; 1
    2442:	30 e0       	ldi	r19, 0x00	; 0
    2444:	33 83       	std	Z+3, r19	; 0x03
    2446:	22 83       	std	Z+2, r18	; 0x02
        ENABLE(status);
    2448:	99 23       	and	r25, r25
    244a:	09 f0       	breq	.+2      	; 0x244e <install+0x34>
    244c:	78 94       	sei
    244e:	08 95       	ret

00002450 <tinytimber>:
    }
}

int tinytimber(Object *obj, Method m, int arg) {
    2450:	8c 01       	movw	r16, r24
    2452:	7b 01       	movw	r14, r22
    2454:	6a 01       	movw	r12, r20
    char status;
    DISABLE(status);
    2456:	8f b7       	in	r24, 0x3f	; 63
    2458:	f8 94       	cli
    initialize();
    245a:	0e 94 d9 05 	call	0xbb2	; 0xbb2 <initialize>
    ENABLE(1);
    245e:	78 94       	sei
    if (m != NULL)
    2460:	e1 14       	cp	r14, r1
    2462:	f1 04       	cpc	r15, r1
    2464:	41 f0       	breq	.+16     	; 0x2476 <tinytimber+0x26>
        //m(obj, arg);
		ASYNC(obj,m,arg);
    2466:	20 e0       	ldi	r18, 0x00	; 0
    2468:	30 e0       	ldi	r19, 0x00	; 0
    246a:	a9 01       	movw	r20, r18
    246c:	60 e0       	ldi	r22, 0x00	; 0
    246e:	70 e0       	ldi	r23, 0x00	; 0
    2470:	cb 01       	movw	r24, r22
    2472:	0e 94 2a 10 	call	0x2054	; 0x2054 <async>
    DISABLE(status);
    2476:	8f b7       	in	r24, 0x3f	; 63
    2478:	f8 94       	cli
    idle();
    247a:	0e 94 31 0f 	call	0x1e62	; 0x1e62 <idle>

0000247e <__subsf3>:
    247e:	50 58       	subi	r21, 0x80	; 128

00002480 <__addsf3>:
    2480:	bb 27       	eor	r27, r27
    2482:	aa 27       	eor	r26, r26
    2484:	0e 94 57 12 	call	0x24ae	; 0x24ae <__addsf3x>
    2488:	0c 94 76 13 	jmp	0x26ec	; 0x26ec <__fp_round>
    248c:	0e 94 68 13 	call	0x26d0	; 0x26d0 <__fp_pscA>
    2490:	38 f0       	brcs	.+14     	; 0x24a0 <__addsf3+0x20>
    2492:	0e 94 6f 13 	call	0x26de	; 0x26de <__fp_pscB>
    2496:	20 f0       	brcs	.+8      	; 0x24a0 <__addsf3+0x20>
    2498:	39 f4       	brne	.+14     	; 0x24a8 <__addsf3+0x28>
    249a:	9f 3f       	cpi	r25, 0xFF	; 255
    249c:	19 f4       	brne	.+6      	; 0x24a4 <__addsf3+0x24>
    249e:	26 f4       	brtc	.+8      	; 0x24a8 <__addsf3+0x28>
    24a0:	0c 94 65 13 	jmp	0x26ca	; 0x26ca <__fp_nan>
    24a4:	0e f4       	brtc	.+2      	; 0x24a8 <__addsf3+0x28>
    24a6:	e0 95       	com	r30
    24a8:	e7 fb       	bst	r30, 7
    24aa:	0c 94 36 13 	jmp	0x266c	; 0x266c <__fp_inf>

000024ae <__addsf3x>:
    24ae:	e9 2f       	mov	r30, r25
    24b0:	0e 94 87 13 	call	0x270e	; 0x270e <__fp_split3>
    24b4:	58 f3       	brcs	.-42     	; 0x248c <__addsf3+0xc>
    24b6:	ba 17       	cp	r27, r26
    24b8:	62 07       	cpc	r22, r18
    24ba:	73 07       	cpc	r23, r19
    24bc:	84 07       	cpc	r24, r20
    24be:	95 07       	cpc	r25, r21
    24c0:	20 f0       	brcs	.+8      	; 0x24ca <__addsf3x+0x1c>
    24c2:	79 f4       	brne	.+30     	; 0x24e2 <__addsf3x+0x34>
    24c4:	a6 f5       	brtc	.+104    	; 0x252e <__addsf3x+0x80>
    24c6:	0c 94 c1 13 	jmp	0x2782	; 0x2782 <__fp_zero>
    24ca:	0e f4       	brtc	.+2      	; 0x24ce <__addsf3x+0x20>
    24cc:	e0 95       	com	r30
    24ce:	0b 2e       	mov	r0, r27
    24d0:	ba 2f       	mov	r27, r26
    24d2:	a0 2d       	mov	r26, r0
    24d4:	0b 01       	movw	r0, r22
    24d6:	b9 01       	movw	r22, r18
    24d8:	90 01       	movw	r18, r0
    24da:	0c 01       	movw	r0, r24
    24dc:	ca 01       	movw	r24, r20
    24de:	a0 01       	movw	r20, r0
    24e0:	11 24       	eor	r1, r1
    24e2:	ff 27       	eor	r31, r31
    24e4:	59 1b       	sub	r21, r25
    24e6:	99 f0       	breq	.+38     	; 0x250e <__addsf3x+0x60>
    24e8:	59 3f       	cpi	r21, 0xF9	; 249
    24ea:	50 f4       	brcc	.+20     	; 0x2500 <__addsf3x+0x52>
    24ec:	50 3e       	cpi	r21, 0xE0	; 224
    24ee:	68 f1       	brcs	.+90     	; 0x254a <__addsf3x+0x9c>
    24f0:	1a 16       	cp	r1, r26
    24f2:	f0 40       	sbci	r31, 0x00	; 0
    24f4:	a2 2f       	mov	r26, r18
    24f6:	23 2f       	mov	r18, r19
    24f8:	34 2f       	mov	r19, r20
    24fa:	44 27       	eor	r20, r20
    24fc:	58 5f       	subi	r21, 0xF8	; 248
    24fe:	f3 cf       	rjmp	.-26     	; 0x24e6 <__addsf3x+0x38>
    2500:	46 95       	lsr	r20
    2502:	37 95       	ror	r19
    2504:	27 95       	ror	r18
    2506:	a7 95       	ror	r26
    2508:	f0 40       	sbci	r31, 0x00	; 0
    250a:	53 95       	inc	r21
    250c:	c9 f7       	brne	.-14     	; 0x2500 <__addsf3x+0x52>
    250e:	7e f4       	brtc	.+30     	; 0x252e <__addsf3x+0x80>
    2510:	1f 16       	cp	r1, r31
    2512:	ba 0b       	sbc	r27, r26
    2514:	62 0b       	sbc	r22, r18
    2516:	73 0b       	sbc	r23, r19
    2518:	84 0b       	sbc	r24, r20
    251a:	ba f0       	brmi	.+46     	; 0x254a <__addsf3x+0x9c>
    251c:	91 50       	subi	r25, 0x01	; 1
    251e:	a1 f0       	breq	.+40     	; 0x2548 <__addsf3x+0x9a>
    2520:	ff 0f       	add	r31, r31
    2522:	bb 1f       	adc	r27, r27
    2524:	66 1f       	adc	r22, r22
    2526:	77 1f       	adc	r23, r23
    2528:	88 1f       	adc	r24, r24
    252a:	c2 f7       	brpl	.-16     	; 0x251c <__addsf3x+0x6e>
    252c:	0e c0       	rjmp	.+28     	; 0x254a <__addsf3x+0x9c>
    252e:	ba 0f       	add	r27, r26
    2530:	62 1f       	adc	r22, r18
    2532:	73 1f       	adc	r23, r19
    2534:	84 1f       	adc	r24, r20
    2536:	48 f4       	brcc	.+18     	; 0x254a <__addsf3x+0x9c>
    2538:	87 95       	ror	r24
    253a:	77 95       	ror	r23
    253c:	67 95       	ror	r22
    253e:	b7 95       	ror	r27
    2540:	f7 95       	ror	r31
    2542:	9e 3f       	cpi	r25, 0xFE	; 254
    2544:	08 f0       	brcs	.+2      	; 0x2548 <__addsf3x+0x9a>
    2546:	b0 cf       	rjmp	.-160    	; 0x24a8 <__addsf3+0x28>
    2548:	93 95       	inc	r25
    254a:	88 0f       	add	r24, r24
    254c:	08 f0       	brcs	.+2      	; 0x2550 <__addsf3x+0xa2>
    254e:	99 27       	eor	r25, r25
    2550:	ee 0f       	add	r30, r30
    2552:	97 95       	ror	r25
    2554:	87 95       	ror	r24
    2556:	08 95       	ret

00002558 <__fixsfsi>:
    2558:	0e 94 b3 12 	call	0x2566	; 0x2566 <__fixunssfsi>
    255c:	68 94       	set
    255e:	b1 11       	cpse	r27, r1
    2560:	0c 94 c2 13 	jmp	0x2784	; 0x2784 <__fp_szero>
    2564:	08 95       	ret

00002566 <__fixunssfsi>:
    2566:	0e 94 8f 13 	call	0x271e	; 0x271e <__fp_splitA>
    256a:	88 f0       	brcs	.+34     	; 0x258e <__fixunssfsi+0x28>
    256c:	9f 57       	subi	r25, 0x7F	; 127
    256e:	98 f0       	brcs	.+38     	; 0x2596 <__fixunssfsi+0x30>
    2570:	b9 2f       	mov	r27, r25
    2572:	99 27       	eor	r25, r25
    2574:	b7 51       	subi	r27, 0x17	; 23
    2576:	b0 f0       	brcs	.+44     	; 0x25a4 <__fixunssfsi+0x3e>
    2578:	e1 f0       	breq	.+56     	; 0x25b2 <__fixunssfsi+0x4c>
    257a:	66 0f       	add	r22, r22
    257c:	77 1f       	adc	r23, r23
    257e:	88 1f       	adc	r24, r24
    2580:	99 1f       	adc	r25, r25
    2582:	1a f0       	brmi	.+6      	; 0x258a <__fixunssfsi+0x24>
    2584:	ba 95       	dec	r27
    2586:	c9 f7       	brne	.-14     	; 0x257a <__fixunssfsi+0x14>
    2588:	14 c0       	rjmp	.+40     	; 0x25b2 <__fixunssfsi+0x4c>
    258a:	b1 30       	cpi	r27, 0x01	; 1
    258c:	91 f0       	breq	.+36     	; 0x25b2 <__fixunssfsi+0x4c>
    258e:	0e 94 c1 13 	call	0x2782	; 0x2782 <__fp_zero>
    2592:	b1 e0       	ldi	r27, 0x01	; 1
    2594:	08 95       	ret
    2596:	0c 94 c1 13 	jmp	0x2782	; 0x2782 <__fp_zero>
    259a:	67 2f       	mov	r22, r23
    259c:	78 2f       	mov	r23, r24
    259e:	88 27       	eor	r24, r24
    25a0:	b8 5f       	subi	r27, 0xF8	; 248
    25a2:	39 f0       	breq	.+14     	; 0x25b2 <__fixunssfsi+0x4c>
    25a4:	b9 3f       	cpi	r27, 0xF9	; 249
    25a6:	cc f3       	brlt	.-14     	; 0x259a <__fixunssfsi+0x34>
    25a8:	86 95       	lsr	r24
    25aa:	77 95       	ror	r23
    25ac:	67 95       	ror	r22
    25ae:	b3 95       	inc	r27
    25b0:	d9 f7       	brne	.-10     	; 0x25a8 <__fixunssfsi+0x42>
    25b2:	3e f4       	brtc	.+14     	; 0x25c2 <__fixunssfsi+0x5c>
    25b4:	90 95       	com	r25
    25b6:	80 95       	com	r24
    25b8:	70 95       	com	r23
    25ba:	61 95       	neg	r22
    25bc:	7f 4f       	sbci	r23, 0xFF	; 255
    25be:	8f 4f       	sbci	r24, 0xFF	; 255
    25c0:	9f 4f       	sbci	r25, 0xFF	; 255
    25c2:	08 95       	ret

000025c4 <__floatunsisf>:
    25c4:	e8 94       	clt
    25c6:	09 c0       	rjmp	.+18     	; 0x25da <__floatsisf+0x12>

000025c8 <__floatsisf>:
    25c8:	97 fb       	bst	r25, 7
    25ca:	3e f4       	brtc	.+14     	; 0x25da <__floatsisf+0x12>
    25cc:	90 95       	com	r25
    25ce:	80 95       	com	r24
    25d0:	70 95       	com	r23
    25d2:	61 95       	neg	r22
    25d4:	7f 4f       	sbci	r23, 0xFF	; 255
    25d6:	8f 4f       	sbci	r24, 0xFF	; 255
    25d8:	9f 4f       	sbci	r25, 0xFF	; 255
    25da:	99 23       	and	r25, r25
    25dc:	a9 f0       	breq	.+42     	; 0x2608 <__floatsisf+0x40>
    25de:	f9 2f       	mov	r31, r25
    25e0:	96 e9       	ldi	r25, 0x96	; 150
    25e2:	bb 27       	eor	r27, r27
    25e4:	93 95       	inc	r25
    25e6:	f6 95       	lsr	r31
    25e8:	87 95       	ror	r24
    25ea:	77 95       	ror	r23
    25ec:	67 95       	ror	r22
    25ee:	b7 95       	ror	r27
    25f0:	f1 11       	cpse	r31, r1
    25f2:	f8 cf       	rjmp	.-16     	; 0x25e4 <__floatsisf+0x1c>
    25f4:	fa f4       	brpl	.+62     	; 0x2634 <__floatsisf+0x6c>
    25f6:	bb 0f       	add	r27, r27
    25f8:	11 f4       	brne	.+4      	; 0x25fe <__floatsisf+0x36>
    25fa:	60 ff       	sbrs	r22, 0
    25fc:	1b c0       	rjmp	.+54     	; 0x2634 <__floatsisf+0x6c>
    25fe:	6f 5f       	subi	r22, 0xFF	; 255
    2600:	7f 4f       	sbci	r23, 0xFF	; 255
    2602:	8f 4f       	sbci	r24, 0xFF	; 255
    2604:	9f 4f       	sbci	r25, 0xFF	; 255
    2606:	16 c0       	rjmp	.+44     	; 0x2634 <__floatsisf+0x6c>
    2608:	88 23       	and	r24, r24
    260a:	11 f0       	breq	.+4      	; 0x2610 <__floatsisf+0x48>
    260c:	96 e9       	ldi	r25, 0x96	; 150
    260e:	11 c0       	rjmp	.+34     	; 0x2632 <__floatsisf+0x6a>
    2610:	77 23       	and	r23, r23
    2612:	21 f0       	breq	.+8      	; 0x261c <__floatsisf+0x54>
    2614:	9e e8       	ldi	r25, 0x8E	; 142
    2616:	87 2f       	mov	r24, r23
    2618:	76 2f       	mov	r23, r22
    261a:	05 c0       	rjmp	.+10     	; 0x2626 <__floatsisf+0x5e>
    261c:	66 23       	and	r22, r22
    261e:	71 f0       	breq	.+28     	; 0x263c <__floatsisf+0x74>
    2620:	96 e8       	ldi	r25, 0x86	; 134
    2622:	86 2f       	mov	r24, r22
    2624:	70 e0       	ldi	r23, 0x00	; 0
    2626:	60 e0       	ldi	r22, 0x00	; 0
    2628:	2a f0       	brmi	.+10     	; 0x2634 <__floatsisf+0x6c>
    262a:	9a 95       	dec	r25
    262c:	66 0f       	add	r22, r22
    262e:	77 1f       	adc	r23, r23
    2630:	88 1f       	adc	r24, r24
    2632:	da f7       	brpl	.-10     	; 0x262a <__floatsisf+0x62>
    2634:	88 0f       	add	r24, r24
    2636:	96 95       	lsr	r25
    2638:	87 95       	ror	r24
    263a:	97 f9       	bld	r25, 7
    263c:	08 95       	ret

0000263e <floor>:
    263e:	0e 94 a9 13 	call	0x2752	; 0x2752 <__fp_trunc>
    2642:	90 f0       	brcs	.+36     	; 0x2668 <floor+0x2a>
    2644:	9f 37       	cpi	r25, 0x7F	; 127
    2646:	48 f4       	brcc	.+18     	; 0x265a <floor+0x1c>
    2648:	91 11       	cpse	r25, r1
    264a:	16 f0       	brts	.+4      	; 0x2650 <floor+0x12>
    264c:	0c 94 c2 13 	jmp	0x2784	; 0x2784 <__fp_szero>
    2650:	60 e0       	ldi	r22, 0x00	; 0
    2652:	70 e0       	ldi	r23, 0x00	; 0
    2654:	80 e8       	ldi	r24, 0x80	; 128
    2656:	9f eb       	ldi	r25, 0xBF	; 191
    2658:	08 95       	ret
    265a:	26 f4       	brtc	.+8      	; 0x2664 <floor+0x26>
    265c:	1b 16       	cp	r1, r27
    265e:	61 1d       	adc	r22, r1
    2660:	71 1d       	adc	r23, r1
    2662:	81 1d       	adc	r24, r1
    2664:	0c 94 3c 13 	jmp	0x2678	; 0x2678 <__fp_mintl>
    2668:	0c 94 57 13 	jmp	0x26ae	; 0x26ae <__fp_mpack>

0000266c <__fp_inf>:
    266c:	97 f9       	bld	r25, 7
    266e:	9f 67       	ori	r25, 0x7F	; 127
    2670:	80 e8       	ldi	r24, 0x80	; 128
    2672:	70 e0       	ldi	r23, 0x00	; 0
    2674:	60 e0       	ldi	r22, 0x00	; 0
    2676:	08 95       	ret

00002678 <__fp_mintl>:
    2678:	88 23       	and	r24, r24
    267a:	71 f4       	brne	.+28     	; 0x2698 <__fp_mintl+0x20>
    267c:	77 23       	and	r23, r23
    267e:	21 f0       	breq	.+8      	; 0x2688 <__fp_mintl+0x10>
    2680:	98 50       	subi	r25, 0x08	; 8
    2682:	87 2b       	or	r24, r23
    2684:	76 2f       	mov	r23, r22
    2686:	07 c0       	rjmp	.+14     	; 0x2696 <__fp_mintl+0x1e>
    2688:	66 23       	and	r22, r22
    268a:	11 f4       	brne	.+4      	; 0x2690 <__fp_mintl+0x18>
    268c:	99 27       	eor	r25, r25
    268e:	0d c0       	rjmp	.+26     	; 0x26aa <__fp_mintl+0x32>
    2690:	90 51       	subi	r25, 0x10	; 16
    2692:	86 2b       	or	r24, r22
    2694:	70 e0       	ldi	r23, 0x00	; 0
    2696:	60 e0       	ldi	r22, 0x00	; 0
    2698:	2a f0       	brmi	.+10     	; 0x26a4 <__fp_mintl+0x2c>
    269a:	9a 95       	dec	r25
    269c:	66 0f       	add	r22, r22
    269e:	77 1f       	adc	r23, r23
    26a0:	88 1f       	adc	r24, r24
    26a2:	da f7       	brpl	.-10     	; 0x269a <__fp_mintl+0x22>
    26a4:	88 0f       	add	r24, r24
    26a6:	96 95       	lsr	r25
    26a8:	87 95       	ror	r24
    26aa:	97 f9       	bld	r25, 7
    26ac:	08 95       	ret

000026ae <__fp_mpack>:
    26ae:	9f 3f       	cpi	r25, 0xFF	; 255
    26b0:	31 f0       	breq	.+12     	; 0x26be <__fp_mpack_finite+0xc>

000026b2 <__fp_mpack_finite>:
    26b2:	91 50       	subi	r25, 0x01	; 1
    26b4:	20 f4       	brcc	.+8      	; 0x26be <__fp_mpack_finite+0xc>
    26b6:	87 95       	ror	r24
    26b8:	77 95       	ror	r23
    26ba:	67 95       	ror	r22
    26bc:	b7 95       	ror	r27
    26be:	88 0f       	add	r24, r24
    26c0:	91 1d       	adc	r25, r1
    26c2:	96 95       	lsr	r25
    26c4:	87 95       	ror	r24
    26c6:	97 f9       	bld	r25, 7
    26c8:	08 95       	ret

000026ca <__fp_nan>:
    26ca:	9f ef       	ldi	r25, 0xFF	; 255
    26cc:	80 ec       	ldi	r24, 0xC0	; 192
    26ce:	08 95       	ret

000026d0 <__fp_pscA>:
    26d0:	00 24       	eor	r0, r0
    26d2:	0a 94       	dec	r0
    26d4:	16 16       	cp	r1, r22
    26d6:	17 06       	cpc	r1, r23
    26d8:	18 06       	cpc	r1, r24
    26da:	09 06       	cpc	r0, r25
    26dc:	08 95       	ret

000026de <__fp_pscB>:
    26de:	00 24       	eor	r0, r0
    26e0:	0a 94       	dec	r0
    26e2:	12 16       	cp	r1, r18
    26e4:	13 06       	cpc	r1, r19
    26e6:	14 06       	cpc	r1, r20
    26e8:	05 06       	cpc	r0, r21
    26ea:	08 95       	ret

000026ec <__fp_round>:
    26ec:	09 2e       	mov	r0, r25
    26ee:	03 94       	inc	r0
    26f0:	00 0c       	add	r0, r0
    26f2:	11 f4       	brne	.+4      	; 0x26f8 <__fp_round+0xc>
    26f4:	88 23       	and	r24, r24
    26f6:	52 f0       	brmi	.+20     	; 0x270c <__fp_round+0x20>
    26f8:	bb 0f       	add	r27, r27
    26fa:	40 f4       	brcc	.+16     	; 0x270c <__fp_round+0x20>
    26fc:	bf 2b       	or	r27, r31
    26fe:	11 f4       	brne	.+4      	; 0x2704 <__fp_round+0x18>
    2700:	60 ff       	sbrs	r22, 0
    2702:	04 c0       	rjmp	.+8      	; 0x270c <__fp_round+0x20>
    2704:	6f 5f       	subi	r22, 0xFF	; 255
    2706:	7f 4f       	sbci	r23, 0xFF	; 255
    2708:	8f 4f       	sbci	r24, 0xFF	; 255
    270a:	9f 4f       	sbci	r25, 0xFF	; 255
    270c:	08 95       	ret

0000270e <__fp_split3>:
    270e:	57 fd       	sbrc	r21, 7
    2710:	90 58       	subi	r25, 0x80	; 128
    2712:	44 0f       	add	r20, r20
    2714:	55 1f       	adc	r21, r21
    2716:	59 f0       	breq	.+22     	; 0x272e <__fp_splitA+0x10>
    2718:	5f 3f       	cpi	r21, 0xFF	; 255
    271a:	71 f0       	breq	.+28     	; 0x2738 <__fp_splitA+0x1a>
    271c:	47 95       	ror	r20

0000271e <__fp_splitA>:
    271e:	88 0f       	add	r24, r24
    2720:	97 fb       	bst	r25, 7
    2722:	99 1f       	adc	r25, r25
    2724:	61 f0       	breq	.+24     	; 0x273e <__fp_splitA+0x20>
    2726:	9f 3f       	cpi	r25, 0xFF	; 255
    2728:	79 f0       	breq	.+30     	; 0x2748 <__fp_splitA+0x2a>
    272a:	87 95       	ror	r24
    272c:	08 95       	ret
    272e:	12 16       	cp	r1, r18
    2730:	13 06       	cpc	r1, r19
    2732:	14 06       	cpc	r1, r20
    2734:	55 1f       	adc	r21, r21
    2736:	f2 cf       	rjmp	.-28     	; 0x271c <__fp_split3+0xe>
    2738:	46 95       	lsr	r20
    273a:	f1 df       	rcall	.-30     	; 0x271e <__fp_splitA>
    273c:	08 c0       	rjmp	.+16     	; 0x274e <__fp_splitA+0x30>
    273e:	16 16       	cp	r1, r22
    2740:	17 06       	cpc	r1, r23
    2742:	18 06       	cpc	r1, r24
    2744:	99 1f       	adc	r25, r25
    2746:	f1 cf       	rjmp	.-30     	; 0x272a <__fp_splitA+0xc>
    2748:	86 95       	lsr	r24
    274a:	71 05       	cpc	r23, r1
    274c:	61 05       	cpc	r22, r1
    274e:	08 94       	sec
    2750:	08 95       	ret

00002752 <__fp_trunc>:
    2752:	0e 94 8f 13 	call	0x271e	; 0x271e <__fp_splitA>
    2756:	a0 f0       	brcs	.+40     	; 0x2780 <__fp_trunc+0x2e>
    2758:	be e7       	ldi	r27, 0x7E	; 126
    275a:	b9 17       	cp	r27, r25
    275c:	88 f4       	brcc	.+34     	; 0x2780 <__fp_trunc+0x2e>
    275e:	bb 27       	eor	r27, r27
    2760:	9f 38       	cpi	r25, 0x8F	; 143
    2762:	60 f4       	brcc	.+24     	; 0x277c <__fp_trunc+0x2a>
    2764:	16 16       	cp	r1, r22
    2766:	b1 1d       	adc	r27, r1
    2768:	67 2f       	mov	r22, r23
    276a:	78 2f       	mov	r23, r24
    276c:	88 27       	eor	r24, r24
    276e:	98 5f       	subi	r25, 0xF8	; 248
    2770:	f7 cf       	rjmp	.-18     	; 0x2760 <__fp_trunc+0xe>
    2772:	86 95       	lsr	r24
    2774:	77 95       	ror	r23
    2776:	67 95       	ror	r22
    2778:	b1 1d       	adc	r27, r1
    277a:	93 95       	inc	r25
    277c:	96 39       	cpi	r25, 0x96	; 150
    277e:	c8 f3       	brcs	.-14     	; 0x2772 <__fp_trunc+0x20>
    2780:	08 95       	ret

00002782 <__fp_zero>:
    2782:	e8 94       	clt

00002784 <__fp_szero>:
    2784:	bb 27       	eor	r27, r27
    2786:	66 27       	eor	r22, r22
    2788:	77 27       	eor	r23, r23
    278a:	cb 01       	movw	r24, r22
    278c:	97 f9       	bld	r25, 7
    278e:	08 95       	ret

00002790 <__divmodsi4>:
    2790:	05 2e       	mov	r0, r21
    2792:	97 fb       	bst	r25, 7
    2794:	1e f4       	brtc	.+6      	; 0x279c <__divmodsi4+0xc>
    2796:	00 94       	com	r0
    2798:	0e 94 df 13 	call	0x27be	; 0x27be <__negsi2>
    279c:	57 fd       	sbrc	r21, 7
    279e:	07 d0       	rcall	.+14     	; 0x27ae <__divmodsi4_neg2>
    27a0:	0e 94 e7 13 	call	0x27ce	; 0x27ce <__udivmodsi4>
    27a4:	07 fc       	sbrc	r0, 7
    27a6:	03 d0       	rcall	.+6      	; 0x27ae <__divmodsi4_neg2>
    27a8:	4e f4       	brtc	.+18     	; 0x27bc <__divmodsi4_exit>
    27aa:	0c 94 df 13 	jmp	0x27be	; 0x27be <__negsi2>

000027ae <__divmodsi4_neg2>:
    27ae:	50 95       	com	r21
    27b0:	40 95       	com	r20
    27b2:	30 95       	com	r19
    27b4:	21 95       	neg	r18
    27b6:	3f 4f       	sbci	r19, 0xFF	; 255
    27b8:	4f 4f       	sbci	r20, 0xFF	; 255
    27ba:	5f 4f       	sbci	r21, 0xFF	; 255

000027bc <__divmodsi4_exit>:
    27bc:	08 95       	ret

000027be <__negsi2>:
    27be:	90 95       	com	r25
    27c0:	80 95       	com	r24
    27c2:	70 95       	com	r23
    27c4:	61 95       	neg	r22
    27c6:	7f 4f       	sbci	r23, 0xFF	; 255
    27c8:	8f 4f       	sbci	r24, 0xFF	; 255
    27ca:	9f 4f       	sbci	r25, 0xFF	; 255
    27cc:	08 95       	ret

000027ce <__udivmodsi4>:
    27ce:	a1 e2       	ldi	r26, 0x21	; 33
    27d0:	1a 2e       	mov	r1, r26
    27d2:	aa 1b       	sub	r26, r26
    27d4:	bb 1b       	sub	r27, r27
    27d6:	fd 01       	movw	r30, r26
    27d8:	0d c0       	rjmp	.+26     	; 0x27f4 <__udivmodsi4_ep>

000027da <__udivmodsi4_loop>:
    27da:	aa 1f       	adc	r26, r26
    27dc:	bb 1f       	adc	r27, r27
    27de:	ee 1f       	adc	r30, r30
    27e0:	ff 1f       	adc	r31, r31
    27e2:	a2 17       	cp	r26, r18
    27e4:	b3 07       	cpc	r27, r19
    27e6:	e4 07       	cpc	r30, r20
    27e8:	f5 07       	cpc	r31, r21
    27ea:	20 f0       	brcs	.+8      	; 0x27f4 <__udivmodsi4_ep>
    27ec:	a2 1b       	sub	r26, r18
    27ee:	b3 0b       	sbc	r27, r19
    27f0:	e4 0b       	sbc	r30, r20
    27f2:	f5 0b       	sbc	r31, r21

000027f4 <__udivmodsi4_ep>:
    27f4:	66 1f       	adc	r22, r22
    27f6:	77 1f       	adc	r23, r23
    27f8:	88 1f       	adc	r24, r24
    27fa:	99 1f       	adc	r25, r25
    27fc:	1a 94       	dec	r1
    27fe:	69 f7       	brne	.-38     	; 0x27da <__udivmodsi4_loop>
    2800:	60 95       	com	r22
    2802:	70 95       	com	r23
    2804:	80 95       	com	r24
    2806:	90 95       	com	r25
    2808:	9b 01       	movw	r18, r22
    280a:	ac 01       	movw	r20, r24
    280c:	bd 01       	movw	r22, r26
    280e:	cf 01       	movw	r24, r30
    2810:	08 95       	ret

00002812 <setjmp>:
    2812:	dc 01       	movw	r26, r24
    2814:	2d 92       	st	X+, r2
    2816:	3d 92       	st	X+, r3
    2818:	4d 92       	st	X+, r4
    281a:	5d 92       	st	X+, r5
    281c:	6d 92       	st	X+, r6
    281e:	7d 92       	st	X+, r7
    2820:	8d 92       	st	X+, r8
    2822:	9d 92       	st	X+, r9
    2824:	ad 92       	st	X+, r10
    2826:	bd 92       	st	X+, r11
    2828:	cd 92       	st	X+, r12
    282a:	dd 92       	st	X+, r13
    282c:	ed 92       	st	X+, r14
    282e:	fd 92       	st	X+, r15
    2830:	0d 93       	st	X+, r16
    2832:	1d 93       	st	X+, r17
    2834:	cd 93       	st	X+, r28
    2836:	dd 93       	st	X+, r29
    2838:	ff 91       	pop	r31
    283a:	ef 91       	pop	r30
    283c:	8d b7       	in	r24, 0x3d	; 61
    283e:	8d 93       	st	X+, r24
    2840:	8e b7       	in	r24, 0x3e	; 62
    2842:	8d 93       	st	X+, r24
    2844:	8f b7       	in	r24, 0x3f	; 63
    2846:	8d 93       	st	X+, r24
    2848:	ed 93       	st	X+, r30
    284a:	fd 93       	st	X+, r31
    284c:	88 27       	eor	r24, r24
    284e:	99 27       	eor	r25, r25
    2850:	09 94       	ijmp

00002852 <longjmp>:
    2852:	dc 01       	movw	r26, r24
    2854:	cb 01       	movw	r24, r22
    2856:	81 30       	cpi	r24, 0x01	; 1
    2858:	91 05       	cpc	r25, r1
    285a:	81 1d       	adc	r24, r1
    285c:	2d 90       	ld	r2, X+
    285e:	3d 90       	ld	r3, X+
    2860:	4d 90       	ld	r4, X+
    2862:	5d 90       	ld	r5, X+
    2864:	6d 90       	ld	r6, X+
    2866:	7d 90       	ld	r7, X+
    2868:	8d 90       	ld	r8, X+
    286a:	9d 90       	ld	r9, X+
    286c:	ad 90       	ld	r10, X+
    286e:	bd 90       	ld	r11, X+
    2870:	cd 90       	ld	r12, X+
    2872:	dd 90       	ld	r13, X+
    2874:	ed 90       	ld	r14, X+
    2876:	fd 90       	ld	r15, X+
    2878:	0d 91       	ld	r16, X+
    287a:	1d 91       	ld	r17, X+
    287c:	cd 91       	ld	r28, X+
    287e:	dd 91       	ld	r29, X+
    2880:	ed 91       	ld	r30, X+
    2882:	fd 91       	ld	r31, X+
    2884:	0d 90       	ld	r0, X+
    2886:	f8 94       	cli
    2888:	fe bf       	out	0x3e, r31	; 62
    288a:	0f be       	out	0x3f, r0	; 63
    288c:	ed bf       	out	0x3d, r30	; 61
    288e:	ed 91       	ld	r30, X+
    2890:	fd 91       	ld	r31, X+
    2892:	09 94       	ijmp

00002894 <_exit>:
    2894:	f8 94       	cli

00002896 <__stop_program>:
    2896:	ff cf       	rjmp	.-2      	; 0x2896 <__stop_program>
